<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on </title>
        <link>http://localhost:1313/post/</link>
        <description>Recent content in Posts on </description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>clp</copyright>
        <lastBuildDate>Sat, 08 Mar 2025 00:48:44 +0800</lastBuildDate><atom:link href="http://localhost:1313/post/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>JS</title>
        <link>http://localhost:1313/p/js/</link>
        <pubDate>Sat, 08 Mar 2025 00:48:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/js/</guid>
        <description>&lt;p&gt;JavaScript 函数被放置于 HTML 页面的 &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 部分。
该函数会在按钮被点击时调用
JavaScript 函数被放置于 HTML 页面的 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 部分。
该函数会在按钮被点击时调用：
外部脚本&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;myScript.js&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在外部文件中放置脚本有如下优势：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分离了 HTML 和代码&lt;/li&gt;
&lt;li&gt;使 HTML 和 JavaScript 更易于阅读和维护&lt;/li&gt;
&lt;li&gt;已缓存的 JavaScript 文件可加速页面加载&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如需向一张页面添加多个脚本文件 - 请使用多个 script 标签：&lt;/p&gt;
&lt;h3 id=&#34;使用-documentwrite&#34;&gt;使用 document.write()
&lt;/h3&gt;&lt;p&gt;**注意：**在 HTML 文档完全加载后使用 &lt;code&gt;document.write()&lt;/code&gt; 将&lt;em&gt;删除所有已有的 HTML&lt;/em&gt; ：&lt;/p&gt;
&lt;h3 id=&#34;使用-windowalert&#34;&gt;使用 window.alert()
&lt;/h3&gt;&lt;p&gt;使用警告框来显示数据：&lt;/p&gt;
&lt;h3 id=&#34;使用-consolelog&#34;&gt;使用 console.log()
&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;console.log()&lt;/code&gt; 方法来显示数据。&lt;/p&gt;
&lt;h3 id=&#34;声明函数&#34;&gt;声明函数
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;myFunction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;demo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;innerHTML&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello Kitty.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;myDIV&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;innerHTML&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;How are you?&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;javascript-变量&#34;&gt;JavaScript 变量
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;声明变量&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;carName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;不带有值的变量&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;它的值将是&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;undefined&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;重复声明&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;变量&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;如果再次声明某个&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;变量&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;将不会丢它的值&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;在这两条语句执行后&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;变量&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;carName&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;的值仍然是&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;porsche&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;carName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;porsche&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;carName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;javascript-注释&#34;&gt;JavaScript 注释
&lt;/h3&gt;&lt;p&gt;双斜杠 &lt;code&gt;//&lt;/code&gt; 或 &lt;code&gt;/*&lt;/code&gt; 与 *&lt;em&gt;/&lt;/em&gt; 之间的代码被视为&lt;em&gt;注释&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;注释会被忽略，不会被执行：&lt;/p&gt;
&lt;h3 id=&#34;javascript-对大小写敏感&#34;&gt;JavaScript 对大小写敏感
&lt;/h3&gt;&lt;p&gt;JavaScript 程序员倾向于使用以小写字母开头的驼峰大小写：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;firstName, lastName, masterCard, interCity
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;javascript-块作用域&#34;&gt;JavaScript 块作用域
&lt;/h3&gt;&lt;p&gt;通过 &lt;code&gt;var&lt;/code&gt; 关键词声明的变量没有块&lt;em&gt;作用域&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;在块 &lt;em&gt;{}&lt;/em&gt; 内声明的变量可以从块之外进行访问。&lt;/p&gt;
&lt;p&gt;可以使用 &lt;code&gt;let&lt;/code&gt; 关键词声明拥有块作用域的变量。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 此处不可以使用 x
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;重新声明变量&#34;&gt;重新声明变量
&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;var&lt;/code&gt; 关键字重新声明变量会带来问题。&lt;/p&gt;
&lt;h3 id=&#34;在块中重新声明变量也将重新声明块外的变量&#34;&gt;在块中重新声明变量也将重新声明块外的变量：
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 此处 x 为 10
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// 此处 x 为 6
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 此处 x 为 6
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;循环作用域&#34;&gt;循环作用域
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// 一些语句
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 此处，i 为 10
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// 一些语句
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 此处 i 为 7
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在第一个例子中，在循环中使用的变量使用 &lt;code&gt;var&lt;/code&gt; 重新声明了循环之外的变量。&lt;/p&gt;
&lt;p&gt;在第二个例子中，在循环中使用的变量使用 &lt;code&gt;let&lt;/code&gt; 并没有重新声明循环外的变量。&lt;/p&gt;
&lt;p&gt;如果在循环中用 &lt;code&gt;let&lt;/code&gt; 声明了变量 i，那么只有在循环内，变量 i 才是可见的。&lt;/p&gt;
&lt;h3 id=&#34;函数作用域&#34;&gt;函数作用域
&lt;/h3&gt;&lt;p&gt;在函数内声明变量时，使用 &lt;code&gt;var&lt;/code&gt; 和 &lt;code&gt;let&lt;/code&gt; 很相似。&lt;/p&gt;
&lt;p&gt;它们都有&lt;em&gt;函数作用域&lt;/em&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;myFunction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;carName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;porsche&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 函数作用域
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;myFunction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;carName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;porsche&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 函数作用域
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;全局作用域&#34;&gt;全局作用域
&lt;/h3&gt;&lt;p&gt;如果在块外声明声明，那么 &lt;code&gt;var&lt;/code&gt; 和 &lt;code&gt;let&lt;/code&gt; 也很相似。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// 全局作用域
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// 全局作用域
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;html-中的全局变量&#34;&gt;HTML 中的全局变量
&lt;/h3&gt;&lt;p&gt;使用 JavaScript 的情况下，全局作用域是 JavaScript 环境。&lt;/p&gt;
&lt;p&gt;在 HTML 中，全局作用域是 window 对象。&lt;/p&gt;
&lt;p&gt;通过 &lt;code&gt;var&lt;/code&gt; 关键词定义的全局变量属于 window 对象：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;carName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;porsche&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 此处的代码可使用 window.carName
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;重新声明&#34;&gt;重新声明
&lt;/h3&gt;&lt;p&gt;允许在程序的任何位置使用 &lt;code&gt;var&lt;/code&gt; 重新声明 JavaScript 变量：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 现在，x 为 10
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 现在，x 为 6
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在相同的作用域，或在相同的块中，通过 &lt;code&gt;let&lt;/code&gt; 重新声明一个 &lt;code&gt;var&lt;/code&gt; 变量是不允许的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// 允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// 不允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 不允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在相同的作用域，或在相同的块中，通过 &lt;code&gt;let&lt;/code&gt; 重新声明一个 &lt;code&gt;let&lt;/code&gt; 变量是不允许的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// 允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// 不允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 不允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在相同的作用域，或在相同的块中，通过 &lt;code&gt;var&lt;/code&gt; 重新声明一个 &lt;code&gt;let&lt;/code&gt; 变量是不允许的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// 允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// 不允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 不允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在不同的作用域或块中，通过 &lt;code&gt;let&lt;/code&gt; 重新声明变量是允许的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// 允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;提升&#34;&gt;提升
&lt;/h3&gt;&lt;p&gt;通过 &lt;code&gt;var&lt;/code&gt; 声明的变量会&lt;em&gt;提升&lt;/em&gt;到顶端。&lt;/p&gt;
&lt;p&gt;您可以在声明变量之前就使用它.&lt;/p&gt;
&lt;p&gt;通过 &lt;code&gt;let&lt;/code&gt; 定义的变量不会被提升到顶端。在声明 &lt;code&gt;let&lt;/code&gt; 变量之前就使用它会导致 ReferenceError。&lt;/p&gt;
&lt;p&gt;通过 &lt;code&gt;const&lt;/code&gt; 定义的变量不会被提升到顶端。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;const&lt;/code&gt; 变量不能在声明之前使用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 在此处，您可以使用 carName
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;carName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;块作用域&#34;&gt;块作用域
&lt;/h3&gt;&lt;p&gt;在&lt;em&gt;块作用域&lt;/em&gt;内使用 &lt;code&gt;const&lt;/code&gt; 声明的变量与 &lt;code&gt;let&lt;/code&gt; 变量相似。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 此处，x 为 10
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// 此处，x 为 6
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 此处，x 为 10
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;JavaScript &lt;code&gt;const&lt;/code&gt; 变量必须在声明时赋值：&lt;/p&gt;
&lt;h4 id=&#34;不是真正的常数&#34;&gt;不是真正的常数
&lt;/h4&gt;&lt;p&gt;关键字 &lt;code&gt;const&lt;/code&gt; 有一定的误导性。它没有定义常量值。它定义了对值的常量引用。因此，我们不能更改常量原始值，但我们可以更改常量对象的属性。&lt;/p&gt;
&lt;p&gt;如果我们将一个原始值赋给常量，我们就不能改变原始值：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;PI&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;3.141592653589793&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;PI&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;3.14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;// 会出错
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;PI&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;PI&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 也会出错
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;常量对象可以更改&#34;&gt;常量对象可以更改
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 您可以创建 const 对象：
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;car&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;porsche&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;911&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Black&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 您可以更改属性：
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;car&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;color&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;White&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 您可以添加属性：
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;car&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;owner&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Bill&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;常量数组可以更改&#34;&gt;常量数组可以更改
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 您可以创建常量数组：
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cars&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Audi&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;BMW&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;porsche&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 您可以更改元素：
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Honda&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 您可以添加元素：
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Volvo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;重新声明-1&#34;&gt;重新声明
&lt;/h4&gt;&lt;p&gt;在同一作用域或块中，不允许将已有的 &lt;code&gt;var&lt;/code&gt; 或 &lt;code&gt;let&lt;/code&gt; 变量重新声明或重新赋值给 &lt;code&gt;const&lt;/code&gt;：在同一作用域或块中，为已有的 const 变量重新声明声明或赋值是不允许的：在另外的作用域或块中重新声明 &lt;code&gt;const&lt;/code&gt; 是允许的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//  允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//  允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//  允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;         &lt;span class=&#34;c1&#34;&gt;// 允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// 不允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;// 允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 不允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// 允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// 不允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;             &lt;span class=&#34;c1&#34;&gt;// 不允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;         &lt;span class=&#34;c1&#34;&gt;// 不允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;         &lt;span class=&#34;c1&#34;&gt;// 不允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 不允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;         &lt;span class=&#34;c1&#34;&gt;// 不允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;// 不允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;// 不允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// 允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 允许
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;运算符&#34;&gt;运算符
&lt;/h3&gt;&lt;h4 id=&#34;求幂-&#34;&gt;求幂 **
&lt;/h4&gt;&lt;h4 id=&#34;取余-&#34;&gt;取余 %
&lt;/h4&gt;&lt;h4 id=&#34;类型-typeof-x&#34;&gt;类型 typeof x
&lt;/h4&gt;&lt;h3 id=&#34;数据类型&#34;&gt;数据类型
&lt;/h3&gt;&lt;p&gt;当数值和字符串相加时，JavaScript 将把数值视作字符串。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;911&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Porsche&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;911&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Porsche&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;911&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Porsche&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;    &lt;span class=&#34;mi&#34;&gt;918&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Porsche&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Porsche&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;911&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;nx&#34;&gt;Porsche9117&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;由于第一个操作数是字符串&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;因此所有操作数都被视为字符串&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;javascript-拥有动态类型&#34;&gt;JavaScript 拥有动态类型
&lt;/h3&gt;&lt;p&gt;JavaScript 拥有动态类型。这意味着相同变量可用作不同类型：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;               &lt;span class=&#34;c1&#34;&gt;// 现在 x 是 undefined
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;           &lt;span class=&#34;c1&#34;&gt;// 现在 x 是数值
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Bill&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;// 现在 x 是字符串值
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;空值-undefined-null&#34;&gt;空值 undefined null
&lt;/h3&gt;&lt;p&gt;空值与 &lt;code&gt;undefined&lt;/code&gt; 不是一回事。空的字符串变量既有值也有类型。&lt;/p&gt;
&lt;p&gt;在 JavaScript 中，&lt;code&gt;null&lt;/code&gt; 是 &amp;ldquo;nothing&amp;rdquo;。它被看做不存在的事物。&lt;/p&gt;
&lt;p&gt;不幸的是，在 JavaScript 中，&lt;code&gt;null&lt;/code&gt; 的数据类型是对象。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Undefined&lt;/code&gt; 与 &lt;code&gt;null&lt;/code&gt; 的值相等，但类型不相等：&lt;/p&gt;
&lt;h3 id=&#34;比较&#34;&gt;比较
&lt;/h3&gt;&lt;p&gt;=== 比较类型和值&lt;/p&gt;
&lt;p&gt;== 比较值&lt;/p&gt;
&lt;h3 id=&#34;函数&#34;&gt;函数
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;参数&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;参数&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;参数&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;要执行的代码&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;toCelsius&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fahrenheit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fahrenheit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;demo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;innerHTML&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;toCelsius&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;77&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;toCelsius&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;引用的是函数对象&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;而&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;toCelsius&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;引用的是函数结果&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;局部变量&#34;&gt;局部变量
&lt;/h3&gt;&lt;p&gt;在 JavaScript 函数中声明的变量，会成为函数的&lt;em&gt;局部变量&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;局部变量只能在函数内访问。&lt;/p&gt;
&lt;h3 id=&#34;js对象&#34;&gt;JS对象
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;car&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;porsche&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;911&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;white&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;对象也可以有&lt;em&gt;方法&lt;/em&gt;。方法是在对象上执行的&lt;em&gt;动作&lt;/em&gt;。方法以&lt;em&gt;函数定义&lt;/em&gt;被存储在属性中。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Bill&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;lastName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Gates&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;678&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;fullName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;firstName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;lastName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;在函数定义中&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;引用该函数的&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;“&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;拥有者&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;”。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;在上面的例子中&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;指的是&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;“&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;拥有&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;”&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fullName&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;函数的&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;对象&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;objectName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;methodName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;访问对象方法&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;不使用&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;访问函数将返回函数声明而不是函数结果&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;js-事件&#34;&gt;JS 事件
&lt;/h3&gt;&lt;p&gt;&lt;em&gt;通过 JavaScript 代码&lt;/em&gt;，HTML 允许您向 HTML 元素添加事件处理程序。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;onclick&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;document.getElementById(&amp;#34;demo&amp;#34;).innerHTML=Date()&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;现在的时间是&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;？&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/button&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;先获取这个id元素然后更改对应的html&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;onchange&lt;/th&gt;
          &lt;th&gt;HTML 元素已被改变&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;onclick&lt;/td&gt;
          &lt;td&gt;用户点击了 HTML 元素&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;onmouseover&lt;/td&gt;
          &lt;td&gt;用户把鼠标移动到 HTML 元素上&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;onmouseout&lt;/td&gt;
          &lt;td&gt;用户把鼠标移开 HTML 元素&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;onkeydown&lt;/td&gt;
          &lt;td&gt;用户按下键盘按键&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;onload&lt;/td&gt;
          &lt;td&gt;浏览器已经完成页面加载&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;js字符串&#34;&gt;JS字符串
&lt;/h3&gt;&lt;p&gt;内建属性 &lt;code&gt;length&lt;/code&gt; 可返回字符串的&lt;em&gt;长度&lt;/em&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;txt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ABCDEFGHIJKLMNOPQRSTUVWXYZ&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sln&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;txt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;特殊字符&#34;&gt;特殊字符
&lt;/h4&gt;&lt;p&gt;由于字符串必须由引号包围，JavaScript 会误解这段字符串：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;中国是瓷器的故乡，因此 china 与&amp;#34;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;China&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;（&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;中国&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;）&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;同名。&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该字符串将被切为 &amp;ldquo;中国是瓷器的故乡，因此 china 与&amp;rdquo;。&lt;/p&gt;
&lt;p&gt;避免此问题的解决方法是，使用 &lt;em&gt;\ 转义字符&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;反斜杠转义字符把特殊字符转换为字符串字符：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;结果&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;描述&lt;/th&gt;
          &lt;th&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&#39;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&#39;&lt;/td&gt;
          &lt;td&gt;单引号&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&amp;quot;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&amp;quot;&lt;/td&gt;
          &lt;td&gt;双引号&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;\&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;\&lt;/td&gt;
          &lt;td&gt;反斜杠&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;通常，JavaScript 字符串是原始值，通过字面方式创建：&lt;/p&gt;
&lt;p&gt;但是字符串也可通过关键词 &lt;code&gt;new&lt;/code&gt; 定义为对象，但是会影响执行速度&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;firstName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Bill&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;(x==y) 与 (x===y) 的区别。&lt;/p&gt;
&lt;h4 id=&#34;查找字符串中的字符串&#34;&gt;查找字符串中的字符串
&lt;/h4&gt;&lt;p&gt;&lt;code&gt;indexOf()&lt;/code&gt; 方法返回字符串中指定文本&lt;em&gt;首次&lt;/em&gt;出现的索引（位置）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;lastIndexOf()&lt;/code&gt; 方法返回指定文本在字符串中&lt;em&gt;最后&lt;/em&gt;一次出现的索引：&lt;/p&gt;
&lt;h4 id=&#34;提取部分字符串&#34;&gt;提取部分字符串
&lt;/h4&gt;&lt;p&gt;有三种提取部分字符串的方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;slice(&lt;em&gt;start&lt;/em&gt;, &lt;em&gt;end&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;substring(&lt;em&gt;start&lt;/em&gt;, &lt;em&gt;end&lt;/em&gt;) 无法接受负的索引。&lt;/li&gt;
&lt;li&gt;substr(&lt;em&gt;start&lt;/em&gt;, &lt;em&gt;length&lt;/em&gt;)在于第二个参数规定被提取部分的&lt;em&gt;长度&lt;/em&gt;。如果首个参数为负，则从字符串的结尾计算位置。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Apple, Banana, Mango&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;slice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;Banana&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Apple, Banana, Mango&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;slice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Banana&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;不包括&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;位置上的&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;为什么呢&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;我也不懂&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;替换字符串内容&#34;&gt;替换字符串内容
&lt;/h4&gt;&lt;p&gt;&lt;code&gt;replace()&lt;/code&gt; 方法用另一个值替换在字符串中指定的值：不会改变调用它的字符串。它返回的是新字符串。&lt;em&gt;只替换首个匹配&lt;/em&gt;， 对大小写敏感&lt;/p&gt;
&lt;h4 id=&#34;常用的字符串方法&#34;&gt;常用的字符串方法
&lt;/h4&gt;&lt;p&gt;通过 &lt;code&gt;toUpperCase()&lt;/code&gt; 把字符串转换为大写&lt;/p&gt;
&lt;p&gt;&lt;code&gt;toLowerCase()&lt;/code&gt; 把字符串转换为小写：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;concat()&lt;/code&gt; 连接两个或多个字符串&lt;/p&gt;
&lt;p&gt;所有字符串方法都会返回新字符串。它们不会修改原始字符串。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;trim()&lt;/code&gt; 方法删除字符串两端的空白符：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;charAt()&lt;/code&gt; 方法返回字符串中指定下标（位置）的字符串：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;charCodeAt()&lt;/code&gt; 方法返回字符串中指定索引的字符 unicode 编码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;HELLO WORLD&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;                   &lt;span class=&#34;c1&#34;&gt;// 返回 H
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;split()&lt;/code&gt; 将字符串转换为数组：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;txt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;,&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;          &lt;span class=&#34;c1&#34;&gt;// 用逗号分隔
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;txt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;          &lt;span class=&#34;c1&#34;&gt;// 用空格分隔
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;txt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;|&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;          &lt;span class=&#34;c1&#34;&gt;// 用竖线分隔
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果省略分隔符，被返回的数组将包含 index [0] 中的整个字符串。&lt;/p&gt;
&lt;p&gt;用于搜索字符串的 JavaScript 方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;String.indexOf()返回指定文本在字符串中&lt;em&gt;第一次&lt;/em&gt;出现（的位置）的索引：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;String.lastIndexOf()返回指定文本在字符串中最后一次出现的索引：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;String.startsWith()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;String.endsWith()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;search()&lt;/code&gt; 方法在字符串中搜索指定值并返回匹配的位置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;match() 方法根据正则表达式在字符串中搜索匹配项，并将匹配项作为 Array 对象返回。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;.includes()如果字符串包含指定值，&lt;code&gt;includes()&lt;/code&gt; 方法返回 true。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;string.startsWith(searchvalue, start) 可选。默认为 0。开始搜索的位置。
如果字符串以指定值开头，则 startsWith() 方法返回 true，否则返回 false：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;string.endsWith(searchvalue, length)可选。要搜索的长度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello world, welcome to the universe.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;endsWith&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;world&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// 返回 true
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;长度为11的字符串里面&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;以iword结尾的意思&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.w3school.com.cn/jsref/jsref_obj_string.asp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;JavaScript String 参考手册&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;javascript-字符串模板&#34;&gt;JavaScript 字符串模板
&lt;/h3&gt;&lt;p&gt;&lt;em&gt;模板字面量&lt;/em&gt;使用反引号 (``) 而不是引号 (&amp;quot;&amp;quot;) 来定义字符串：这样定义的字符串是可变的&lt;/p&gt;
&lt;h4 id=&#34;插值&#34;&gt;插值
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;firstName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Bill&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lastName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Gates&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Welcome&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lastName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;h2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;模板字面量&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;h2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;模板字面量允许字符串中的变量：&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;demo&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;header&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Templates Literals&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tags&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;template literals&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;javascript&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;es6&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;html&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;h2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;header&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;h2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ul&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;html&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;li&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;li&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;html&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ul&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;demo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;innerHTML&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;javascript-数值始终是-64-位的浮点数&#34;&gt;JavaScript 数值始终是 64 位的浮点数
&lt;/h3&gt;&lt;p&gt;浮点的算数并不总是 100% 精准：&lt;/p&gt;
&lt;p&gt;0.2 + 0.1 = 0.30000000000000004&lt;/p&gt;
&lt;p&gt;JavaScript 的加法和级联（concatenation）都使用 + 运算符。&lt;/p&gt;
&lt;p&gt;数字用加法。字符串用级联。&lt;/p&gt;
&lt;p&gt;如果开头是字符串就变成级联，直到遇到字符串&lt;/p&gt;
&lt;h4 id=&#34;数字字符串&#34;&gt;数字字符串
&lt;/h4&gt;&lt;p&gt;JavaScript 字符串可以拥有数字内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;100&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;z&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// z 将是 10
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;100&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;z&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// z 将是 1000
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;100&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;z&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;// z 将是 90
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;100&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;z&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// z 不会是 110（而是 10010）
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;NaN&lt;/code&gt; 属于 JavaScript 保留词，指示某个数不是合法数。&lt;/p&gt;
&lt;h4 id=&#34;数值可以是对象&#34;&gt;数值可以是对象
&lt;/h4&gt;&lt;p&gt;通常 JavaScript 数值是通过字面量创建的原始值：var x = 123&lt;/p&gt;
&lt;p&gt;但是也可以通过关键词 &lt;code&gt;new&lt;/code&gt; 定义为对象：var y = new Number(123)&lt;/p&gt;
&lt;p&gt;请不要创建数值对象。这样会拖慢执行速度。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;new&lt;/code&gt; 关键词使代码复杂化，并产生某些无法预料的结果&lt;/p&gt;
&lt;h3 id=&#34;javascript-bigint&#34;&gt;JavaScript BigInt
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;JavaScript BigInt 变量用于存储太大而无法用普通 JavaScript 数字表示的大整数值。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如需创建 BigInt，可以在整数末尾添加 &lt;code&gt;n&lt;/code&gt;，或调用 &lt;code&gt;BigInt()&lt;/code&gt; 函数：不允许在 BigInt 和 Number 之间进行算术运算（类型转换会丢失信息）。BigInt 不能有小数。&lt;/p&gt;
&lt;p&gt;在 JavaScript 中，所有数字都以 64 位浮点格式（IEEE 754 标准）存储。&lt;/p&gt;
&lt;p&gt;根据此标准，大整数无法被精确表示，会被四舍五入。&lt;/p&gt;
&lt;p&gt;因此，JavaScript 只能安全地表示以下范围内的整数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最大为 &lt;em&gt;9007199254740991&lt;/em&gt;（253-1）&lt;/li&gt;
&lt;li&gt;最小为 &lt;em&gt;-9007199254740991&lt;/em&gt;（-(253-1)）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;超出此范围的整数值会失去精度。&lt;/p&gt;
&lt;h3 id=&#34;javascript-数字方法&#34;&gt;JavaScript 数字方法
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.w3school.com.cn/jsref/jsref_tostring_number.asp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;toString()&lt;/a&gt;&lt;/th&gt;
          &lt;th&gt;将数字作为字符串返回。&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.w3school.com.cn/jsref/jsref_toexponential.asp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;toExponential()&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;返回以指数表示法书写的数字。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.w3school.com.cn/jsref/jsref_tofixed.asp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;toFixed()&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;返回带小数位数的数字。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.w3school.com.cn/jsref/jsref_toprecision.asp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;toPrecision()&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;返回指定长度的数字。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.w3school.com.cn/jsref/jsref_valueof_number.asp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ValueOf()&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;以数字形式返回数字。&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.w3school.com.cn/jsref/jsref_number.asp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Number()&lt;/a&gt;&lt;/th&gt;
          &lt;th&gt;返回从其参数转换而来的数字。Number() 也可以将日期转换为数字。&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.w3school.com.cn/jsref/jsref_parsefloat.asp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;parseFloat()&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;解析其参数并返回浮点数。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.w3school.com.cn/jsref/jsref_parseint.asp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;parseInt()&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;解析其参数并返回整数。允许有空格。仅返回第一个数字：&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;number-对象方法&#34;&gt;Number 对象方法
&lt;/h2&gt;&lt;p&gt;这些&lt;em&gt;对象方法&lt;/em&gt;属于 &lt;em&gt;Number&lt;/em&gt; 对象：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;方法&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.w3school.com.cn/jsref/jsref_isinteger.asp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Number.isInteger()&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;如果参数是整数则返回 true。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.w3school.com.cn/jsref/jsref_issafeinteger.asp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Number.isSafeInteger()&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;如果参数是安全整数，则返回 true。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.w3school.com.cn/jsref/jsref_number_parsefloat.asp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Number.parseFloat()&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;将字符串转换为数字。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.w3school.com.cn/jsref/jsref_number_parseint.asp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Number.parseInt()&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;将字符串转换为整数。&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;数组&#34;&gt;数组
&lt;/h3&gt;&lt;p&gt;使用数组文本是创建 JavaScript 数组最简单的方法。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cars&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Saab&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Volvo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;BMW&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cars&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Saab&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Volvo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;BMW&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;基本不用&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;遍历数组&#34;&gt;遍历数组
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fLen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Banana&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Orange&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Apple&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Mango&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;fLen&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;ul&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fLen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;li&amp;gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;/li&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Banana&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Orange&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Apple&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Mango&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;ul&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;myFunction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;调用某个函数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;/ul&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;myFunction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;li&amp;gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;/li&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;向数组添加新元素的最佳方法是使用 &lt;code&gt;push()&lt;/code&gt; 方法：&lt;/p&gt;
&lt;h4 id=&#34;关联数组&#34;&gt;关联数组
&lt;/h4&gt;&lt;p&gt;很多编程元素支持命名索引的数组。&lt;/p&gt;
&lt;p&gt;具有命名索引的数组被称为关联数组（或散列）。&lt;/p&gt;
&lt;p&gt;JavaScript &lt;em&gt;不支持&lt;/em&gt;命名索引的数组，数组只能使用&lt;em&gt;数字索引&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;在 JavaScript 中，&lt;em&gt;数组&lt;/em&gt;使用&lt;em&gt;数字索引&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;在 JavaScript 中，&lt;em&gt;对象&lt;/em&gt;使用&lt;em&gt;命名索引&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;数组是特殊类型的对象，具有数字索引。&lt;/p&gt;
&lt;p&gt;JavaScript 方法 &lt;code&gt;toString()&lt;/code&gt; 把数组转换为数组值（逗号分隔）的字符串。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;join()&lt;/code&gt; 方法也可将所有数组元素结合为一个字符串。&lt;/p&gt;
&lt;p&gt;它的行为类似 toString()，但是您还可以规定分隔符：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Banana&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Orange&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Apple&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Mango&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;demo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;innerHTML&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;Banana&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Orange&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Apple&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Mango&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Banana&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Orange&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Apple&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Mango&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;demo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;innerHTML&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34; * &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;Banana&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Orange&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Apple&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Mango&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;pop()&lt;/code&gt; 方法从数组中删除最后一个元素：&lt;code&gt;pop()&lt;/code&gt; 方法返回“被弹出”的值：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;push()&lt;/code&gt; 方法（在数组结尾处）向数组添加一个新的元素：&lt;code&gt;push()&lt;/code&gt; 方法返回新数组的长度：&lt;/p&gt;
&lt;p&gt;位移与弹出等同，但处理首个元素而不是最后一个。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shift()&lt;/code&gt; 方法会删除首个数组元素，并把所有其他元素“位移”到更低的索引。返回被“位移出”的字符串：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;unshift()&lt;/code&gt; 方法（在开头）向数组添加新元素，并“反向位移”旧元素：&lt;code&gt;unshift()&lt;/code&gt; 方法返回新数组的长度。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Banana&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Orange&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Apple&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Mango&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Kiwi&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// 把 fruits 的第一个元素改为 &amp;#34;Kiwi&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Kiwi&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;          &lt;span class=&#34;c1&#34;&gt;// 向 fruits 追加 &amp;#34;Kiwi&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;delete&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;           &lt;span class=&#34;c1&#34;&gt;// 把 fruits 中的首个元素改为 undefined使用 delete 会在数组留下未定义的空洞。请使用 pop() 或 shift() 取而代之。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;splice()&lt;/code&gt; 方法可用于向数组添加新项：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;splice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Lemon&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Kiwi&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;第一个参数&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;（&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;）&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;定义了应添加新元素的位置&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;（&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;拼接&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;）。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;第二个参数&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;（&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;）&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;定义应删除多少元素&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;其余参数&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;（“&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Lemon&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;”，“&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Kiwi&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;”）&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;定义要添加的新元素&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;splice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;方法返回一个包含已删除项的数组&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Banana&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Orange&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Apple&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Mango&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;splice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// 删除 fruits 中的第一个元素
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;第一个参数&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;（&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;）&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;定义新元素应该被添加&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;（&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;接入&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;）&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;的位置&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;第二个参数&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;（&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;）&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;定义应该删除多个元素&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;concat()&lt;/code&gt; 方法通过合并（连接）现有数组来创建一个新数组：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;slice()&lt;/code&gt; 方法用数组的某个片段切出新数组。创建新数组。它不会从源数组中删除任何元素。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sort()&lt;/code&gt; 方法以字母顺序对数组进行排序&lt;/p&gt;
&lt;p&gt;&lt;code&gt;reverse()&lt;/code&gt; 方法反转数组中的元素。&lt;/p&gt;
&lt;p&gt;默认地，&lt;code&gt;sort()&lt;/code&gt; 函数按照&lt;em&gt;字符串&lt;/em&gt;顺序对值进行排序。在对数值排序时会产生不正确的结果。通过一个&lt;em&gt;比值函数&lt;/em&gt;来修正此问题：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;points&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;points&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//升序 返回负值，代表后面的数比前面大，所以应该是升序hh
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;points&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;points&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//降序
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cars&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Volvo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2016&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Saab&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2001&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;BMW&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2010&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;cars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;year&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;通过比较函数来对比属性值&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;比较字符串属性会稍复杂&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;cars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	  &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;toLowerCase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	  &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;toLowerCase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;Math.max.apply&lt;/code&gt; 来查找数组中的最高值：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Math.min.apply&lt;/code&gt; 来查找数组中的最低值：&lt;code&gt;Math.min.apply([1, 2, 3])&lt;/code&gt; 等于 &lt;code&gt;Math.min(1, 2, 3)&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&#34;arraymap&#34;&gt;Array.map()
&lt;/h4&gt;&lt;p&gt;&lt;code&gt;map()&lt;/code&gt; 方法通过对每个数组元素执行函数来创建新数组。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;map()&lt;/code&gt; 方法不会对没有值的数组元素执行函数。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;map()&lt;/code&gt; 方法不会更改原始数组。&lt;/p&gt;
&lt;h4 id=&#34;arrayreduce&#34;&gt;Array.reduce()
&lt;/h4&gt;&lt;p&gt;&lt;code&gt;reduce()&lt;/code&gt; 方法在每个数组元素上运行函数，以生成（减少它）单个值。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;reduce()&lt;/code&gt; 方法在数组中从左到右工作。另请参阅 reduceRight()。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;reduce()&lt;/code&gt; 方法不会减少原始数组。&lt;/p&gt;
&lt;script&gt;
var numbers = [45, 4, 9, 16, 25];
var sum = numbers.reduce(myFunction);
    document.getElementById(&#34;demo&#34;).innerHTML = &#34;总和是：&#34; + sum;
function myFunction(total, value) {
  return total + value;
}
&lt;/script&gt;
&lt;p&gt;确定数组中所有数字的总和&lt;/p&gt;
&lt;h4 id=&#34;arrayreduceright&#34;&gt;Array.reduceRight()
&lt;/h4&gt;&lt;p&gt;&lt;code&gt;reduceRight()&lt;/code&gt; 方法在每个数组元素上运行函数，以生成（减少它）单个值。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;reduceRight()&lt;/code&gt; 方法在数组中从右到左工作。另请参阅 reduce()。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;reduceRight()&lt;/code&gt; 方法不会减少原始数组。&lt;/p&gt;
&lt;p&gt;这个例子确定数组中所有数字的总和：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;numbers1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;45&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;numbers1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;reduceRight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;myFunction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;myFunction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;total&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;total&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;mi&#34;&gt;99&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;numbers&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;45&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;numbers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;reduce&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;myFunction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;可以赋予一个初始值&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;demo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;innerHTML&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;总和是：&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;myFunction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;total&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;total&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/script&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;·&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;199&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;arrayevery&#34;&gt;Array.every()
&lt;/h4&gt;&lt;p&gt;&lt;code&gt;every()&lt;/code&gt; 方法检查所有数组值是否通过测试。&lt;/p&gt;
&lt;h4 id=&#34;arrayindexof&#34;&gt;Array.indexOf()
&lt;/h4&gt;&lt;p&gt;&lt;code&gt;indexOf()&lt;/code&gt; 方法在数组中搜索元素值并返回其位置。&lt;/p&gt;
&lt;h4 id=&#34;arrayfind&#34;&gt;Array.find()
&lt;/h4&gt;&lt;p&gt;&lt;code&gt;find()&lt;/code&gt; 方法返回通过测试函数的第一个数组元素的值。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;numbers&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;first&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;numbers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;myFunction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;myFunction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;返回大于18的第一个元素的值&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;arrayfindindex&#34;&gt;Array.findIndex()
&lt;/h4&gt;&lt;p&gt;&lt;code&gt;findIndex()&lt;/code&gt; 方法返回通过测试函数的第一个数组元素的索引。&lt;/p&gt;
&lt;h4 id=&#34;const&#34;&gt;const
&lt;/h4&gt;&lt;p&gt;&lt;code&gt;const&lt;/code&gt; 声明的数组不能重新赋值：不定义常量数组。它定义的是对数组的常量引用。可以更改常量数组的元素&lt;/p&gt;
&lt;p&gt;可以更改数组的内容，但是不能改变引用。用 &lt;code&gt;const&lt;/code&gt; 声明的数组必须在声明时进行初始化。声明的数组具有&lt;em&gt;块作用域&lt;/em&gt;。不允许在同一作用域或同一块中重新声明或重新赋值现有的 &lt;code&gt;const&lt;/code&gt; 数组：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cars&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Saab&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Volvo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;BMW&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;cars&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Toyota&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Volvo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Audi&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// ERROR
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;javascript-iso-日期&#34;&gt;JavaScript ISO 日期
&lt;/h2&gt;&lt;p&gt;写日期也可以不规定具体某日 (YYYY-MM)：&lt;/p&gt;
&lt;p&gt;写日期也可以添加时、分和秒 (YYYY-MM-DDTHH:MM:SS)：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;方法&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;getDate()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;以数值返回天（1-31）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;getDay()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;以数值获取周名（0-6）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;getFullYear()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;获取四位的年（yyyy）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;getHours()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;获取小时（0-23）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;getMilliseconds()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;获取毫秒（0-999）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;getMinutes()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;获取分（0-59）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;getMonth()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;获取月（0-11）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;getSeconds()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;获取秒（0-59）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;getTime()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;获取时间（从 1970 年 1 月 1 日至今）&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;方法&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;getUTCDate()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;等于 getDate()，但返回 UTC 日期&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;getUTCDay()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;等于 getDay()，但返回 UTC 日&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;getUTCFullYear()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;等于 getFullYear()，但返回 UTC 年&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;getUTCHours()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;等于 getHours()，但返回 UTC 小时&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;getUTCMilliseconds()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;等于 getMilliseconds()，但返回 UTC 毫秒&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;getUTCMinutes()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;等于 getMinutes()，但返回 UTC 分&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;getUTCMonth()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;等于 getMonth()，但返回 UTC 月&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;getUTCSeconds()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;等于 getSeconds()，但返回 UTC 秒&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;方法&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;setDate()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;以数值（1-31）设置日&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;setFullYear()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;设置年（可选月和日）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;setHours()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;设置小时（0-23）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;setMilliseconds()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;设置毫秒（0-999）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;setMinutes()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;设置分（0-59）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;setMonth()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;设置月（0-11）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;setSeconds()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;设置秒（0-59）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;setTime()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;设置时间（从 1970 年 1 月 1 日至今的毫秒数）&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;javascript-数学&#34;&gt;JavaScript 数学
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Math.round(x)&lt;/code&gt; 的返回值是 x 四舍五入为最接近的整数&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Math.pow(x, y)&lt;/code&gt; 的返回值是 x 的 y 次幂：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Math.sqrt(x)&lt;/code&gt; 返回 x 的平方根：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Math.abs(x)&lt;/code&gt; 返回 x 的绝对（正）值：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Math.ceil(x)&lt;/code&gt; 的返回值是 x &lt;em&gt;上舍入&lt;/em&gt;最接近的整数：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Math.floor(x)&lt;/code&gt; 的返回值是 x &lt;em&gt;下舍入&lt;/em&gt;最接近的整数：&lt;/p&gt;
&lt;h3 id=&#34;mathrandom&#34;&gt;Math.random()
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Math.random()&lt;/code&gt; 返回 0（包括） 至 1（不包括） 之间的随机数：&lt;/p&gt;
&lt;h3 id=&#34;javascript-随机整数&#34;&gt;JavaScript 随机整数
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Math.random()&lt;/code&gt; 与 &lt;code&gt;Math.floor()&lt;/code&gt; 一起使用用于返回随机整数。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;floor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;		&lt;span class=&#34;c1&#34;&gt;// 返回 0 至 9 之间的数
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;floor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;		&lt;span class=&#34;c1&#34;&gt;// 返回 0 至 10 之间的数
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;floor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;// 返回 1 至 100 之间的数
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;始终返回介于&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;（&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;包括&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;）&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;和&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;（&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;不包括&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;）&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;之间的随机数&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;getRndInteger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;floor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;max&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;返回介于&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;min&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;和&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;（&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;都包括&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;）&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;之间的随机数&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;getRndInteger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;floor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;max&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;min&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;boolean-函数&#34;&gt;Boolean() 函数
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Boolean()&lt;/code&gt; 函数来确定表达式（或变量）是否为真：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;Boolean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// 返回 true
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;Boolean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// 返回 false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;Boolean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// 返回 false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;Boolean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// 返回 false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;Boolean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// 返回 false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;Boolean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// 返回 false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;当比较两个字符串时&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;大于&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;12&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;因为&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;（&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;按照字母排序&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;）&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;小于&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;switch&lt;/code&gt; 语句用于基于不同条件执行不同动作。&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;表达式&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;代码块&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;代码块&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;默认代码块&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;如果&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;遇到&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;关键词&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;它会跳出&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;代码块&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;此举将停止代码块中更多代码的执行以及&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;测试&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;如果找到匹配&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;并完成任务&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;则随机中断执行&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;（&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;要是case&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;没写具体要做什么&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;就是和下面的一个case共享做法&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;Switch&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;使用严格比较&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;（&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;===&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;）。&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;值必须与要匹配的类型相同&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;才能为&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;循环&#34;&gt;循环
&lt;/h3&gt;&lt;h4 id=&#34;forin-循环&#34;&gt;For/In 循环
&lt;/h4&gt;&lt;p&gt;语句遍历对象的属性：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fname&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Bill&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;lname&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Gates&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;62&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;arrayforeach&#34;&gt;Array.forEach()
&lt;/h4&gt;&lt;p&gt;方法为每个数组元素调用一次函数（回调函数）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;numbers&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;45&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;txt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;numbers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;myFunction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;myFunction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;txt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;//value是当前数组遍历到的值
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;for-of-循环&#34;&gt;For Of 循环
&lt;/h4&gt;&lt;p&gt;JavaScript &lt;code&gt;for of&lt;/code&gt; 语句循环遍历可迭代对象的值。您循环遍历可迭代的数据结构，例如数组、字符串、映射、节点列表等：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//遍历数组
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cars&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;BMW&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Volvo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Mini&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//遍历字符串
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;language&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;JavaScript&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;language&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;do/while 循环是 while 循环的变体。在检查条件是否为真之前，这种循环会执行一次代码块，然后只要条件为真就会重复循环。&lt;/p&gt;
&lt;h4 id=&#34;dowhile-循环&#34;&gt;Do/While 循环
&lt;/h4&gt;&lt;p&gt;do/while 循环是 while 循环的变体。在检查条件是否为真之前，这种循环会执行一次代码块，然后只要条件为真就会重复循环&lt;/p&gt;
&lt;h3 id=&#34;跳出循环&#34;&gt;跳出循环
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;continue&lt;/code&gt; 语句（不论有无标签引用）只能用于&lt;em&gt;跳过一个迭代&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;break&lt;/code&gt; 语句，如果没有标签引用，只能用于&lt;em&gt;跳出一个循环或一个 switch&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;如果有标签引用，则 &lt;code&gt;break&lt;/code&gt; 语句可用于&lt;em&gt;跳出任意代码块&lt;/em&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;cars&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;BMW&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Volvo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Saab&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Ford&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;br&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;br&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;br&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;br&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;br&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;br&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;javascript-typeof&#34;&gt;JavaScript typeof
&lt;/h4&gt;&lt;p&gt;在 JavaScript 中有 5 种不同的可以包含值的数据类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;string&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;number&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;object&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;function&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有 6 种类型的对象：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;String&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以及 2 种不能包含值的数据类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;null&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;undefined-与-null-的区别&#34;&gt;undefined 与 null 的区别
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;undefined&lt;/span&gt;           &lt;span class=&#34;c1&#34;&gt;// undefined
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;// object
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;undefined&lt;/span&gt;         &lt;span class=&#34;c1&#34;&gt;// false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;undefined&lt;/span&gt;          &lt;span class=&#34;c1&#34;&gt;// true
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;NaN 的数据类型是数值&lt;/li&gt;
&lt;li&gt;数组的数据类型是对象&lt;/li&gt;
&lt;li&gt;日期的数据类型是对象&lt;/li&gt;
&lt;li&gt;null 的数据类型是对象&lt;/li&gt;
&lt;li&gt;未定义变量的数据类型是 &lt;em&gt;undefined&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;尚未赋值的变量的数据类型也是 &lt;em&gt;undefined&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;constructor-属性&#34;&gt;constructor 属性
&lt;/h4&gt;&lt;p&gt;&lt;code&gt;constructor&lt;/code&gt; 属性返回所有 JavaScript 变量的构造器函数。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Bill&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;constructor&lt;/span&gt;                 &lt;span class=&#34;c1&#34;&gt;// 返回 &amp;#34;function String()  { [native code] }&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;3.14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;constructor&lt;/span&gt;                 &lt;span class=&#34;c1&#34;&gt;// 返回 &amp;#34;function Number()  { [native code] }&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;constructor&lt;/span&gt;                  &lt;span class=&#34;c1&#34;&gt;// 返回 &amp;#34;function Boolean() { [native code] }&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;constructor&lt;/span&gt;              &lt;span class=&#34;c1&#34;&gt;// 返回 &amp;#34;function Array()   { [native code] }&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Bill&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;62&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;constructor&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 返回&amp;#34; function Object()  { [native code] }&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;constructor&lt;/span&gt;             &lt;span class=&#34;c1&#34;&gt;// 返回 &amp;#34;function Date()    { [native code] }&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;constructor&lt;/span&gt;         &lt;span class=&#34;c1&#34;&gt;// 返回 &amp;#34;function Function(){ [native code] }&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;通过检查 &lt;code&gt;constructor&lt;/code&gt; 属性来确定某个对象是否为数组（包含单词 &amp;ldquo;Array&amp;rdquo;）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;isArray&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;myArray&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myArray&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;constructor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;Array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;js类型转换&#34;&gt;JS类型转换
&lt;/h3&gt;&lt;p&gt;全局方法 &lt;code&gt;String()&lt;/code&gt; 能够把数字转换为字符串。&lt;/p&gt;
&lt;p&gt;数字方法 &lt;code&gt;toString()&lt;/code&gt; 同理。&lt;/p&gt;
&lt;p&gt;全局方法 &lt;code&gt;Number()&lt;/code&gt; 可把字符串转换为数字。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/assets/image-20241127165903033.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20241127165903033&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;javascript-错误---throw-和-try-to-catch&#34;&gt;JavaScript 错误 - Throw 和 Try to Catch
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;c1&#34;&gt;// 供测试的代码块
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;c1&#34;&gt;// 处理错误的代码块
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;finally&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;c1&#34;&gt;// 无论结果如何都执行的代码块
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Too big&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// 抛出文本
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;          &lt;span class=&#34;c1&#34;&gt;//抛出数字
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;当发生错误时，JavaScript 通常会停止并产生错误消息。&lt;/p&gt;
&lt;p&gt;技术术语是这样描述的：&lt;em&gt;JavaScript 将抛出异常（抛出错误）&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;JavaScript 实际上会创建带有两个属性的 &lt;em&gt;Error 对象&lt;/em&gt;：&lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;message&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;请输入 5 - 10 之间的数字：&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;demo&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;button&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;onclick&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;myFunction()&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;测试输入&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;button&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;myFunction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;innerHTML&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;demo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;空的&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;isNaN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;不是数字&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;太小&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;太大&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;innerHTML&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;输入是 &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;error-对象&#34;&gt;Error 对象
&lt;/h4&gt;&lt;p&gt;JavaScript 拥有当错误发生时提供错误信息的内置 error 对象。&lt;/p&gt;
&lt;p&gt;error 对象提供两个有用的属性：&lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;message&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;错误名&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;EvalError&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;已在 eval() 函数中发生的错误&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;RangeError&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;已发生超出数字范围的错误&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ReferenceError&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;已发生非法引用&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;SyntaxError&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;已发生语法错误&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;TypeError&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;已发生类型错误&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;URIError&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;在 encodeURI() 中已发生的错误&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;html-中的全局变量-1&#34;&gt;HTML 中的全局变量
&lt;/h4&gt;&lt;p&gt;通过 JavaScript，全局作用域形成了完整的 JavaScript 环境。&lt;/p&gt;
&lt;p&gt;在 HTML 中，全局作用域是 window。所有全局变量均属于 window 对象。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;carName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;porsche&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 此处的代码能够使用 window.carName
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;javascript-变量的有效期&#34;&gt;JavaScript 变量的有效期
&lt;/h4&gt;&lt;p&gt;JavaScript 变量的有效期始于其被创建时。&lt;/p&gt;
&lt;p&gt;局部变量会在函数完成时被删除。&lt;/p&gt;
&lt;p&gt;全局变量会在您关闭页面时被删除。&lt;/p&gt;
&lt;h4 id=&#34;javascript-声明会被提升&#34;&gt;JavaScript 声明会被提升
&lt;/h4&gt;&lt;p&gt;在 JavaScript 中，可以在使用变量之后对其进行声明。&lt;/p&gt;
&lt;p&gt;换句话说，可以在声明变量之前使用它。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 把 5 赋值给 x
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;elem&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;demo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 查找元素
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;elem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;innerHTML&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;                     &lt;span class=&#34;c1&#34;&gt;// 在元素中显示 x
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 声明 x
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;this-是什么&#34;&gt;this 是什么？
&lt;/h4&gt;&lt;p&gt;JavaScript &lt;code&gt;this&lt;/code&gt; 关键词指的是它所属的对象。&lt;/p&gt;
&lt;p&gt;它拥有不同的值，具体取决于它的使用位置：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在方法中，&lt;code&gt;this&lt;/code&gt; 指的是所有者对象。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Bill&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;lastName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Gates&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;678&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;fullName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;firstName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;lastName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;指的是&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;对象&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;单独的情况下，&lt;code&gt;this&lt;/code&gt; 指的是全局对象。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在函数中，&lt;code&gt;this&lt;/code&gt; 指的是全局对象。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在函数中，严格模式下，&lt;code&gt;this&lt;/code&gt; 是 undefined。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在事件中，&lt;code&gt;this&lt;/code&gt; 指的是接收事件的元素。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;onclick&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;this.style.display=&amp;#39;none&amp;#39;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  点击来删除我！
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;button&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;像 &lt;code&gt;call()&lt;/code&gt; 和 &lt;code&gt;apply()&lt;/code&gt; 这样的方法可以将 this 引用到任何对象。&lt;/p&gt;
&lt;h4 id=&#34;显式函数绑定&#34;&gt;显式函数绑定
&lt;/h4&gt;&lt;p&gt;&lt;code&gt;call()&lt;/code&gt; 和 &lt;code&gt;apply()&lt;/code&gt; 方法是预定义的 JavaScript 方法。&lt;/p&gt;
&lt;p&gt;它们都可以用于将另一个对象作为参数调用对象方法。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;person1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;fullName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;firstName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;lastName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;person2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Bill&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;lastName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Gates&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;person1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fullName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;person2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 会返回 &amp;#34;Bill Gates&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;javascript-箭头函数&#34;&gt;JavaScript 箭头函数
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;let myFunction = (a, b) =&amp;gt; a * b;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;对于箭头函数，&lt;code&gt;this&lt;/code&gt; 关键字始终表示定义箭头函数的对象。&lt;/p&gt;
&lt;h3 id=&#34;javascript-类&#34;&gt;JavaScript 类
&lt;/h3&gt;&lt;p&gt;JavaScript 类&lt;em&gt;不是&lt;/em&gt;对象。&lt;/p&gt;
&lt;p&gt;它只是 JavaScript 对象的&lt;em&gt;模板&lt;/em&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ClassName&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;constructor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;constructor-方法&#34;&gt;Constructor 方法
&lt;/h4&gt;&lt;p&gt;构造方法是一种特殊的方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它必须拥有确切名称的“构造函数”&lt;/li&gt;
&lt;li&gt;创建新对象时自动执行&lt;/li&gt;
&lt;li&gt;用于初始化对象属性&lt;/li&gt;
&lt;li&gt;如果未定义构造函数方法，JavaScript 会添加空的构造函数方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;javascript-模块&#34;&gt;JavaScript 模块
&lt;/h3&gt;&lt;h4 id=&#34;命名导出named-exports&#34;&gt;命名导出（Named Exports）
&lt;/h4&gt;&lt;p&gt;您可以通过两种方式创建命名导出。一种是逐个内联创建，另一种是在文件底部一次性全部创建。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;逐个内联创建&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Bill&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;在文件底部一次性创建&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Bill&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;默认导出default-exports&#34;&gt;默认导出（Default Exports）
&lt;/h4&gt;&lt;p&gt;让我们创建另一个名为 message.js 的文件，并用其演示默认导出。&lt;/p&gt;
&lt;p&gt;一个文件中只能有一个默认导出&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Bill&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39; is &amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;years old.&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;导入&#34;&gt;导入
&lt;/h4&gt;&lt;p&gt;通过两种方式将模块导入到文件中，具体取决于它们是命名导出还是默认导出。&lt;/p&gt;
&lt;h4 id=&#34;从命名导出中导入&#34;&gt;从命名导出中导入
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;./person.js&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;从默认导出导入&#34;&gt;从默认导出导入
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;./message.js&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;javascript-json&#34;&gt;JavaScript JSON
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;数据是名称/值对&amp;quot;firstName&amp;quot;:&amp;ldquo;Bill&amp;rdquo;&lt;/li&gt;
&lt;li&gt;数据由逗号分隔&lt;/li&gt;
&lt;li&gt;花括号保存对象 {&amp;ldquo;firstName&amp;rdquo;:&amp;ldquo;Bill&amp;rdquo;, &amp;ldquo;lastName&amp;rdquo;:&amp;ldquo;Gates&amp;rdquo;}&lt;/li&gt;
&lt;li&gt;方括号保存数组&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;把-json-文本转换为-javascript-对象&#34;&gt;把 JSON 文本转换为 JavaScript 对象
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;javascript-代码约定&#34;&gt;JavaScript 代码约定
&lt;/h4&gt;&lt;p&gt;在 W3School，我们对标识符名称（变量和函数）使用了&lt;em&gt;驼峰式大小写&lt;/em&gt;。xxXX&lt;/p&gt;
&lt;p&gt;所有名称以&lt;em&gt;字母&lt;/em&gt;开头。&lt;/p&gt;
&lt;h4 id=&#34;请勿使用-new-object&#34;&gt;请勿使用 new Object()
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{};&lt;/span&gt;           &lt;span class=&#34;c1&#34;&gt;// 新对象
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;           &lt;span class=&#34;c1&#34;&gt;// 新的原始字符串值
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;            &lt;span class=&#34;c1&#34;&gt;// 新的原始数值
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// 新的原始布尔值
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x5&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[];&lt;/span&gt;           &lt;span class=&#34;c1&#34;&gt;// 新的数组对象
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x6&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sr&#34;&gt;/()/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;         &lt;span class=&#34;c1&#34;&gt;// 新的正则表达式
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x7&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){};&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 新的函数对象
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;意识到自动类型转换&#34;&gt;意识到自动类型转换
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;// typeof x 为字符串
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;               &lt;span class=&#34;c1&#34;&gt;// 把 typeof x 更改为数值
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;用字符串减去字符串，不会产生错误而是返回 &lt;code&gt;NaN&lt;/code&gt;（Not a Number）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;==&lt;/code&gt; 比较运算符总是在比较之前进行类型转换（以匹配类型）。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;===&lt;/code&gt; 运算符会强制对值和类型进行比较：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// true
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// true
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;// true
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;// false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;// false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在常规比较中，数据类型不重要。这条 &lt;code&gt;if&lt;/code&gt; 语句返回 &lt;code&gt;true&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在严格比较中，数据类型确实重要。这条 &lt;code&gt;if&lt;/code&gt; 语句返回 &lt;code&gt;false&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;switch&lt;/code&gt; 语句中使用严格比较：这条 &lt;code&gt;switch&lt;/code&gt; 语句会显示提示框：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;JavaScript 中的数字均保存为 64 位的&lt;em&gt;浮点数（Floats）&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;所有编程语言，包括 JavaScript，都存在处理浮点值的困难：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;z&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt;             &lt;span class=&#34;c1&#34;&gt;// z 中的结果并不是 0.3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;z&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// z 中的结果将是 0.3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;通过命名索引来访问数组&#34;&gt;通过命名索引来访问数组
&lt;/h4&gt;&lt;p&gt;很多编程语言支持带有命名索引的数组。&lt;/p&gt;
&lt;p&gt;带有命名索引的数组被称为关联数组（或散列）。&lt;/p&gt;
&lt;p&gt;JavaScript &lt;em&gt;不支持&lt;/em&gt;带有命名索引的数组。&lt;/p&gt;
&lt;p&gt;在 JavaScript 中，&lt;em&gt;数组&lt;/em&gt;使用&lt;em&gt;数字索引&lt;/em&gt;：&lt;/p&gt;
&lt;h4 id=&#34;通过命名索引来访问数组-1&#34;&gt;通过命名索引来访问数组
&lt;/h4&gt;&lt;p&gt;很多编程语言支持带有命名索引的数组。&lt;/p&gt;
&lt;p&gt;带有命名索引的数组被称为关联数组（或散列）。&lt;/p&gt;
&lt;p&gt;JavaScript &lt;em&gt;不支持&lt;/em&gt;带有命名索引的数组。&lt;/p&gt;
&lt;p&gt;在 JavaScript 中，&lt;em&gt;数组&lt;/em&gt;使用&lt;em&gt;数字索引&lt;/em&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;myObj&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;undefined&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;myObj&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!==&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;javascript-性能&#34;&gt;JavaScript 性能
&lt;/h3&gt;&lt;h4 id=&#34;减少-dom-访问&#34;&gt;减少 DOM 访问
&lt;/h4&gt;&lt;p&gt;与其他 JavaScript 相比，访问 HTML DOM 非常缓慢。&lt;/p&gt;
&lt;p&gt;假如您期望访问某个 DOM 元素若干次，那么只访问一次，并把它作为本地变量来使用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;demo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;innerHTML&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;延迟-javascript-加载&#34;&gt;延迟 JavaScript 加载
&lt;/h4&gt;&lt;p&gt;请把脚本放在页面底部，使浏览器首先加载页面。&lt;/p&gt;
&lt;p&gt;脚本在下载时，浏览器不会启动任何其他的下载。此外所有解析和渲染活动都可能会被阻塞。&lt;/p&gt;
&lt;p&gt;HTTP 规范定义浏览器不应该并行下载超过两种要素。&lt;/p&gt;
&lt;p&gt;一个选项是在 script 标签中使用 &lt;code&gt;defer=&amp;quot;true&amp;quot;&lt;/code&gt;。defer 属性规定了脚本应该在页面完成解析后执行，但它只适用于外部脚本&lt;/p&gt;
&lt;h3 id=&#34;javascript-对象&#34;&gt;JavaScript 对象
&lt;/h3&gt;&lt;h3 id=&#34;javascript-原始值&#34;&gt;JavaScript 原始值
&lt;/h3&gt;&lt;p&gt;&lt;em&gt;原始值&lt;/em&gt;指的是没有属性或方法的值。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;原始数据类型&lt;/em&gt;指的是拥有原始值的数据。&lt;/p&gt;
&lt;p&gt;JavaScript 定义了 5 种原始数据类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;string&lt;/li&gt;
&lt;li&gt;number&lt;/li&gt;
&lt;li&gt;boolean&lt;/li&gt;
&lt;li&gt;null&lt;/li&gt;
&lt;li&gt;undefined&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;原始值是一成不变的（它们是硬编码的，因此不能改变）。&lt;/p&gt;
&lt;h3 id=&#34;创建对象&#34;&gt;创建对象
&lt;/h3&gt;&lt;h4 id=&#34;使用对象字面量&#34;&gt;使用对象字面量
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Bill&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;lastName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Gates&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;62&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;eyeColor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;使用-javascript-关键词-new&#34;&gt;使用 JavaScript 关键词 new
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;firstName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Bill&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;lastName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Gates&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;eyeColor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;对象是易变的：它们通过引用来寻址，而非值。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 这不会创建 person 的副本。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;对象&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;并非&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;的副本&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;它就是&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;和&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;是同一个对象&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;使用-objectvalues&#34;&gt;使用 Object.values()
&lt;/h4&gt;&lt;p&gt;通过使用 &lt;code&gt;Object.values()&lt;/code&gt;，任何 JavaScript 对象都可以被转换为数组：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Bill&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;city&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Seattle&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;myArray&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;Bill&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Seattle&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;使用-jsonstringify&#34;&gt;使用 JSON.stringify()
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Bill&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;city&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Seattle&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;myString&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stringify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Bill&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;age&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;city&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Seattle&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;函数字符串化&#34;&gt;函数字符串化
&lt;/h4&gt;&lt;p&gt;&lt;code&gt;JSON.stringify&lt;/code&gt; 不会对函数进行字符串化：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Bill&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;myString&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stringify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;demo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;innerHTML&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;myString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Bill&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;数组字符串化&#34;&gt;数组字符串化
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Bill&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Steve&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Elon&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;David&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;myString&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stringify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;demo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;innerHTML&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;myString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Bill&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Steve&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Elon&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;David&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;
&lt;h2&gt;JavaScript&lt;/h2&gt;
&lt;p&gt;JavaScript不会为每个代码块创建新的作用域。&lt;/p&gt;
&lt;p&gt;此代码将显示 i（10）的值，即使在 for 循环块之外：&lt;/p&gt;
&lt;p id=&#34;demo&#34;&gt;&lt;/p&gt;
&lt;script&gt;
for (var i = 0; i &lt; 10; i++) {
  // some code
}
document.getElementById(&#34;demo&#34;).innerHTML = i;
&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
&lt;h4 id=&#34;javascript-对象访问器&#34;&gt;JavaScript 对象访问器
&lt;/h4&gt;&lt;h4 id=&#34;javascript-getterget-关键词&#34;&gt;JavaScript Getter（get 关键词）
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 创建对象：
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Bill&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;lastName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Gates&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;language&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;language&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 使用 getter 来显示来自对象的数据：
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;demo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;innerHTML&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;以属性的形式来访问对象的数据&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;就不想调用函数还需要&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;（）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;javascript-setterset-关键词&#34;&gt;JavaScript Setter（set 关键词）
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Bill&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;lastName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Gates&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;language&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;language&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 使用 setter 来设置对象属性：
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;lang&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 显示来自对象的数据：
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;demo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;innerHTML&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;language&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;数据质量&#34;&gt;数据质量
&lt;/h4&gt;&lt;p&gt;使用 getter 和 setter 时，JavaScript 可以确保更好的数据质量。&lt;/p&gt;
&lt;p&gt;在本例中，使用 &lt;code&gt;lang&lt;/code&gt; 属性以大写形式返回 &lt;code&gt;language&lt;/code&gt; 属性的值：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 创建对象：
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Bill&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;lastName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Gates&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;language&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;language&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;toUpperCase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 使用 getter 来显示来自对象的数据：
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;demo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;innerHTML&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;counter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;reset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;counter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;increment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;counter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;decrement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;counter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;counter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;subtract&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;counter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 操作计数器：
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;reset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;subtract&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;increment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;decrement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;defineProperty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;javascript-对象构造器&#34;&gt;JavaScript 对象构造器
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;first&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;last&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;eye&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;firstName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;first&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;lastName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;last&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;eyeColor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;eye&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在 JavaScript 中，被称为 &lt;code&gt;this&lt;/code&gt; 的事物是代码的“拥有者”。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;this&lt;/code&gt; 的值，在对象中使用时，就是对象本身。&lt;/p&gt;
&lt;p&gt;在构造器函数中，&lt;code&gt;this&lt;/code&gt; 是没有值的。它是新对象的替代物。 当一个新对象被创建时，this 的值会成为这个新对象。&lt;/p&gt;
&lt;p&gt;无法为对象构造器添加新属性和新方法&lt;/p&gt;
&lt;p&gt;构造器函数也可以定义方法&lt;/p&gt;
&lt;h4 id=&#34;向对象添加属性和方法&#34;&gt;向对象添加属性和方法
&lt;/h4&gt;&lt;p&gt;有时，您希望向所有给定类型的已有对象添加新属性（或方法）。&lt;/p&gt;
&lt;p&gt;有时，您希望向对象构造器添加新属性（或方法）。&lt;/p&gt;
&lt;h4 id=&#34;使用-prototype-属性&#34;&gt;使用 &lt;code&gt;prototype&lt;/code&gt; 属性
&lt;/h4&gt;&lt;p&gt;允许您为对象构造器添加新属性：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;first&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;last&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;eyecolor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;firstName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;first&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;lastName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;last&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;eyeColor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;eyecolor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;prototype&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;nationality&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;English&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;JavaScript prototype 属性也允许您为对象构造器添加新方法&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;first&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;last&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;eyecolor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;firstName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;first&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;lastName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;last&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;eyeColor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;eyecolor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;prototype&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;firstName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;lastName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;javascript-可迭代对象&#34;&gt;JavaScript 可迭代对象
&lt;/h3&gt;&lt;h4 id=&#34;遍历字符串&#34;&gt;遍历字符串
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;W3School&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// 要执行的代码块
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;遍历数组-1&#34;&gt;遍历数组
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// 要执行的代码块
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;javascript-迭代器&#34;&gt;JavaScript 迭代器
&lt;/h4&gt;&lt;p&gt;当一个对象实现了 next() 方法时，它就成为了一个迭代器。&lt;/p&gt;
&lt;p&gt;next() 方法必须返回一个带有两个属性的对象：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;（下一个值）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;done&lt;/code&gt;（true 或 false）如果迭代器已经完成，则返回 true；迭代器产生了一个新值，则返回 false&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;JavaScript 中的可迭代对象是具有 &lt;em&gt;Symbol.iterator&lt;/em&gt; 属性的对象。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Symbol.iterator&lt;/code&gt; 是一个返回 next() 函数的函数。&lt;/p&gt;
&lt;p&gt;可以使用以下代码迭代可迭代对象：for (const x of iterable) { }&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 创建对象
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;myNumbers&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 使其可迭代
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;myNumbers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Symbol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;iterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;done&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;done&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;done&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;done&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;myNumbers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// 这里可写任何代码
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;javascript-set&#34;&gt;JavaScript Set
&lt;/h3&gt;&lt;p&gt;JavaScript 的 Set（集合）是一组唯一值的集合。每个值只能在 Set 中出现一次。可以容纳任何数据类型的值。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;方法&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;new Set()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;创建新的 Set。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;add()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;向 Set 中添加新元素。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;delete()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;从 Set 中移除元素。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;has()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;如果值存在则返回 true。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;clear()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;从 Set 中移除所有元素。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;forEach()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;为每个元素调用回调函数。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;values()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;返回包含 Set 中所有值的迭代器。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;keys()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;与 values() 相同。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;entries()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;返回迭代器，其中包含 Set 中的 [value,value] 值值对。&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;属性&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;size&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;返回 Map 元素的数量。&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;创建set&#34;&gt;创建set
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;将数组传递给 new Set()&lt;/li&gt;
&lt;li&gt;创建一个新的 Set，然后使用 add() 方法添加值&lt;/li&gt;
&lt;li&gt;创建一个新的 Set，然后使用 add() 方法添加变量&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;遍历set&#34;&gt;遍历set
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 创建 Set
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;letters&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;c&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 列出所有条目
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;letters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;forEach&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;values-方法&#34;&gt;values() 方法
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 创建迭代器
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;myIterator&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;letters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 列出所有值
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;entry&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;myIterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;javascript-map&#34;&gt;JavaScript Map
&lt;/h3&gt;&lt;p&gt;Map 保存键值对，其中键可以是任何数据类型。&lt;/p&gt;
&lt;p&gt;Map 会记住键的原始插入顺序。&lt;/p&gt;
&lt;p&gt;Map 提供表示映射大小的属性。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;方法&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;new Map()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;创建新的 Map 对象。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;set()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;为 Map 中的键设置值。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;get()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;获取 Map 对象中键的值。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;clear()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;从 Map 中移除所有元素。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;delete()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;删除由某个键指定的 Map 元素。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;has()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;如果键存在于 Map 中，则返回 true。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;forEach()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;为 Map 中的每个键/值对调用回调函数。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;entries()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;返回迭代器对象，其中包含 Map 中的 [key, value] 键值对。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;keys()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;返回迭代器对象，其中包含 Map 中的键。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;values()&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;返回迭代器对象，其中包含 Map 中的值。&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;属性&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;size&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;返回 Map 元素的数量。 （注意是属性，所以不需要括号）&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;如何创建-map&#34;&gt;如何创建 Map
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 创建一个 Map
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;apples&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;bananas&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;300&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;oranges&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 设置 Map 的值
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;apples&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;bananas&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;300&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;oranges&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//也可以用于修改现有的值
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;apples&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//获取map中键的值
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;apples&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// 返回 500
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Object（对象）&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Map（映射）&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;不可直接迭代&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;可直接迭代&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;无 size 属性&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;有 size 属性&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;键必须是字符串（或符号）&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;键可以是任何数据类型&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;键不排序&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;键按插入排序&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;有默认键&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;没有默认键&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 列出所有条目
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;forEach&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39; = &amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//entries() 方法返回一个带有 Map 中 [key,values] 的迭代器对象：
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;entries&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//keys() 方法返回一个迭代器对象，其中包含 Map 中的键：
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 列出所有键
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;keys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//values() 方法返回一个迭代器对象，其中包含 Map 中的值：
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;将对象用作键&#34;&gt;将对象用作键
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 创建对象
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;apples&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Apples&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;bananas&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Bananas&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;oranges&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Oranges&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 创建 Map
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Add new Elements to the Map
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;apples&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;bananas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;300&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;oranges&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//请记住：键是对象（apples），而不是字符串（“apples”）：
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;apples&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 返回 undefined
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>操作系统</title>
        <link>http://localhost:1313/p/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</link>
        <pubDate>Sat, 08 Mar 2025 00:48:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</guid>
        <description>&lt;p&gt;操作系统相当于软件和硬件之间的桥梁，屏蔽了硬件层的复杂性。核心部分是内核，本质上也是一个应用程序。&lt;/p&gt;
&lt;h1 id=&#34;概述&#34;&gt;概述
&lt;/h1&gt;&lt;h2 id=&#34;基本功能&#34;&gt;基本功能
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;进程管理
进程控制、进程同步、进程通信、死锁处理、处理机调度等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;内存管理
内存分配、地址映射、内存保护与共享、虚拟内存等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文件管理
文件存储空间的管理、目录管理、文件读写管理和保护等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设备管理
完成用户的 I/O 请求，方便用户使用各种设备，并提高设备的利用率。
主要包括缓冲管理、设备分配、设备处理、虛拟设备等&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;网络管理&lt;/p&gt;
&lt;p&gt;负责管理计算机网络的使用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安全管理&lt;/p&gt;
&lt;p&gt;用户的身份认证，访问控制等&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;用户态和内核态&#34;&gt;用户态和内核态
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用户态(User Mode)&lt;/strong&gt; : 用户态运行的进程可以直接读取用户程序的数据。用户态就是执行在用户空间中。 当需要调用操作系统提供的内核态级别功能时，需要系统调用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内核态(Kernel Mode)&lt;/strong&gt;：可以直接读取到计算机的任何资源，不受限制&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;切换方法&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;系统调用：用户主动请求切换到内核态，使用操作系统提供的接口。系统调用按照功能可以分为设备管理，文件管理，进程管理和内存管理。&lt;/li&gt;
&lt;li&gt;中断：当外围设备完成时，发出中断请求，cpu需要暂停去执行中断信号。如果先前执行的指令是用户态下的，那么这个时候就发生了用户态到内核态的切换。&lt;/li&gt;
&lt;li&gt;异常：当CPU执行用户态程序时，发生不可知的异常，就会切换到内核态&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;为什么需要分为两个态&#34;&gt;为什么需要分为两个态
&lt;/h3&gt;&lt;p&gt;有一些指令是比较危险的比如内存分配、设置时钟、IO 处理等，如果所有的程序都能使用这些指令的话，会对系统的正常运行造成灾难性地影响。需要限制这些危险指令只能内核态运行&lt;/p&gt;
&lt;p&gt;如果计算机系统中&lt;strong&gt;只有一个内核态，那么所有程序或进程都必须共享系统资源&lt;/strong&gt;，例如内存、CPU、硬盘等，这将导致系统资源的竞争和冲突，从而影响系统性能和效率。并且，这样也会让系统的安全性降低，毕竟所有程序或进程都具有相同的特权级别和访问权限。&lt;/p&gt;
&lt;h2 id=&#34;系统调用的过程&#34;&gt;系统调用的过程
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;用户态的程序发起系统调用，由于系统调用涉及一些特权指令，用户态程序权限不足，因此会中断执行（叫做Trap）&lt;/li&gt;
&lt;li&gt;发生中断后，当前CPU执行的程序会中断，跳转到中断处理程序。内核程序开始执行，开始处理系统调用&lt;/li&gt;
&lt;li&gt;内核处理完毕后，主动触发Trap，会再次发生中断。切换回用户态工作&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;进程和线程&#34;&gt;进程和线程
&lt;/h1&gt;&lt;p&gt;进程是&lt;strong&gt;程序的一次运行，比如打开微信就是一个进程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;线程是&lt;strong&gt;进程的一个执行路径，比如微信进行里面有一个线程负责接收最新消息&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;区别&#34;&gt;区别
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;根本区别：进程是操作系统资源分配的基本单位，线程是CPU调度的基本单位。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;内存分配：&lt;strong&gt;同一进程的&lt;/strong&gt;线程共享&lt;/strong&gt;本进程的地址&lt;strong&gt;空间和资源&lt;/strong&gt;，而&lt;strong&gt;进程之间&lt;/strong&gt;的地址空间和资源是相互&lt;strong&gt;独立的&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;系统开销：&lt;strong&gt;由于创建或撤销进程时，系统都要为之分配或回收资源，如内存空间、I/O 设备等，所付出的开销远大于&lt;/strong&gt;创建或撤&lt;/strong&gt;销线程时的&lt;strong&gt;开销&lt;/strong&gt;。每个进程都有独立的代码和数据空间（程序上下文），&lt;strong&gt;程序之间的切换会有较大的开销&lt;/strong&gt;；线程可以看做轻量级的进程，同一类线程共享代码和数据空间，每个线程都有自己独立的运行栈和程序计数器（PC），&lt;strong&gt;线程&lt;/strong&gt;之间&lt;strong&gt;切换的开销小&lt;/strong&gt;。线程是独立调度的基本单位，在同一进程中，线程的切换不会引起进程切换，从一个进程中的线程切换到另一个进程中的线程时，会引起进程切换。&lt;/p&gt;
&lt;p&gt;**通信方面：**线程间可以通过直接读写同一进程中的数据进行通信，但是进程通信需要借助 IPC&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;包含关系&lt;/strong&gt;：线程是进程划分成的更小的运行单位，一个进程在其执行的过程中可以产生多个线程。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;影响关系：&lt;strong&gt;一个进程崩溃后，在保护模式下不会对其他进程产生影响，但是&lt;/strong&gt;一个线程崩溃可能导致整个进程都死掉&lt;/strong&gt;。所以多进程要比多线程健壮。&lt;/p&gt;
&lt;h2 id=&#34;为什么有了进程还需要线程&#34;&gt;为什么有了进程还需要线程
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;资源开销方面&lt;/li&gt;
&lt;li&gt;线程更轻量级，一个进程可以创建多个线程&lt;/li&gt;
&lt;li&gt;线程可以并发处理，进程不可以&lt;/li&gt;
&lt;li&gt;进程通信需要借助PIC，同一进程之间的线程通信无需调用内核（因为共享内存和文件）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;为什么要使用多线程&#34;&gt;为什么要使用多线程
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;线程轻量级，且所需要的系统开销小&lt;/li&gt;
&lt;li&gt;实现高并发&lt;/li&gt;
&lt;li&gt;单核时代，多线程为了提高进程利用cpu和io系统的效率，如果一个进程只有一个线程，一个线程被阻塞整个进程都被阻塞，这样不能同时利用cpu和io系统&lt;/li&gt;
&lt;li&gt;多核时代，多线程为了提高进程利用多核cpu的能力，不同线程利用不同cpu&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;线程间的同步方式多个线程并发执行同步避免资源冲突&#34;&gt;线程间的同步方式（多个线程并发执行，同步避免资源冲突）
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;互斥锁(Mutex)&lt;/strong&gt; ：采用互斥对象机制，只有拥有互斥对象的线程才有访问公共资源的权限。因为互斥对象只有一个，所以可以保证公共资源不会被多个线程同时访问。比如 Java 中的 &lt;code&gt;synchronized&lt;/code&gt; 关键词和各种 &lt;code&gt;Lock&lt;/code&gt; 都是这种机制。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;读写锁（Read-Write Lock）&lt;/strong&gt; ：允许&lt;strong&gt;多个线程同时读&lt;/strong&gt;取共享资源，但只有&lt;strong&gt;一个线程&lt;/strong&gt;可以对共享资源进行&lt;strong&gt;写操作&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;信号量(Semaphore)&lt;/strong&gt; ：它允许同一时刻&lt;strong&gt;多个线程访问同一资源&lt;/strong&gt;，但是需要控制同一时刻访问此资源的&lt;strong&gt;最大线程数量&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;屏障（Barrier）&lt;/strong&gt; ：屏障是一种同步原语，用于等待多个线程到达某个点再一起继续执行。当一个线程到达屏障时，它会停止执行并等待其他线程到达屏障，直到所有线程都到达屏障后，它们才会一起继续执行。比如 Java 中的 &lt;code&gt;CyclicBarrier&lt;/code&gt; 是这种机制。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;事件(Event)&lt;/strong&gt; :Wait/Notify：通过通知操作的方式来保持多线程同步，还可以方便的实现多线程优先级的比较操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;pcb&#34;&gt;PCB
&lt;/h1&gt;&lt;p&gt;**进程控制块，**是操作系统用来管理和跟踪进程的数据结构，每个进程对应一个独立PCB。&lt;/p&gt;
&lt;p&gt;包含内容：进程的描述信息（进程名字，标识符等），进程的调度信息，包括阻塞原因，进程状态，进程优先级。进程对资源的需求情况（cpu时间，内存空间）。进程打开的文件信息&lt;/p&gt;
&lt;h2 id=&#34;进程的状态&#34;&gt;进程的状态
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;创建状态(new)&lt;/strong&gt;：进程正在被创建。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;就绪状态(ready)&lt;/strong&gt;：进程获得了所需资源，等待&lt;strong&gt;处理器分配的时间片&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;运行状态(running)&lt;/strong&gt;：进程正在&lt;strong&gt;处理器&lt;/strong&gt;上运行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;阻塞状态(waiting)&lt;/strong&gt;：又称为等待状态，进程正在等&lt;strong&gt;待某资源为可用&lt;/strong&gt;或&lt;strong&gt;IO 操作完成&lt;/strong&gt;。即使处理器空闲，该进程也不能运行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;结束状态(terminated)&lt;/strong&gt;：&lt;strong&gt;进程正常结束&lt;/strong&gt;或其他原因&lt;strong&gt;中断退出运行&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/image.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;进程间的通信方式ipc&#34;&gt;进程间的通信方式IPC
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;管道/匿名管道(Pipes)&lt;/strong&gt; ：用于&lt;strong&gt;父子进程间&lt;/strong&gt;或者&lt;strong&gt;兄弟进程之间&lt;/strong&gt;的通信。管道其实就是&lt;strong&gt;内核中的缓存&lt;/strong&gt;，从一端写入，另一端读取数据。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;有名管道(Names Pipes) :&lt;strong&gt;为了克服管道的缺点（只能在有关系的进程间通信），提出了有名管道。有名管道严格遵循&lt;/strong&gt;先进先出&lt;/strong&gt;(first in first out)。有名管道以&lt;strong&gt;磁盘文件的方式存在&lt;/strong&gt;，可以实现本机任意两个进程通信。管道的特点是&lt;strong&gt;使用简单，缺点是通信方式效率低&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;信号(Signal)&lt;/strong&gt; ：信号是一种比较复杂的通信方式，用于通知接收进程某个事件已经发生；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;消息队列(Message Queuing)&lt;/strong&gt; ：消息队列面向记录，可以独立于读写进程存在。消息队列存放在内核中，只有在内核重启或者显式地删除一个消息队列时，该消息队列才会被真正的删除。消息队列可以实现消息的随机查询,消息不一定要以先进先出的次序读取,也可以按消息的类型读取.比 FIFO 更有优势。消息队列克服了信号承载信息量少，管道只能承载无格式字节流以及缓冲区大小受限等缺点。消息队列不适合比较大的数据传输，因为每个消息体有最大长度限制。消息队列通信的过程中，存在用户态到内核态之间的数据拷贝开销。因为写入数据的时候会发生用户态到内核态之间的转换。读数据的时候，会发生内核态到用户态转换的过程。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;共享内存(Shared memory)&lt;/strong&gt; ：多个进程访问同一块内存空间，不同进程可以及时看到对方进程中对共享内存中数据的更新。这种方式需要依靠某种同步操作，如&lt;strong&gt;互斥锁&lt;/strong&gt;和&lt;strong&gt;信号量&lt;/strong&gt;等。可以说这是最有用的进程间通信方式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;信号量(Semaphores)&lt;/strong&gt; ：用了共享内存通信，为了防止多线程进行资源，需要一个保护机制，所以引入了信号量。信号量是一个&lt;strong&gt;计数器，&lt;strong&gt;有两个原子操作即&lt;/strong&gt;p，v操作&lt;/strong&gt; 。P操作信号量减去 -1，相减后如果信号量**&amp;lt;0**，则表明资源已被占用，进程&lt;strong&gt;需阻塞等待&lt;/strong&gt;；相减后如果信号量**&amp;gt;=0**，则表明还有资源可使用，进程可正常&lt;strong&gt;继续执行&lt;/strong&gt;。V操作，信号量加上 1，相加后如果信号量&amp;lt;= 0，则表明当前有阻塞中的进程，于是会将该进程&lt;strong&gt;唤醒运行&lt;/strong&gt;；相加后如果信号量&amp;gt;0，则表明当前没有阻塞中的进程。P 操作是用在&lt;strong&gt;进入共享资源之前&lt;/strong&gt;，V操作是用在离开&lt;strong&gt;共享资源之后&lt;/strong&gt;，这两个操作是必须成对出现的&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;套接字(Sockets)&lt;/strong&gt; : 前面提到方法都是在同一台主机上进行进程间通信，那要想跨网络与不同主机上的进程之间通信，就需要 Socket 通信了。 此方法主要用于在客户端和服务器之间通过网络进行通信。客户端创建一个socket对象，绑定服务器ip和端口。服务器创建一个serberSocket，监听端口。服务端接收请求时就响应请求。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;进程调度算法&#34;&gt;进程调度算法
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;先到先服务(FCFS)调度算法&lt;/strong&gt; : 从就绪队列中选择一个最先进入该队列的进程为之分配资源，优点&lt;strong&gt;简单易实现，缺点是平均等待时间较长。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;短作业优先(SJF)的调度算法&lt;/strong&gt; : 从就绪队列中&lt;strong&gt;选出一个估计运行时间最短的进程为之分配资源&lt;/strong&gt;，&lt;strong&gt;缺点是可能导致长作业饿死，并且需要知道下一个进程的执行时间。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;时间片轮转调度算法&lt;/strong&gt; : ，&lt;strong&gt;将CPU时间划分成一个个的时间片（time slice）&lt;/strong&gt;，为就绪队列中的&lt;strong&gt;进程依次轮流分配一个时间片的CPU&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;时间片轮转算法的效率和时间片的大小有很大关系： 如果&lt;strong&gt;时间片太小&lt;/strong&gt;，会导致进程&lt;strong&gt;切换得太频繁&lt;/strong&gt;，在进程切换上就会花过多时间。而如果&lt;strong&gt;时间片过长&lt;/strong&gt;，那么&lt;strong&gt;实时性就不能得到保证&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;优先级调度&lt;/strong&gt; ： 从就绪队列中选择&lt;strong&gt;优先级最高的进程&lt;/strong&gt;为之分配资源，具有相同优先级的进程以先到先服务的方式执行。&lt;strong&gt;低优先级的进程可能被饿死。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;多级反馈队列调度算法&lt;/strong&gt; ：前面介绍的几种进程调度的算法都有一定的局限性。如短进程优先的调度算法，仅照顾了短进程而忽略了长进程 。多级反馈队列调度算法既能使&lt;strong&gt;高优先级的作业得到响应又能使短作业（进程）迅速完成&lt;/strong&gt;。因而它是目前被公认的一种较好的进程调度算法，UNIX 操作系统采取的便是这种调度算法。具体做法：将就绪队列拆分成若干个，不用的就绪队列采用不同的调度算法。对于优先级低的队列用时间片轮转方法。其他队列遵循先到先服务。&lt;strong&gt;按照队列优先级调度，首先调度最优优先级队列的进程&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;僵尸进程和孤儿进程&#34;&gt;僵尸进程和孤儿进程
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;僵尸进程&lt;/strong&gt;：&lt;strong&gt;子进程已经终止，但是其父进程仍在运行&lt;/strong&gt;，且父进程没有调用 wait()或 waitpid()等系统调用来获取子进程的状态信息，释放子进程占用的资源，导致&lt;strong&gt;子进程的 PCB 依然存在于系统中&lt;/strong&gt;，但无法被进一步使用。这种情况下，子进程被称为“僵尸进程”。避免僵尸进程的产生，父进程需要及时调用 &lt;strong&gt;wait()或 waitpid()系统调用来回收子进程。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;孤儿进程&lt;/strong&gt;：一个进程的&lt;strong&gt;父进程已经终止或者不存在&lt;/strong&gt;，但是该进程仍在运行。这种情况下，该进程就是孤儿进程。为了避免孤儿进程占用系统资源，操作系统会将孤儿进程的父进程设置为 init 进程（进程号为 1），由 &lt;strong&gt;init 进程&lt;/strong&gt;来回收孤儿进程的资源。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查找僵尸进程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;top命令 zombie表示僵尸进程的数量&lt;/p&gt;
&lt;h2 id=&#34;死锁&#34;&gt;死锁
&lt;/h2&gt;&lt;p&gt;多个进程/线程同时被阻塞，它们中的一个或者全部都在等待某个资源被释放。比如两个进程A,B，进程 A 占用资源 X 并且请求资源 Y，而进程 B 已经占用了资源 Y 并请求资源 X。两个进程都在等待对方释放资源，无法继续执行，陷入了死锁状态。&lt;/p&gt;
&lt;h3 id=&#34;死锁的四个必要条件&#34;&gt;死锁的四个必要条件
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;互斥&lt;/strong&gt;：&lt;strong&gt;资源必须处于非共享模式&lt;/strong&gt;，即一次只有一个进程可以使用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;占有并等待&lt;/strong&gt;：经得到了某个资源的进程可以再请求新的资源。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;非抢占&lt;/strong&gt;：已经分配给一个进程的资源不能强制性地被抢占，它只能被占有它的进程显式地释放。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;循环等待&lt;/strong&gt;：有一组等待进程 &lt;code&gt;{P0, P1,..., Pn}&lt;/code&gt;， &lt;code&gt;P0&lt;/code&gt; 等待的资源被 &lt;code&gt;P1&lt;/code&gt; 占有，&lt;code&gt;P1&lt;/code&gt; 等待的资源被 &lt;code&gt;P2&lt;/code&gt; 占有，……，&lt;code&gt;Pn-1&lt;/code&gt; 等待的资源被 &lt;code&gt;Pn&lt;/code&gt; 占有，&lt;code&gt;Pn&lt;/code&gt; 等待的资源被 &lt;code&gt;P0&lt;/code&gt; 占有。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同时满足这四个条件不一定发生死锁&lt;/p&gt;
&lt;h3 id=&#34;解决死锁的方法&#34;&gt;解决死锁的方法
&lt;/h3&gt;&lt;h3 id=&#34;1-预防&#34;&gt;&lt;strong&gt;1. 预防&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;是采用某种策略，&lt;strong&gt;限制并发进程对资源的请求&lt;/strong&gt;，从而使得死锁的必要条件在系统执行的任何时间上都不满足&lt;/p&gt;
&lt;p&gt;破坏死锁产生的四个必要条件的其中之一，主要是&lt;strong&gt;破坏占有并等待，和循环等待&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、静态分配策略&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;是指一个进程必须在执行前就申请到它所需要的全部资源，并且知道它所要的资源都得到满足之后才开始执行。缺点：降低资源的利用率，有些资源后续才使用，可能导致一个进程占用了一些几乎不用的资源而使得其他需要该资源的进程产生等待。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、层次分配策略&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将资源分为多个层次，一个进程得到某一层的一个资源后，只能再申请较高一层的资源。释放的时候，需要先释放高层资源。这样就不会出现循环等待、&lt;/p&gt;
&lt;h3 id=&#34;2避免&#34;&gt;&lt;strong&gt;2.避免&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;则是系统在分配资源时，根据资源的使用情况&lt;strong&gt;提前做出预测&lt;/strong&gt;，从而&lt;strong&gt;避免死锁的发生&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;允许四个条件出现，但是根据系统状态（安全和不安全）在分配资源的时候判断是否安全，安全才可以分配。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;银行家算法：在分配资源前，&lt;strong&gt;会检查是否&lt;/strong&gt;存在一个安全序列，能够&lt;/strong&gt;依次满足&lt;strong&gt;所有进程完成。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;3检测&#34;&gt;&lt;strong&gt;3.检测&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;是指系统设有&lt;strong&gt;专门的机构&lt;/strong&gt;，当死锁发生时，该机构能够检测死锁的发生，并精确地确定与死锁有关的进程和资源。类似乐观锁的思想，等发生了再去解决。可利用&lt;strong&gt;进程-资源分配图&lt;/strong&gt;检测系统是否处于死锁。&lt;/p&gt;
&lt;p&gt;用一个方框表示每一个资源类，方框中的黑点表示该资源类中的各个资源，用一个圆圈表示每一个进程，用 &lt;strong&gt;有向边&lt;/strong&gt; 来表示&lt;strong&gt;进程申请资源和资源被分配的情况&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;死锁检测算法是通过&lt;strong&gt;检测有向图是否存在环来实现&lt;/strong&gt;，从一个节点出发进&lt;strong&gt;行深度优先搜索&lt;/strong&gt;，&lt;strong&gt;对访问过的节点进行标记，如果访问了已经标记的节点&lt;/strong&gt;，就表示有向图存在环，也就是检测到死锁的发生。&lt;/p&gt;
&lt;h3 id=&#34;4解除&#34;&gt;&lt;strong&gt;4.解除&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;是与检测相配套的一种措施，用于&lt;strong&gt;将进程从死锁状态下解脱出来&lt;/strong&gt;。、&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;立即结束所有进程的执行&lt;/strong&gt;，重新启动操作系统 ：这种方法简单，但以前所在的工作全部作废，损失很大。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;撤销涉及死锁的所有进程&lt;/strong&gt;，&lt;strong&gt;解除死锁后继续运行&lt;/strong&gt;：这种方法能彻底打破死锁的循环等待条件，但将付出很大代价，例如有些进程可能已经计算了很长时间，由于被撤销而使产生的部分结果也被消除了，再重新执行时还要再次进行计算。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;逐个撤销涉及死锁的进程&lt;/strong&gt;，回收其资源直至死锁解除。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;抢占资源&lt;/strong&gt;：从涉及死锁的一个或几个进程中抢占资源，把夺得的资源再分配给涉及死锁的进程直至死锁解除&lt;/p&gt;
&lt;h1 id=&#34;内存管理&#34;&gt;内存管理
&lt;/h1&gt;&lt;p&gt;负责内存的分配与回收&lt;/p&gt;
&lt;p&gt;地址转换：将虚拟地址转换为内存中的物理地址&lt;/p&gt;
&lt;p&gt;内存扩充：没有足够的内存时，利用虚拟内存技术&lt;/p&gt;
&lt;h2 id=&#34;内存碎片&#34;&gt;内存碎片
&lt;/h2&gt;&lt;p&gt;在内存的申请和释放过程中产生的，通常分为下面两种&lt;/p&gt;
&lt;p&gt;**内部内存碎片(Internal Memory Fragmentation，简称为内存碎片)：已经分配给进程使用但是未被使用的内存。**产生原因是分配的时候采用固定比例，分配的内存大于需要的空间。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;外部内存碎片(External Memory Fragmentation，简称为外部碎片)&lt;/strong&gt;：内存中较小的内存块，无法满足一个进程的需求&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/image%201.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;/img/image.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;内存管理方式&#34;&gt;内存管理方式
&lt;/h2&gt;&lt;h3 id=&#34;1连续内存管理&#34;&gt;1.连续内存管理
&lt;/h3&gt;&lt;p&gt;为一个用户程序分配一个连续的内存空间&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;块式管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;将内存按固定块划分&lt;/strong&gt;，每个块中只包含一个进程。如果程序运行需要内存的话，操作系统就分配给它一块。linux中为了解决外部碎片问题，采用伙伴系统算法实现，思想是内存按照2的幂次方分配，将相邻的内存组成一对伙伴。当进行内存分配时，伙伴系统会尝试找到大小最合适的内存块。如果找到的内存块过大，就将其一分为二，分成两个大小相等的伙伴块。如果还是大的话，就继续切分，直到到达合适的大小为止。假设两块相邻的内存块都被释放，系统会将这两个内存块合并，进而形成一个更大的内存块&lt;/p&gt;
&lt;p&gt;缺点：容易造成内部碎片。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;固定分区分配&lt;/strong&gt;（使用分区使用表）
分区大小相等（缺乏灵活性，造成内存空间浪费）
分区大小不等&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动态分区分配/可变分区分配&lt;/strong&gt;（数据结构：空闲分区表或空闲分区链）
存储保护：重定位寄存器（基址寄存器和限长寄存器）：对内存的访问进行保护
基址寄存器：记录进程在内存中的起始物理地址
限长寄存器：记录进程逻辑地址长度
&lt;strong&gt;动态分区分配算法&lt;/strong&gt;
&lt;strong&gt;首次适应（First Fit）&lt;/strong&gt;：从头开始找到的第一个足够大的分区（执行最快）。对空闲表项地址从大到小排列。
&lt;strong&gt;循环首次适应（Next Fit）&lt;/strong&gt;：首次适应的变种，从上次找到的位置继续往下找，找到的第一个足够大的分区
&lt;strong&gt;最佳适应（Best Fit）&lt;/strong&gt;：搜索所有可用分区，找到的足够大但却最小的分区.要求所有空闲分区按其容量从小到大顺序形成空闲分区链。这样找到的第一个就满足。（很多碎片）
&lt;strong&gt;最差适应（Worst Fit&lt;/strong&gt;）：搜索所有可用分区，找到的最大的分区。（减少碎片）
&lt;strong&gt;回收内存&lt;/strong&gt;
（1）前面有空闲区，则合并，不必为回收分区分配新表项，只需修改前面分区的大小
（2）后面有空闲区，则合并，使用回收区首址作为新空闲区首址
（3）前面后面都有空闲区，则合并，使用前面的表项和首址，取消后面的表项
（4）前面后面都没有空闲区，则合并，为回收分区分配新表项碎片&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;2非连续内存管理&#34;&gt;2.非连续内存管理
&lt;/h3&gt;&lt;p&gt;允许一个程序使用内存分布在不相邻的内存中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;段式管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以段(一段连续的物理内存)的形式管理/分配物理内存。段是有实际意义的，每个段定义了一组逻辑信息，例如,有主程序段MAIN、子程序段 X、数据段 D 及栈段 S 等。 段式管理通过&lt;strong&gt;段表&lt;/strong&gt;对应&lt;strong&gt;逻辑地址和物理地址。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;缺点：导致内存外部碎片。 因为段和段之间容易留下空间无法使用&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;页式管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;把内存分为大小相等且固定的一页一页的形式&lt;/strong&gt;，页较小，相对相比于&lt;strong&gt;块式管理的划分力度更大&lt;/strong&gt;，提高了内存利用率，减少了碎片。任意的虚拟页可以被映射到物理内存呢中的任意物理页上&lt;/p&gt;
&lt;p&gt;逻辑地址=页号+业内地址  物理地址=快号+业内地址&lt;/p&gt;
&lt;p&gt;没有外碎片，有内碎片&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;段页式管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;页是物理单位，段是逻辑单位。分页可以有效提高内存利用率，分段可以更好满足用户需求&lt;/p&gt;
&lt;p&gt;段页式管理：把内存分成若干段，每个段分成若个页&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分页机制和分段机制有哪些共同点和区别呢？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;共同点 ：&lt;/p&gt;
&lt;p&gt;分页机制和分段机制都是为了提高内存利用率，减少内碎片。&lt;/p&gt;
&lt;p&gt;页和段都是&lt;strong&gt;离散存储&lt;/strong&gt;的，属于非连续存储管理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;区别 ：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;页是物理单位&lt;/strong&gt;，即操作系统&lt;strong&gt;将物理内存划分成固定大小的页面&lt;/strong&gt;，每个页面的大小通常是 2 的幂次方。段则是逻辑单位，是为了满足&lt;strong&gt;程序&lt;/strong&gt;对内存空间的逻辑需求而设计的，根据程序中的数据和代码的逻辑结构来划分。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;页的大小是固定的&lt;/strong&gt;，由操作系统决定；而&lt;strong&gt;段的大小不固定&lt;/strong&gt;，取决于我们当前运行的程序。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分段机制容易出现外部内存碎片，分页机制解决了外部内存碎片问题&lt;/strong&gt;，但是仍然可能出现内部内存碎片。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;虚拟内存&#34;&gt;虚拟内存
&lt;/h1&gt;&lt;p&gt;虚拟内存是指逻辑上存在，是假象的，主要作用是为进程访问主存（物理内存）的桥梁并简化内存管理&lt;/p&gt;
&lt;h3 id=&#34;优点为什么要用&#34;&gt;优点（为什么要用）
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;隔离进程。每个进程都有对应的虚拟地址空间，进程之间彼此隔离&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;提升物理内存利用率。操作系统只需要将当前进程正在使用的部分数据载入物理内存&lt;/li&gt;
&lt;li&gt;简化内存管理。不用和真正物理内存打交道，而是借组虚拟地址空间访问&lt;/li&gt;
&lt;li&gt;实现多个进程共享物理内存。&lt;/li&gt;
&lt;li&gt;提高内存使用的安全性：控制进程对物理内存的访问，避免造成系统崩溃&lt;/li&gt;
&lt;li&gt;提供更大的可使用内存空间：物理内存不够的时候，可以利用磁盘充当。将物理内存页保存到磁盘，就是读写速度会慢一点。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;逻辑虚拟地址和物理地址&#34;&gt;&lt;strong&gt;逻辑(虚拟)地址和物理地址&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;物理地址指真实物理内存的中的地址，也就是&lt;strong&gt;内存地址寄存器&lt;/strong&gt;的地址。物理地址的集合叫物理地址空间。&lt;/p&gt;
&lt;p&gt;逻辑地址：比如说在程序中某个对象在堆上的地址。虚拟内存地址的集合叫虚拟地址空间。逻辑地址包括&lt;strong&gt;段基地址&lt;/strong&gt;（在内存中的起始位置）和&lt;strong&gt;偏移地址&lt;/strong&gt;（距离段基地址的偏移量）
为什么需要有两个地址？&lt;strong&gt;逻辑地址可以让地址分配更加灵活，比如逻辑地址中连续的地址可以在物理地址中不连续。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将虚拟地址翻译成物理地址的主要机制有：&lt;strong&gt;分段机制和分页机制和段页机制&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;分段机制&#34;&gt;分段机制
&lt;/h3&gt;&lt;p&gt;通过&lt;strong&gt;段表&lt;/strong&gt;映射虚拟地址和物理地址&lt;/p&gt;
&lt;p&gt;虚拟地址由两部分组成：&lt;strong&gt;段号，段内偏移量&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;具体地址翻译过程如下：首先解析得到虚拟地址的段号，然后在段表中根据段号找到该段的起始地址。该段的起始地址加上段内偏移量得到最终的物理地址。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image%202.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;段表中还有段长（检查虚拟地址是否超出合法范围），段类型等信息&lt;/p&gt;
&lt;p&gt;通过段号不一定可以找到对应的段表项目。&lt;/p&gt;
&lt;h3 id=&#34;分页机制&#34;&gt;分页机制
&lt;/h3&gt;&lt;p&gt;通过&lt;strong&gt;页表&lt;/strong&gt;映射。&lt;/p&gt;
&lt;p&gt;虚拟地址由两部分组成：&lt;strong&gt;页号，页内偏移量。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;具体地址翻译过程如下：首先解析得到虚拟地址的页号号，然后在页表中根据页号找到该页的起始地址。该页的起始地址加上页内偏移量得到最终的物理地址。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image%203.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;页表中号存储如访问标志（标志该页面有没有被访问过）等信息&lt;/p&gt;
&lt;h3 id=&#34;多级页表&#34;&gt;&lt;strong&gt;多级页表&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;为了避免把全部页表一直放在内存中占用过多空间，可以压缩页表占用的内存。&lt;/p&gt;
&lt;p&gt;比如说二级页表，一级页表项可以覆盖更大的范围，然后一个页表项再对应二级页表项。那么如果某一个一级页表项用不到，就不创建它对应的二级页表项。&lt;/p&gt;
&lt;p&gt;多级页表属于时间换空间，增加页表查询的次数减少页表的占用空间&lt;/p&gt;
&lt;h3 id=&#34;块表&#34;&gt;块表
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;为了解决虚拟地址到物理地址的转换速度，&lt;strong&gt;操作系统在 页表方案 基础之上引入了 快表
可以理解为一种特殊的&lt;/strong&gt;高速缓冲存储器&lt;/strong&gt;（Cache），缓存了虚拟页号到物理页号的映射关系。&lt;/p&gt;
&lt;p&gt;使用快表之后的地址转换流程是这样的：
根据虚拟地址中的页号查&lt;strong&gt;快表&lt;/strong&gt;；
如果该页在快表中，直接从快表中读取相&lt;strong&gt;应的物理地址&lt;/strong&gt;；
如果该页不在快表中，就访问&lt;strong&gt;内存中的页表&lt;/strong&gt;，再从页表中得到物理地址，同时将&lt;strong&gt;页表中的该映射表项添加到快表中；&lt;/strong&gt;
当快表填满后，又要登记新页时，就按照一定的淘汰策略淘汰掉快表中的一个页。&lt;/p&gt;
&lt;p&gt;由于页表也在主存中，因此在没有块表的时候，需要访问两次主存。&lt;/p&gt;
&lt;h3 id=&#34;页缺失&#34;&gt;页缺失
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;硬性页缺失（Hard Page Fault）&lt;/strong&gt;：物理内存中没有对应的物理页。会从磁盘文件中加载相应的内容到物理内存中。
&lt;strong&gt;软性页缺失（Soft Page Fault）&lt;/strong&gt;：物理内存中有对应的物理页，但虚拟页还未和物理页建立映射。&lt;/p&gt;
&lt;h3 id=&#34;页面置换算法&#34;&gt;页面置换算法
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;最佳页面置换算法（OPT，Optimal）&lt;/strong&gt;：优先选择淘汰的页面是**以后永不使用的，&lt;strong&gt;或者是&lt;/strong&gt;在最长时间内不再被访问的页面，**这样可以保证获得最低的缺页率。但由于人们目前无法预知进程在内存下的若干页面中哪个是未来最长时间内不再被访问的，因而该算法无法实现，只是理论最优的页面置换算法，可以作为衡量其他置换算法优劣的标准。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;先进先出页面置换算法（FIFO，First In First Out）&lt;/strong&gt; : 最简单的一种页面置换算法，总是&lt;strong&gt;淘汰最先进入内存的页面&lt;/strong&gt;，即选择在内存中驻留时间最久的页面进行淘汰。（&lt;strong&gt;经常访问或者需要长期存在的页面会被频繁调入调出）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;最近最久未使用页面置换算法（LRU ，Least Recently Used）&lt;/strong&gt;：LRU 算法赋予每个页面一个访问字段，用来记录一个页面自上次被访问以来所经历的时间 T，当须淘汰一个页面时，选择现有页面中其 T 值最大的，即最近最久未使用的页面予以淘汰。（使用最多）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;最少使用页面置换算法（LFU，Least Frequently Used）&lt;/strong&gt; : 和 LRU 算法比较像，不过该置换算法选择的&lt;strong&gt;是之前一段时间内使用最少的页面&lt;/strong&gt;作为淘汰页。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;时钟页面置换算法（Clock）&lt;/strong&gt;：可以认为是一种最近未使用算法，即逐出的页面都是最近没有使用的那个。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;局部性原理&#34;&gt;局部性原理
&lt;/h3&gt;&lt;p&gt;局部性原理是指在程序执行过程中，数据和指令的访问存在一定的空间和时间上的局部性特点。其中，时间局部性是指一个数据项或指令在&lt;strong&gt;一段时间内被反复使用&lt;/strong&gt;的特点，空间局部性是指一个数据项或指令在一段时间内&lt;strong&gt;与其相邻的数据项或指令被反复&lt;/strong&gt;使用的特点。&lt;/p&gt;
&lt;p&gt;在分页机制中，页表的作用是将虚拟地址转换为物理地址，从而完成内存访问。在这个过程中，局部性原理的作用体现在两个方面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;时间局部性&lt;/strong&gt;：由于程序中&lt;strong&gt;存在一定的循环或者重复操作&lt;/strong&gt;，因此会&lt;strong&gt;反复访问同一个页或一些特定&lt;/strong&gt;的页，这就体现了时间局部性的特点。为了利用&lt;strong&gt;时间局部性&lt;/strong&gt;，分页机制中通常采&lt;strong&gt;用缓存机制来&lt;/strong&gt;提高页面的命中率，即将&lt;strong&gt;最近访问过的&lt;/strong&gt;一些页放入缓存中，如果下一次访问的页已经在缓存中，就不需要再次访问内存，而是直接从缓存中读取。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;空间局部性&lt;/strong&gt;：由于程序中数据和指令的访问通常是具有一定的空间连续性的，因此&lt;strong&gt;当访问某个页时，往往会顺带访问其相邻的一些页&lt;/strong&gt;。为了利用空间局部性，分页机制中通常采用预取技术来&lt;strong&gt;预先将相邻的一些页读入内存缓存中&lt;/strong&gt;，以便在未来访问时能够直接使用，从而提高访问速度。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;文件系统&#34;&gt;文件系统
&lt;/h1&gt;&lt;p&gt;主要负责管理和组织计算机存储设备上的文件和目录，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;存储管理&lt;/strong&gt;：将文件数据存储到物理存储介质中，并且管理空间分配，以确保每个文件都有足够的空间存储，并避免文件之间发生冲突。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文件管理&lt;/strong&gt;：文件的创建、删除、移动、重命名、压缩、加密、共享等等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;目录管理&lt;/strong&gt;：目录的创建、删除、移动、重命名等等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文件访问控制&lt;/strong&gt;：管理不同用户或进程对文件的访问权限，以确保用户只能访问其被授权访问的文件，以保证文件的安全性和保密性&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;硬链接和软链接的区别&#34;&gt;硬链接和软链接的区别
&lt;/h2&gt;&lt;h2 id=&#34;硬链接为什么不能跨文件系统&#34;&gt;&lt;strong&gt;硬链接为什么不能跨文件系统？&lt;/strong&gt;
&lt;/h2&gt;&lt;h2 id=&#34;提高文件系统性能的方式&#34;&gt;提高文件系统性能的方式
&lt;/h2&gt;&lt;h2 id=&#34;常见的磁盘调度算法&#34;&gt;常见的磁盘调度算法
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;先来先服务&lt;/p&gt;
&lt;p&gt;按照磁盘请求的顺序进行调度。简单公平，平均寻道时间较长&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最短寻道时间优先&lt;/p&gt;
&lt;p&gt;优先调度与当前磁头所在磁道距离最近的磁道。
虽然平均寻道时间比较低，但是不够公平。如果新到达的磁道请求总是比一个在等待的磁道请求近，那么在等待的磁道请求会一直等待下去，也就是出现饥饿现象。具体来说，两端的磁道请求更容易出现饥饿现象。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;将数据从缓冲区读出写入磁盘这之间经历了几次复制&#34;&gt;&lt;strong&gt;将数据从缓冲区读出写入磁盘，这之间经历了几次复制&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image%204.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;第一次拷贝，把磁盘上的数据拷贝到操作系统内核的缓冲区里，这个拷贝的过程是通过 DMA 搬运的。
第二次拷贝，把内核缓冲区的数据拷贝到用户的缓冲区里，于是我们应用程序就可以使用这部分数据了，这个拷贝到过程是由 CPU 完成的。
第三次拷贝，把刚才拷贝到用户的缓冲区里的数据，再拷贝到内核的 socket 的缓冲区里，这个过程依然还是由 CPU 搬运的。
第四次拷贝，把内核的 socket 缓冲区里的数据，拷贝到网卡的缓冲区里，这个过程又是由 DMA 搬运的。&lt;/p&gt;
&lt;p&gt;会经历4次上下文切换，2次CPU拷贝，2次DMA拷贝
上下文切换：当用户程序向内核发起系统调用时，CPU 将用户进程从用户态切换到内核态；当系统调用返回时，CPU 将用户进程从内核态切换回用户态。
CPU拷贝：由 CPU 直接处理数据的传送，数据拷贝时会一直占用 CPU 的资源。
DMA拷贝：由 CPU 向DMA磁盘控制器下达指令，让 DMA 控制器来处理数据的传送，数据传送完毕再把信息反馈给 CPU，从而减轻了 CPU 资源的占有率。&lt;/p&gt;
&lt;p&gt;但是有时候用户并不会对数据进行加工，所以没必要将数据拷贝到用户缓冲区。也就有一种新技术：零拷贝&lt;/p&gt;
&lt;p&gt;零拷贝的实现：（优化技术）
①mmap+write&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/image%205.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;具体过程如下:
1.应用进程调用了 mmap()后，DMA 会把磁盘的数据拷贝到内核的缓冲区里。接着，应用进程跟操作系统内核「共
享」这个缓冲区;
2.应用进程再调用 write()，操作系统直接将内核缓冲区的数据拷贝到 socket 缓冲区中，这一切都发生在内核态，由
CPU 来搬运数据;
3.最后，把内核的 socket 缓冲区里的数据，拷贝到网卡的缓冲区里，这个过程是由 DMA 搬运的。
我们可以得知，通过使用 mmap() 来代替 read()， 可以减少一次数据拷贝的过程。&lt;/p&gt;
&lt;h1 id=&#34;linux&#34;&gt;Linux
&lt;/h1&gt;&lt;h2 id=&#34;linux文件系统&#34;&gt;Linux文件系统
&lt;/h2&gt;&lt;p&gt;一切被操作系统管理的资源都被视为文件。这种设计使得 Linux 系统可以通过统一的文件接口来管理和操作不同类型的资源，从而实现了一种统一的文件操作方式。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>An Attentive Inductive Bias for Sequential Recommendation beyond the Self-Attention</title>
        <link>http://localhost:1313/p/an-attentive-inductive-bias-for-sequential-recommendation-beyond-the-self-attention/</link>
        <pubDate>Thu, 27 Feb 2025 00:48:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/an-attentive-inductive-bias-for-sequential-recommendation-beyond-the-self-attention/</guid>
        <description>&lt;p&gt;标题：在顺序推荐中优于自注意力的一种注意归纳偏差&lt;/p&gt;
&lt;p&gt;ps：归纳偏置指从现实生活中观察到的现象中归纳出一定的规则，然后对模型做一定的约束，从而可以起到“模型选择”的作用，即从假设空间中选择出更符合现实规则的模型。&lt;/p&gt;
&lt;p&gt;摘要：基于Transformers的顺序推荐模型已经取得了显著的成功。但是在计算机视觉和自然语言处理中的Transformer自注意机制存在过度平滑问题，即，隐藏表示变得与token相似。作者提出在顺序推荐领域中具有低通滤波性质的自注意机制，也会导致过度平滑。为此，提出了一种新的方法BSARec，该方法利用傅立叶变换，通过考虑细粒度的顺序模式获得归纳偏差，以及整合低频和高频信息以减轻过度平滑。弥补现有基于Transformer的序列推荐模型的不足。&lt;/p&gt;
&lt;p&gt;在SR领域中过度平滑问题指的是&lt;/p&gt;
&lt;p&gt;低通滤波器仅捕获用户的正在进行的偏好，即，一个苹果狂热者，并且可能难以捕捉基于新兴趣或趋势的偏好&lt;/p&gt;
&lt;p&gt;频率重标器可以捕获用户行为模式中的高频行为模式（例如由短期趋势驱动的兴趣）以及低频模式（例如长期兴趣）&lt;/p&gt;
&lt;p&gt;傅里叶变化：是数字信号处理中的一种方法，&lt;/p&gt;
&lt;p&gt;图傅立叶变换（GFT）可以被认为是离散傅里叶的推广。DFT是一种将值序列投影到环图的拉普拉斯矩阵的特征空间（与傅立叶域相同）的方法。频率可以用环图来描述，在其信号上具有不同符号的相邻节点的数量就是频率。因此，低频信息意味着N个节点上的一系列信号，其符号不经常改变。在序列推荐中，其中N个节点意味着N个项目嵌入，这种低频信息意味着用户的长期兴趣。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Frequency Enhanced Hybrid  Attention Network for Sequential Recommendation</title>
        <link>http://localhost:1313/p/frequency-enhanced-hybrid-attention-network-for-sequential-recommendation/</link>
        <pubDate>Thu, 27 Feb 2025 00:48:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/frequency-enhanced-hybrid-attention-network-for-sequential-recommendation/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;SIGIR 2023&lt;/p&gt;
&lt;p&gt;代码链接：https://github.com/sudaada/FEARec&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;序列推荐里经常用到Self-Attention技术，但研究表明，&lt;strong&gt;SA是一个低通滤波器，不足以捕获高频信息。&lt;strong&gt;此外，由于用户行为中的各种item相互交织，现有模型无法区分时域中隐藏的固有周期性。因此，本文将视角转移到频域，提出了一种用于顺序推荐的频率增强混合注意网络，即 FEARec。本文首先用&lt;/strong&gt;斜坡结构&lt;/strong&gt;改进频域中的原始时域自注意力，使模型可以明确地学习低频和高频信息。然后设计了一个&lt;strong&gt;频域自相关的注意机制&lt;/strong&gt;，以捕获周期性特征并在联合模型中融合时间和频率级别的注意。最后，利用&lt;strong&gt;对比学习和频率正则化&lt;/strong&gt;来确保多个视图在时域和频域中对齐。&lt;/p&gt;
&lt;p&gt;Self-Attention的优势在于显式地建模了item之间的相关性，但SA本质上是一个低通滤波器，它会不断擦除序列中的高频信息。（p.s.这是一把双刃剑，如果高频信息是噪声，那过滤掉就完全没有问题；如果用户在短时间内有频繁的交互，那过滤高频信息就会造成信息损失。）&lt;/p&gt;
&lt;p&gt;为了缓解这些问题，现有方法以不同方式导入局部约束以补充基于 Transformer 的模型。例如 LSAN采用了一种新颖的双注意范式，分别通过自注意分支和卷积分支模块捕获全局和局部偏好信号。  LOCKER将五个本地编码器与现有的全局注意力头相结合，以增强短期用户动态建模。然而，上述模型几乎都是从时域的角度来处理历史交互，而很少考虑在频域中应对这一挑战，因为在频域中可以很容易地获得减少的高频信息。以图1(a)为例，从时域来看，所有的item都是按时间顺序排列的，并且沿着t轴相互交织。通过离散傅立叶变换 (DFT)，可以将每个用户的历史项目序列特征分解为沿 w轴具有不同频率的多个行为模式，然后将输入时间特征转换到频域。最终，&lt;strong&gt;直接在频域中操作会更有效地提高self-attention捕获高频信息的能力&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/image-20240705174754010.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240705174754010&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;此外，用户在互联网上的行为往往呈现出一定的周期性趋势。以图1(b)为例，Bob的低频交互项中隐藏着一个周期性的行为模式：买了手机就带了手表和笔记本。当他最近再次购买具有类似特性的产品时，笔记本电脑可能是给他的一个很好的推荐。然而，通过直接计算项目在时域的整体注意力得分，很难找到隐藏在序列中的周期性行为模式。&lt;/p&gt;
&lt;h2 id=&#34;方法&#34;&gt;方法
&lt;/h2&gt;&lt;p&gt;频率增强混合注意网络（FEARec）主要包括三个部分。最后，我们应用对比学习和频域损失来改善时域和频域的表示
&lt;img src=&#34;http://localhost:1313/img/image-20240705181049984.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;embedding-layer&#34;&gt;embedding layer
&lt;/h3&gt;&lt;p&gt;加了位置编码和layer norm：
&lt;img src=&#34;http://localhost:1313/img/image-20240705181148206.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;frequency-enhanced-hybrid-attention-encoder&#34;&gt;Frequency Enhanced Hybrid Attention Encoder
&lt;/h3&gt;&lt;p&gt;混合注意力模块主要由三个模块构成：频率斜坡结构，混合注意力层和逐点前馈网络。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.2.1 频率斜坡结构&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这个概念应该是参考了&lt;a class=&#34;link&#34; href=&#34;https://link.zhihu.com/?target=https%3A//arxiv.org/pdf/2205.12956.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Inception Transformer&lt;/a&gt; 这篇论文。频率斜坡结构就是：在低层给高频mixer分配更多特征，在高层给低频mixer分配更多特征。每一层提取一个频率子集，以保证不同的注意力块关注不同的频谱
&lt;img src=&#34;http://localhost:1313/img/image-20240705181204999.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
&lt;img src=&#34;http://localhost:1313/img/image-20240705181244040.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.2.2 时域自注意层&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;因为前面已经做了傅立叶变换，所以做个傅立叶反变换将频域转换到时域。&lt;/p&gt;
&lt;p&gt;因为前面对频域进行了采样，所以增加个padding操作保证shape一致。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.2.3 频域自注意层&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;通过在频域计算自相关，捕获周期性行为模式。这一步是在建模图(1)(b)。&lt;/p&gt;
&lt;p&gt;首先定义延时函数Roll，其实就是一个循环数组：
&lt;img src=&#34;http://localhost:1313/img/image-20240705181310832.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;操作和时域差不多，多了一个点乘操作（element-wise product）。为什么频域的点乘会是自相关操作呢？这是根据维纳-辛钦定理得到的，通俗点说就是：时域卷积=频域相乘。
&lt;img src=&#34;http://localhost:1313/img/image-20240705181322450.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
&lt;img src=&#34;http://localhost:1313/img/image-20240705181339680.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;预估层&#34;&gt;预估层
&lt;/h3&gt;&lt;p&gt;预估层是一个典型的序列推荐的输出，对候选矩阵E求内积再softmax：
&lt;img src=&#34;http://localhost:1313/img/image-20240705181356205.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;多任务学习&#34;&gt;多任务学习
&lt;/h3&gt;&lt;p&gt;从损失函数上加强频率分段注意力与周期性提取。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;对比学习&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;简单的数据增强（裁剪、屏蔽和重新排序）&lt;strong&gt;不能保证高水平的语义相似性&lt;/strong&gt;，本文采用dropout作为增强方式。就是对嵌入层和混合注意模块进行dropout，作为正样本。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;频域正则&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于时域和频域特征表示相同的语义，只是在不同的域中，因此假设&lt;strong&gt;相似的时域特征的频谱也应该相似&lt;/strong&gt;。
&lt;img src=&#34;http://localhost:1313/img/image-20240705181413394.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
&lt;img src=&#34;img/image-20240705181413394.png&#34; alt=&#34;image-20240705181413394&#34; style=&#34;zoom:50%;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;实验&#34;&gt;实验
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/image-20240705181504587.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Graph Neural Networks in Recommender Systems: A Survey</title>
        <link>http://localhost:1313/p/graph-neural-networks-in-recommender-systems-a-survey/</link>
        <pubDate>Thu, 27 Feb 2025 00:48:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/graph-neural-networks-in-recommender-systems-a-survey/</guid>
        <description>&lt;p&gt;由北大及阿里巴巴整合211篇论文后于2022年五月发表在ACM Computing Surveys上，该论文阐述了图神经网络(Graph Neural  Network,GNN）在推荐系统中的应用综述。GNN能广泛应用于推荐系统中的一个原因是它不同于只能隐式捕获协同过滤信号（即 使用用户-项目交互作为监督信号）的传统方法，GNN可以自然地显式编码关键的协同信号(即 拓扑结构)，以改进用户和物品的表示。&lt;/p&gt;
&lt;p&gt;论文链接&lt;a class=&#34;link&#34; href=&#34;https://github.com/wusw14/GNN-in-RS&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/wusw14/GNN-in-RS&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;背景和分类&#34;&gt;背景和分类
&lt;/h2&gt;&lt;h3 id=&#34;推荐系统&#34;&gt;推荐系统
&lt;/h3&gt;&lt;h3 id=&#34;gnn&#34;&gt;GNN
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;graph convolutional network (GCN)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;graph attention network (GAT)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;gated graph neural network (GGNN)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GraphSage&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;为什么将图神经网络应用于推荐系统&#34;&gt;为什么将图神经网络应用于推荐系统
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;GNN能广泛应用于推荐系统中的一个原因是它不同于只能隐式捕获协同过滤信号（即 使用用户-项目交互作为监督信号）的传统方法，GNN可以自然地显式编码关键的协同信号(即 拓扑结构)，以改进用户和物品的表示。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;基于图神经网络推荐的分类&#34;&gt;基于图神经网络推荐的分类
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;分类的依据如下：图的结构在很大程度上取决于信息的类型。例如：社交网络可以自然地看作是一个同构图，用户-物品交互关系可以被认为是一个二分图或者是两个同构图（即  用户-用户和物品-物品图）。而且，推荐系统的任务和被使用信息的类型是高度相关的。例如，社交网络通过利用社交网络信息来构建推荐，知识图谱通过利用物品与物品之间的语义关系来增强物品的表示&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;用户-物品-协同过滤&#34;&gt;用户-物品 协同过滤
&lt;/h2&gt;&lt;h3 id=&#34;四个问题&#34;&gt;四个问题
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;图结构&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;邻居聚合&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;信息更新&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最终节点表示&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;代表性方法&#34;&gt;代表性方法
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;GC-MC&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;矩阵补完&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;只考虑一跳邻居，并且丢弃原始节点信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;采用 mean-pooling 去聚合邻居节点&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一视同仁的对待用户和物品&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;只用结点的最后一层进行预测&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;STAR-GCN&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;堆叠 GCN&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;引入重构机制&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在训练过程中注重标签泄漏问题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在训练阶段对部分结点进行掩码，并在掩码的节点上增加重构损失&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;利用重构策略缓解过拟合&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;平等的对待用户和物品&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;只用结点的最后一层进行预测&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;NGCF&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;利用不同层的表示来获得结点的 embedding&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;利用残差网络的优势&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过对邻居采用激活函数做summing up得到&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PinSage&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;结合随机游走方法和图卷积&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;采样固定数量的邻居&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从特定结点开始模仿随机游走策略的过程，然后计算出L1归一化后的结点访问次数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;结点u的邻居是前T个具有最高归一化访问次数的结点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;那些不直接与u相邻的结点也可能是它的邻居&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在聚合时，利用归一化访问次数来作为衡量邻居重要性的指标&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;importance-pooling 比 mean-pooling 采样方法更好&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这意味着并不是所有邻居结点在表示中心结点时都发挥相同的作用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;由于随机游走策略，失去了原始图结构&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;因为并不是以邻居来作为表示&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IG-MC&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;也是矩阵补全，方法同 GC-MC&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;先构造子图，然后在子图上操作&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;减少对原始图结构的依赖性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;缓解了在稀疏数据集上性能下降的问题&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用户集合&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;由目标用户和与目标物品交互过的用户组成&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;物品集合&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;由目标物品和与目标用户交互过的物品组成&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;针对数据稀疏性和冷启动问题&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;总结&#34;&gt;总结
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;图的构造（Graph Construction）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;原始图&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;构造子图&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;邻居聚合（Neighbor Aggregation）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;聚合函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;mean pooling 无区别对待邻居结点&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;degree normalization 通过图结构赋值结点的权重&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;attentive pooling 利用注意力机制来区分邻居的重要性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Central node augmentation 考虑结点之间的关联性，并利用中心结点来过滤邻居的消息&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;信息更新（Information Update）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;mean-pooling&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sum-pooling&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;concatenation with transformation&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最终结点表示（Final Node Representation）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;用最后一层作为表示&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用 weighted-pooling 或 concatenation operation 集成所有层的表示&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;序列推荐&#34;&gt;序列推荐
&lt;/h2&gt;&lt;h3 id=&#34;总体框架&#34;&gt;总体框架
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;就是在序列推荐模型前，用GCN提取用户行为中的特征&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;把gnn应用在序列推荐上的三个问题&#34;&gt;把GNN应用在序列推荐上的三个问题
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;图的构造&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;怎么把序列数据转换成有序图&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;顺序行为的构造策略
由于在很多情况下用户行为序列较短，直接在连读单击的两个项目之间添加节点的办法包含的信息太少。最近的研究提出了几种丰富原有序列图结构的策略，可分为两大主流。
一种主流方法是利用额外的序列（比如整个数据集中的序列）来丰富项目之间的转换。另一种是调整当前序列的图结构&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;信息传播&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;怎么设计高效的传播机制&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GGNN框架被广泛采用来在有向图上传播信息。具体来说，它采用均值池分别聚合前一项和下一项的信息;组合两个聚合表示;并利用GRU组件整合邻居和中心节点的信息。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;序列偏好&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;怎么捕获用户的时间相关偏好&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;考虑到序列中的项目具有不同的优先级，因此采用注意机制进行集成。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;总结-1&#34;&gt;总结
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;图的构造&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SR-GNN链接两个相邻的点击物品&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MG-GNN提取三个后续项，并在它们之间添加边，这样可以同等对待最后三个项&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;序列建模依赖于构造的图&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;迄今为止，这里没有证据显示哪种策略更好，另外，现有的作品忽略了连续项目之间的时间间隔，这可能会进一步提高性能&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;信息传播&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用 mean-pooling 去一视同仁的聚合&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用注意力机制去区分邻居的影响&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用GRU&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;序列偏好&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;GNN组件的输出是结点表示形式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一个结点序列的表示需要被整合成顺序表示&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MA-GNN使用 mean-pooling 去聚合&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用注意力机制&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SR-GNN&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GC-SAN&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A-PGNN&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FGNN 使用GRU和ATT&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增强物品之间的顺序关系&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;社交化推荐系统&#34;&gt;社交化推荐系统
&lt;/h2&gt;&lt;h3 id=&#34;两个问题&#34;&gt;两个问题
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;朋友的影响是否相同？如果不同，应该怎么区分&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;怎么从社会影响角度和交互行为整合用户表示&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;社交网络增强&#34;&gt;社交网络增强
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;两个策略&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;将社交网络作为图数据&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从图结构角度考虑社交信息和用户-物品交互&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DGRec&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;将社交网络作为图数据&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每个用户动态兴趣从它们最近的session行为中使用LSTM抽取&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在社交网络中用户的表征是动态的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;考虑到社交影响可能会随着上下文有所不同，DGRec使用GAT去区分朋友的影响&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;消融研究表明，与有社会网络的一般推荐和无侧信息模型的顺序推荐相比，DGRec具有显著的性能&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;结果表明了在顺序推荐中考虑动态社会影响的合理性。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;代表性方法-1&#34;&gt;代表性方法
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;DiffNet&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/PeiJieSun/diffnet&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/PeiJieSun/diffnet&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用 graphSage 模拟社会扩散过程对用户的影响&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用 mean-pooling去聚合用户的表示&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对历史物品使用mean-pooling得到物品空间中用户的偏好&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在扩散完毕后，使用得到的用户表示来代替原始的用户 embedding&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Note that taking the average representation of interacted item embeddings as the user preference in item space is equivalent to aggregate one-hop neighbors for the user vector&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;没看明白&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;与TrustSVD相比，DiffNet通过利用GNN机制捕获了更深层次的社会扩散过程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;特点与不足之处：假定邻居的影响力相同&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GraphRec&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;考虑社交关系图和用户物品二部图这两张图，各自应用注意力机制&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;用att来学习用户和物品的embedding&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用att来区分邻居的影响&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;邻居对用户的影响取决于他们潜在向量之间的相似性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用户表示由物品空间表示和社交空间表示组合而成&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注意力机制由于区分了邻居的影响和物品的重要性得到了性能提升&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;社会影响可能并没有被充分利用，因为GraphRec只使用了一层GAT来模拟社会图中的社会影响&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DANSER&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;以往工作假定社会影响是静态的，本文用GAN去学习动态的影响&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;具体做法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用GAN去学习双重社会影响&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;其中一个由特定的注意权重建模&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;另一个由动态的上下文感知注意权重建模&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;捕捉静态&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;传播固有的用户偏好向量&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;捕捉动态&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;传播上下文感知的用户向量&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;依赖于目标目标物品&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 max-pooling 计算&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;贡献&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;整合了静态和动态的用户偏好&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DiffNet、GraphRec、DANSER的小结&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;上面的方法要么使用社会图建模，要么学习社会空间和物品空间中的用户向量然后再整合&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;都没有充分利用节点在不同层次的嵌入&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DiffNet++&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;首先在二部图和社交网络中用GAT聚合邻居结点的信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注意力机制被用来融合邻居的两个状态&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用户节点的表示被附加的融合向量更新&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对于物品结点，使用GAT传播交互用户的信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用不同隐藏层去表示全体结点&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;总结&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;影响力建模&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用注意力机制来捕捉不同朋友的影响力&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;考虑到朋友的影响力可能会因为物品而边花&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DANSER对特定的物品考虑啊动态的用户表示&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;偏好整合&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;基于知识图谱推荐系统&#34;&gt;基于知识图谱推荐系统
&lt;/h2&gt;&lt;h3 id=&#34;引入知识图谱的三个好处&#34;&gt;引入知识图谱的三个好处
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;KG具有丰富的语义，能够探索物品间潜在的联系&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;提高推荐的多样性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;引入可解释性&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;基于kg的rs的三个挑战&#34;&gt;基于KG的RS的三个挑战
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;图的简化&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;KG具有非常复杂的结构，如何简化图达到更好的传播效果&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;多关系传播&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;KG的结点具有非常多的连接，如何传播信息&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用户整合&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;怎么融合KG和用户特征&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;代表方法&#34;&gt;代表方法
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;KGCN&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 user-specific relation-aware graph neural network 去聚合邻居实体信息&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;KGNN-LS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;KGAT&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IntentGC&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AKGE&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;总结-2&#34;&gt;总结
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;图构建&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可感知聚合&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;其他工作&#34;&gt;其他工作
&lt;/h2&gt;&lt;h3 id=&#34;兴趣点推荐&#34;&gt;兴趣点推荐
&lt;/h3&gt;&lt;h3 id=&#34;群推荐&#34;&gt;群推荐
&lt;/h3&gt;&lt;h3 id=&#34;捆绑推荐&#34;&gt;捆绑推荐
&lt;/h3&gt;&lt;h3 id=&#34;点击预测&#34;&gt;点击预测
&lt;/h3&gt;&lt;h3 id=&#34;多媒体推荐&#34;&gt;多媒体推荐
&lt;/h3&gt;&lt;h2 id=&#34;数据集评估指标和应用&#34;&gt;数据集、评估指标和应用
&lt;/h2&gt;&lt;h3 id=&#34;数据集&#34;&gt;数据集
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://grouplens.org/datasets/movielens/.&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MovieLens&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://jmcauley.ucsd.edu/data/amazon/links.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Amazon&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.yelp.com/dataset&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Yelp&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://snap.stanford.edu/data/loc-gowalla.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Gowalla&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Yoochoose&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://cikm2016.cs.iupui.edu/cikm-cup&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Diginetica&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.kaggle.com/retailrocket/ecommerce-dataset&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;RetailRocket&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;评估指标&#34;&gt;评估指标
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;HR&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Precision，recall&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;NDCG&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MAP&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AUC&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;未来的研究方向&#34;&gt;未来的研究方向
&lt;/h2&gt;&lt;h3 id=&#34;多样化和不确定性的表示&#34;&gt;多样化和不确定性的表示
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;单重向量很难捕捉用户兴趣中的特征，已有一些研究用多个向量来表示用户。或者是用密度表示用户，比如用高斯嵌入捕获用户的不确定偏好。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;推荐系统中gnn的拓展性&#34;&gt;推荐系统中GNN的拓展性
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;直接使用 GNN，在工业界的大规模数据上效率很低。一种思路是使用采样策略降低图的大小，另一种思路是设计可扩展的高效的 GNN&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;推荐系统中的动态图&#34;&gt;推荐系统中的动态图
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;实际场景中 users、items 以及他们之间的关系都是动态变化的，为了能做到 up-to-date recommendation，模型需要能够迭代更新。但是目前很少研究关注动态图。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;推荐系统中的gnn的感受野&#34;&gt;推荐系统中的GNN的感受野
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;对于推荐中的图数据，节点的度呈现长尾分布;即，活跃用户与项目的交互较多，而冷用户与项目的交互较少，与热门项目和冷项目的交互相似.因此，在所有节点上应用相同的传播步骤可能是次优的&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;自监督学习&#34;&gt;自监督学习
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;自监督学习（SSL）是一种提高数据利用率的新兴范式，它可以帮助缓解稀疏性问题&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;基于gnn推荐系统的鲁棒性&#34;&gt;基于GNN推荐系统的鲁棒性
&lt;/h3&gt;&lt;h3 id=&#34;隐私保护&#34;&gt;隐私保护
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;使用联邦学习来训练推荐系统，而无需将用户数据上传到中央服务器。然而，本地用户数据仅包含一阶用户-项目交互，这使得在没有隐私链接的情况下很难捕获高阶连接。另一种方法是在推荐系统的过程中采用差分隐私来保证用户隐私，但通常会降低性能&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;基于gnn推荐系统的公平性&#34;&gt;基于GNN推荐系统的公平性
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;对于不同人口统计群体的用户的推荐性能应该接近，并且每个项目应该具有相等的总体曝光概率&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;可解释性&#34;&gt;可解释性
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;这些方法可以分为两类：实例级方法通过识别预测的重要输入特征来提供特定于示例的解释;模型级方法提供高级解释和对深度图模型如何工作的一般理解。也有一些关于基于GNN的建议的可解释性的尝试。它们大多利用知识图中的语义信息进行事后解释。到目前为止，可解释的基于GNN的推荐系统还没有得到充分的探索，&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Graph Transformer for Recommendation</title>
        <link>http://localhost:1313/p/graph-transformer-for-recommendation/</link>
        <pubDate>Thu, 27 Feb 2025 00:48:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/graph-transformer-for-recommendation/</guid>
        <description>&lt;p&gt;论文：https://arxiv.org/abs/2306.02330&lt;/p&gt;
&lt;p&gt;代码：https://github.com/HKUDS/GFormer&lt;/p&gt;
&lt;p&gt;SIGIR2023&lt;/p&gt;
&lt;h2 id=&#34;研究动机&#34;&gt;研究动机
&lt;/h2&gt;&lt;p&gt;什么样的监督信号才应该被保留和增强以最大化模型的效果？以及，基于人工设计的增强方案往往难以适应各个场景的推荐任务，有没有一种方案能够自适应的根据下游任务来提取最合适的自监督信号以适应性增强模型的表达能力呢？&lt;/p&gt;
&lt;p&gt;为了解决上述问题，我们提出了Graph Transformer for Recommendation (GFormer) 模型，能够自适应的根据不同的场景信息以提取出最重要的监督信号来进行协同过滤信号的增强。具体来说，我们受到Rationale-aware方法和Transformer的启发，通过RA子图发掘方法和self-attention的结合来捕获最重要的RA子图结构，并据此进行下游任务自适应监督信号的效果增强&lt;/p&gt;
&lt;h2 id=&#34;模型介绍&#34;&gt;模型介绍
&lt;/h2&gt;&lt;p&gt;本文所介绍的GFormer模型，其主要模块包含全局拓扑信息注入层、协同信号RA发掘层以及自监督信号增强模块。GFormer模型的框架图如下所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/image-20240816162022803.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240816162022803&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;21-全局拓扑信息注入层&#34;&gt;2.1 全局拓扑信息注入层
&lt;/h3&gt;&lt;p&gt;全局关系信息与GNN的结合的在很多场景下都能发挥不错的效果，受到位置感知GNN方法的启发，我们通过注入高阶信息的依赖来提升模型协同信号的发掘能力。
&lt;img src=&#34;http://localhost:1313/img/image-20240816162204377.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;具体来说，我们首先选出一部分锚点，然后为了捕获全局拓扑信息，我们分别计算图节点相对于&lt;strong&gt;锚集的相对位置信息，&lt;strong&gt;结合节点和锚点的表征信息来生成全局上下文信息。如此，我们的RA子图发掘模块就可以&lt;/strong&gt;捕获全局关系并识别出重要的用户商品交互信息&lt;/strong&gt;以进行SSL数据增强。&lt;/p&gt;
&lt;h3 id=&#34;22-适应性ra子图发掘模块&#34;&gt;2.2 适应性RA子图发掘模块
&lt;/h3&gt;&lt;p&gt;为了筛选出具有场景适应性的重要交互信息，我们提出了一种自适应的RA子图发掘方法，并以此为基础进行后续选择性的SSL的监督信号增强。
&lt;img src=&#34;http://localhost:1313/img/640.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;具体来说，将包含了全局上下文和局部拓扑信息的用户商品表征信息注入到GT模块并通过自适应任务模块的引导来产生场景适应性的用户商品交互评分，并以此来筛选出包含重要交互信息特征的RA拓扑结构子图。同时，为了减少噪声带来的负面影响，我们增加了&lt;strong&gt;补图独立性模块&lt;/strong&gt;的设计，以更好的增加模型的鲁棒性。&lt;/p&gt;
&lt;h3 id=&#34;23-自监督信号增强模块&#34;&gt;2.3 自监督信号增强模块
&lt;/h3&gt;&lt;p&gt;传统的SSL范式的自监督模型监督信号的增强方案是通过人工设计对比视图，并通过互信息最大化的方法来引入额外的自监督信号，辅助主推荐任务的学习。然而，人工设计的视图缺乏场景适应性，且会引入多余的人工噪声。为了解决这个问题，我们设计了基于MAE框架的监督信号增强方法，跳出了传统SSL增强范式的桎梏。通过适应性重构重要交互信息的方式，较少了无关噪声影响的同时，取得了更好的模型效果。
&lt;img src=&#34;http://localhost:1313/img/img/640-1723797187561-4.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Modeling User Fatigue for Sequential Recommendation</title>
        <link>http://localhost:1313/p/modeling-user-fatigue-for-sequential-recommendation/</link>
        <pubDate>Thu, 27 Feb 2025 00:48:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/modeling-user-fatigue-for-sequential-recommendation/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;SIGIR2024&lt;/p&gt;
&lt;p&gt;之前有过一些讨论用户行为周期性的文章，目的是给用户重复推荐。这篇文章从相反的角度出发，提出了一个序列推荐模型 &lt;strong&gt;FRec&lt;/strong&gt; 用于用户疲劳建模，思考如何不给用户重复推荐。&lt;/p&gt;
&lt;p&gt;代码链接：https://github.com/tsinghua-fib-lab/SIGIR24-FRec&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;用户疲劳的定义：用户可能会对与自己在短时间内接触过的内容过于相似的推荐感到厌倦。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下图展示了同类视频与非同类视频的有效观看率（EVTR，effective view-through  rate，应该就是观看超过多少秒视为有效观看）的变化曲线。与其他类别的视频相比，当用户对同一类别的有效观看次数过多时，目标类别视频的 EVTR  显著下降，并且持续较低。这是用户对重复观看类似视频感到疲劳的明显证据。&lt;/p&gt;
&lt;p&gt;现有的推荐系统很少探讨用户疲劳问题，它有三个主要挑战：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;哪些特征支持它；&lt;/li&gt;
&lt;li&gt;它如何影响用户兴趣；&lt;/li&gt;
&lt;li&gt;它的显式信号如何获得。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;方法&#34;&gt;方法
&lt;/h2&gt;&lt;p&gt;因为是序列推荐，输入就是用户历史行为序列&lt;/p&gt;
&lt;p&gt;FRec的模型结构如下，主要包括三部分：兴趣感知相似度矩阵（ISM）、疲劳增强多兴趣融合（利用DCN增强表示）、疲劳门控循环单元（CNN+GRU）。
&lt;img src=&#34;http://localhost:1313/img/image-20240705184137382.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;细粒度的兴趣感知相似度矩阵&#34;&gt;细粒度的兴趣感知相似度矩阵
&lt;/h3&gt;&lt;p&gt;两个item之间的相似性可以源于多个方面并且对应于用户的多个子兴趣。例如，视频的相似度可以通过拍摄风格、视频基调、主题等方面来表征，这些都可以用来模拟用户观看时的疲劳程度。&lt;/p&gt;
&lt;p&gt;这一节的目的就是提取K个target和历史行为的相似度。首先用self-attention从历史行为中提取K个兴趣：
&lt;img src=&#34;http://localhost:1313/img/image-20240705184152336.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
&lt;img src=&#34;http://localhost:1313/img/image-20240705184224352.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;疲劳增强多兴趣融合&#34;&gt;疲劳增强多兴趣融合
&lt;/h3&gt;&lt;p&gt;用户疲劳对兴趣的影响是复杂的，因此作者用DCN的方法处理相似度矩阵F的T维度：
&lt;img src=&#34;http://localhost:1313/img/image-20240705195057128.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
再用相同的方式得到进行了疲劳增强融合的用户长期兴趣嵌入
&lt;img src=&#34;http://localhost:1313/img/image-20240705195117098.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
这个 h 会作为后续gru的初始状态：
&lt;img src=&#34;http://localhost:1313/img/image-20240705195125029.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;疲劳门控循环单元&#34;&gt;疲劳门控循环单元
&lt;/h3&gt;&lt;p&gt;历史序列中最近消耗的项目对于导致用户疲劳很重要。同样还是用DCN的方法处理相似度矩阵F的K维度：
&lt;img src=&#34;http://localhost:1313/img/image-20240705195354194.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;此外，最近项目序列中包含的时间模式对于疲劳建模也是必要的。例如，连续消耗五个与目标项目相似的项目会比无序地消耗更强烈的疲劳感。因此用CNN建模：
&lt;img src=&#34;http://localhost:1313/img/image-20240705195416215.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;最后再GRU
&lt;img src=&#34;http://localhost:1313/img/image-20240705195531065.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;疲劳监督对比学习&#34;&gt;疲劳监督对比学习
&lt;/h3&gt;&lt;p&gt;对比思想：用户重复消费次数越多，他们会感到更加疲劳。&lt;/p&gt;
&lt;p&gt;按下图构建增强数据：
&lt;img src=&#34;http://localhost:1313/img/image-20240705195553743.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;然后重新得到gru中的Q，并计算对比损失：&lt;/p&gt;
&lt;h2 id=&#34;预估&#34;&gt;预估
&lt;/h2&gt;&lt;p&gt;在交互预测中既考虑了用户的长期和短期兴趣，也要减去用户在对目标项目做出决策时的疲劳程度。用户和目标项目的预测分数计算如下
&lt;img src=&#34;http://localhost:1313/img/image-20240705195635434.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Repetition and Exploration in Sequential Recommendation</title>
        <link>http://localhost:1313/p/repetition-and-exploration-in-sequential-recommendation/</link>
        <pubDate>Thu, 27 Feb 2025 00:48:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/repetition-and-exploration-in-sequential-recommendation/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;SIGIR 2023&lt;/p&gt;
&lt;p&gt;代码链接：https://github.com/liming-7/Repetition-exploration-SR&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;动机&#34;&gt;动机
&lt;/h2&gt;&lt;p&gt;目前的序列推荐文章没有从重复和探索的角度进行分析。在这篇文章中，从以用户为中心和以项目为中心的角度来考虑这问题。定义了项目重复暴露和项目探索暴露，并从重复和探索两个角度考察了序贯推荐模型的推荐性能。发现：(I)在准确性和难度方面存在不平衡。在SR场景中的重复和探索，(Ii)使用传统的平均总体准确率和显著性检验不能完全代表模型的推荐精度，以及(Iii)面向准确度的顺序推荐模型可能遭受较少/零项目探索暴露问题，其中项目大部分(甚至只)被推荐给他们的重复用户，而不能到达潜在的新用户&lt;/p&gt;
&lt;p&gt;重复：下一项推荐什么时候出现在用户的历史交互序列中。&lt;/p&gt;
&lt;p&gt;探索：什么时候首次出现与历史交互序列不同的项目。&lt;/p&gt;
&lt;h2 id=&#34;定义&#34;&gt;定义
&lt;/h2&gt;&lt;p&gt;物品曝光分为两个部分：来自从重复用户和来自探索用户的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/image-20240706133644744.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240705201724523&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/image-20240706133654731.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240705201724523&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;rq&#34;&gt;RQ
&lt;/h2&gt;&lt;p&gt;RQ1SR模型如何执行重复和探索？在NBR之前的工作中报告的重复和探索之间的不平衡是否也存在于SR场景中？&lt;/p&gt;
&lt;p&gt;RQ2我们是否应该考虑SR中的项目探索暴露？序贯推荐模型是如何执行物品探索性曝光和物品重复曝光？&lt;/p&gt;
&lt;p&gt;RQ3重复的“快捷方式”是否强加了SR模型来为EXPLE-NEXT用户推荐重复的项目？&lt;/p&gt;
&lt;p&gt;RQ4在纯探索性场景中，序列推荐模型的重复偏向是否仍然存在？&lt;/p&gt;
&lt;p&gt;RQ5我们如何避免这种重复偏见的潜在影响&lt;/p&gt;
&lt;h2 id=&#34;数据集&#34;&gt;数据集
&lt;/h2&gt;&lt;p&gt;Diginetica and Yoochoose&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/image-20240706134226532.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240705201724523&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;方法&#34;&gt;方法
&lt;/h2&gt;&lt;p&gt;本文的目的是为了从一个新的角度进行性能评估和模型设计，而不是设计一个最佳模型，因此根据影响力、代表性，一致性选择现有模型进行分析。&lt;/p&gt;
&lt;p&gt;分为重复用户（在下一步中购买重复物品的用户）和探索用户（在下一步中购物新物品）&lt;/p&gt;
&lt;p&gt;文中使用了一个简单的办法们就是删除推荐结果中的重复项目。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>SelfGNN: Self-Supervised Graph Neural Networks for Sequential Recommendation</title>
        <link>http://localhost:1313/p/selfgnn-self-supervised-graph-neural-networks-for-sequential-recommendation/</link>
        <pubDate>Thu, 27 Feb 2025 00:48:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/selfgnn-self-supervised-graph-neural-networks-for-sequential-recommendation/</guid>
        <description>&lt;h2 id=&#34;selfgnn-self-supervised-graph-neural-networks-for-sequential-recommendation&#34;&gt;SelfGNN: Self-Supervised Graph Neural Networks for Sequential Recommendation
&lt;/h2&gt;&lt;h4 id=&#34;动机&#34;&gt;动机
&lt;/h4&gt;&lt;p&gt;（1）现有的序列推荐模型主要集中于长期建模个别交互序列，忽视了不同用户行为之间宝贵的短期合作关系。&lt;/p&gt;
&lt;p&gt;（2）现实世界的数据通常包含噪声，特别是在用户的短期行为中，这可能源于临时意图或误点击，这种噪声对图模型和序列模型的准确性产生负面影响，进一步复杂化了建模过程&lt;/p&gt;
&lt;p&gt;SelfGNN能够捕捉多粒度的用户行为模式：基于图神经网络（GNN）对&lt;strong&gt;时间片段&lt;/strong&gt;内的交互行为建模，考虑了短期的高阶协同关系；基于序列模型对用户跨时间片段的行为进行关联学习，捕捉长期的时序变化模式。此外，研究人员提出了一种个性化自增强学习方法，通过对比长短期用户行为模式来降低数据噪音的影响，从而增强模型的稳健性。&lt;/p&gt;
&lt;p&gt;阶段性的协同关系
&lt;img src=&#34;http://localhost:1313/img/image-20240816171247169.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;引入了一种创新的自监督图推荐框架，通过集成基于&lt;strong&gt;区间级别的周期性协作关系学习&lt;/strong&gt;和&lt;strong&gt;关注实例级别&lt;/strong&gt;的顺序建模，有效地捕捉动态用户兴趣。&lt;/p&gt;
&lt;p&gt;结合了个性化的自我增强学习组件，能够有效去噪稀疏短期图中的嘈杂交互。它还生成个性化权重以适应不同用户，增强模型适应个人偏好和稳定性的能力。&lt;/p&gt;
&lt;h3 id=&#34;模型&#34;&gt;模型
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/image-20240816171843415.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240816171843415&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;短期交互模型编码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如图1所示，u1和u2在第一个周期具有明显的协同信号，而在第二个周期具有u3与u2相似的行为。&lt;/p&gt;
&lt;p&gt;因此，SelfGNN根据时间间隔T（可调节的超参数）将全局数据划分为多个短期图At，i，j（表示在第t个时间段里用户i和物品j的隐式交互关系），然后利用l层图卷积神经网络（GCN）协同传播高阶信息。&lt;/p&gt;
&lt;p&gt;将每个用户和每个项目在每个时间t下投影得到嵌入向量Et（u）和Et（v）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/image-20240816172908773.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240816172908773.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;双粒度长期行为建模&#34;&gt;双粒度长期行为建模
&lt;/h4&gt;&lt;p&gt;SelfGNN通过间隔级别（interval-level）融合和实例级别（instance-level）行为建模在双粒度级别捕获长期用户和项商品表示。从两个不同的层次进行长期特征学习，能够使得两个层次互相补偿，增加可学习的信息。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;区间级序列模式建模&lt;/strong&gt;，它将短期特征整合到基于时间注意力的长期嵌入中，捕捉不同时期之间的动态变化；&lt;/p&gt;
&lt;p&gt;先用GRU构建每个阶段的表示，然后把每个阶段的表示构成序列。再用多头自注意力得到长期嵌入。
&lt;img src=&#34;http://localhost:1313/img/image-20240816182049739.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240816182049739.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;**实例级序列模式建模，**它直接学习特定项实例之间的成对关系。
&lt;img src=&#34;http://localhost:1313/img/image-20240816190302520.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240816190302520.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;多视角融合和预测&#34;&gt;&lt;strong&gt;多视角融合和预测&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;在进行预测之前，我们聚合来自实例级和间隔级方法得出的多视图用户特征，并按如下方式进行最终预测
&lt;img src=&#34;http://localhost:1313/img/image-20240816190622590.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240816190622590.pn&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;在ˆA_T+1,i,j ∈ R中，表示通过计算用户和物品之间的相似度，预测未来（T + 1）时间段中用户ui与物品vj的交互。接下来，正样本包括用户已有交互的物品，而负样本包括用户未曾交互的物品。为了避免预测值过大，我们采用限制条件来优化以下损失函数：
&lt;img src=&#34;http://localhost:1313/img/image-20240816190631985.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240816190631985.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;个性化自监督去噪&#34;&gt;&lt;strong&gt;个性化自监督去噪&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;为了缓解用户序列行为数据中普遍存在的数据稀疏性和数据噪声问题，SelfGNN通过一个个性化去噪自监督学习任务进行了进一步增强。&lt;/p&gt;
&lt;p&gt;这里的“噪声”指的是暂时性的意图或误点击。他们不能被视为长期用户兴趣或新近兴趣点的预测。&lt;/p&gt;
&lt;p&gt;具体而言，&lt;strong&gt;SelfGNN的自监督任务专注于使用长期行为模式过滤短期非固有用户偏好。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这个设计基于以下观察：用户的行为可能受到短期随机兴趣的驱动，例如，一个不喜欢徒步旅行的用户也可能因为一次性活动购买徒步鞋和能量饮料。这种噪声行为数据可能会干扰用户长期真实兴趣的建模。&lt;/p&gt;
&lt;p&gt;此外，为了准确识别这些噪声的短期行为，根据不同用户的兴趣多样性对去噪SSL任务进行了个性化，如图3所示。
&lt;img src=&#34;http://localhost:1313/img/image-20240816194801165.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240816194801165.png&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Sequential Recommender Systems: Challenges, Progress and Prospects</title>
        <link>http://localhost:1313/p/sequential-recommender-systems-challenges-progress-and-prospects/</link>
        <pubDate>Thu, 27 Feb 2025 00:48:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/sequential-recommender-systems-challenges-progress-and-prospects/</guid>
        <description>&lt;h3 id=&#34;一简介&#34;&gt;一、简介
&lt;/h3&gt;&lt;p&gt;首先分析了顺序推荐系统（SRS）兴起的motivation。概括为三点。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;用户跟物品之间的互动是序列依赖的&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用户的兴趣与物品的流行程度都是动态变化的&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用户-物品的互动通常在特定的序列上下文环境中产生&lt;/strong&gt;
不同的上下文会催生出不同的用户行为。SRS在丰富推荐结果、避免同质化的任务上比传统推荐系统更容易做到&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;二数据特征和挑战&#34;&gt;二、数据特征和挑战
&lt;/h4&gt;&lt;h4 id=&#34;1-长的用户-物品交互序列&#34;&gt;1. 长的用户-物品交互序列
&lt;/h4&gt;&lt;p&gt;长的用户-物品交互序列会包含大量的用户-物品交互，更能产生复杂全面的依赖关系。存在以下两个问题：&lt;/p&gt;
&lt;p&gt;①&lt;strong&gt;要学习更高阶序列依赖&lt;/strong&gt;：&lt;em&gt;存在复杂的多级别的级联依赖关系&lt;/em&gt;。目前主要有高阶马尔可夫链模型和RNN两种基本方法。但马尔科夫链模型参数会呈指数增长，能涉及的历史状态有限；RNN中预设过强的顺序会限制RNN在灵活顺序中的表现。&lt;/p&gt;
&lt;p&gt;②&lt;strong&gt;要学习长期的序列依赖&lt;/strong&gt;：两个交互在序列中离得远，但也有依赖关系。eg：珍妮的购物顺序{玫瑰花、鸡蛋、面包、牛奶、花瓶}，玫瑰和花瓶距离远，却有强依赖关系。现实世界中用户的行为是高度不确定的，他们会以各种顺序将物品放入购物车中。&lt;em&gt;如果使用LSTM或GRU来捕捉长期关系，很容易生成一种错误的依赖关系，比如认为牛奶和花瓶之间存在依赖关系，因为模型可能错误地假设一个序列中相邻的项是高度依赖的&lt;/em&gt;。目前解决这一问题的工作主要是组合了多个子模型来利用混合模型的优势，但从整体上来看还是受限的。&lt;/p&gt;
&lt;h4 id=&#34;2使用灵活顺序处理用户-物品交互&#34;&gt;2.使用灵活顺序处理用户-物品交互
&lt;/h4&gt;&lt;p&gt;现实世界中，不是所有邻近的交互都有序列依赖关系。eg：购物顺序{牛奶、黄油、面粉}，牛奶和黄油是邻近的，但先买牛奶还是先买黄油的顺序是无所谓的，而牛奶和黄油二者的购买结果会使得下一个购买物品是面粉的可能性提高，即面粉在序列上依赖于牛奶和黄油二者的结合。&lt;em&gt;因此，如何在灵活顺序的假设下捕获集合序列相关性成为SRSs中处理灵活顺序序列的关键问题。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;目前国内外对这一问题的研究还不多见。现有的基于Markov链、因子分解机或RNN的SRS只能处理点依赖关系，而不擅长对集合依赖进行建模和捕捉。&lt;strong&gt;目前有些工作试图通过利用CNN的优势来捕捉局部和全局依赖性，即一系列交互作用的嵌入矩阵。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;3处理带噪声的用户-物品交互序列&#34;&gt;3.处理带噪声的用户-物品交互序列
&lt;/h4&gt;&lt;p&gt;​          在一个用户-商品交互序列中，一些历史交互与下一个交互具有强相关性，而另一些则可能弱相关甚至不相关。eg：购物顺序{培根、玫瑰、鸡蛋、面包}，玫瑰可能是个噪声，因为它与剩余其它物品无关。接下来的物品很可能会是一瓶牛奶，而这仅与培根、鸡蛋、面包有关而与玫瑰无关。因此对SRSs的又一挑战是对交互序列的噪声有识别能力。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意力模型和记忆网络被用于解决这个问题，选择性保留利用序列中真正与预期相关的信息&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&#34;4处理具有异构关系的用户商品交互序列&#34;&gt;4.处理具有异构关系的用户商品交互序列
&lt;/h4&gt;&lt;p&gt;对于不同类型的关系需要不同的建模方式。例如：1、交互序列中除了存在普遍的&lt;strong&gt;基于发生&lt;/strong&gt;的序列依赖，还交互项目之间在特征上也存在&lt;strong&gt;基于相似&lt;/strong&gt;的关系。2、长期序列依赖不同于短期，不能用相同的方式建模。所以SRSs又一挑战是高效捕捉嵌在序列中的各种关系，使它们合作产生推荐结果。&lt;/p&gt;
&lt;p&gt;​         &lt;strong&gt;目前处理该关系主要还是基于混合模型进行处理。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;5处理带层次结构的用户-物品交互序列&#34;&gt;5.处理带层次结构的用户-物品交互序列
&lt;/h4&gt;&lt;p&gt;交互序列中存在两种层级结构。一是元数据（meta  data）与互动之间的层级结构，即用户的人口统计学属性、物品的特征对用户行为、偏好的影响；二是子序列与互动之间的层级关系，很多时候一个长序列中会包含许多子序列。对应的挑战是如何处理这两种层级结构上的依赖关系以生成更精准的推荐。&lt;/p&gt;
&lt;p&gt;一方面，将用户特征的影响考虑在，但现存的SRSs中极少考虑到用户的人口特征，这需要投入更多研究。另一方面，还有引入层级RNN,层级注意力等结构建模历史子序列。&lt;/p&gt;
&lt;h3 id=&#34;三研究现状&#34;&gt;三、研究现状
&lt;/h3&gt;&lt;p&gt;从技术的角度来看，将目前SRS的各种方法划分了三大类&lt;/p&gt;
&lt;h3 id=&#34;31-传统序列模型&#34;&gt;3.1 传统序列模型
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;序列模式挖掘
基于序列模式的推荐先挖掘序列数据的常用模式，然后利用挖掘到的模式来指导后续的推荐。虽然简单，但是却经常会产生大量的冗余的模式， 这往往会增加非常多不必要时间和空间等代价。&lt;strong&gt;同时此类方法经常会丢失不频繁的模式以及商品，所以对于不是非常流行的商品的推荐会受限。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;马尔可夫链模型
基于马尔可夫链的推荐系统会采用Markov链模型对用户-商品的交互转换进行建模，以预测下一次交互。根据使用的技术，基于马尔可夫链的推荐系统又可以分为基于基本Markov链的推荐系统和基于潜在Markov embedding的推荐系统方法。前者直接根据显式观测的值计算转移概率，而后者首先将马尔可夫链嵌入欧几里德空间，然后根据其欧几里德距离计算相互作用之间的转移概率。基于Markov链的推荐系统的缺点主要有两块。一方面，由于Markov特性假设当前交互只依赖于一个或几个最近的交互，因此&lt;strong&gt;只能捕获短期依赖关系而忽略长期依赖关系&lt;/strong&gt;；另一方面，它们&lt;strong&gt;只能捕获点式依赖，而忽略了用户商品交互的集体依赖&lt;/strong&gt;。（近几年在SRSs中越来越少见了。）&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;32-序列推荐的隐式表示&#34;&gt;3.2 序列推荐的隐式表示
&lt;/h3&gt;&lt;p&gt;隐式的表示模型先学习每个用户和商品的潜在表示，然后使用学习得到的表示预测接下来的用户商品交互。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;分解机(Factorization Machines)
基于因子分解机的序列推荐通常利用矩阵分解或张量分解将观察到的用户-商品交互作用分解为用户和商品的潜在因子。和协同过滤不一样的地方在于，要分解的矩阵或张量是由交互作用组成的,而不是CF中的评分,这样的模型很容易受到观测数据稀疏性的影响，因而不能达到理想的推荐效果。&lt;/li&gt;
&lt;li&gt;嵌入式(Embedding)
基于Embedding的序列化推荐通过将用户-商品交互序列编码到一个潜在空间，学习每个用户和商品的潜在表示，以供后续推荐。具体而言，一些工作将学习到的潜在表征作为网络的输入，进一步计算用户和商品之间的交互得分。&lt;strong&gt;该模型具有简单、高效、高效的特点，近年来已显示出巨大的潜力。&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;33-神经网络模型&#34;&gt;3.3 神经网络模型
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;基本的神经网络模型&lt;/p&gt;
&lt;p&gt;a. &lt;strong&gt;RNN-based SRSs&lt;/strong&gt; 循环神经网络
包括基础RNN模型以及LSTM、GRU等模型，还有层级RNN（针对单层RNN不能捕获长期偏好的问题）等。这一类模型几乎主导了SRS领域的研究，但是仍然存在缺点：&lt;strong&gt;一是容易生成假依赖关系，假设过强（认为序列中每个相邻的项之间都有依赖关系）；二是捕捉点对点的依赖关系，忽略集合依赖。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;b.&lt;strong&gt;CNN-based SRSs&lt;/strong&gt; 卷积神经网路
CNN就是将序列的embedding矩阵看作一个图片（跟NLP差不多）。CNN的优点是序列关系的假设不强，而且学习的是不同区域之间的模式，能够避免RNN假设过强的问题，&lt;strong&gt;缺点是不好捕捉长期依赖关系，因为卷积滤波器尺寸限制。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;c.&lt;strong&gt;GNN-based SRSs&lt;/strong&gt; 图神经网络
在序列数据上建立有向图，将每个交互作为图中的一个节点，每个序列被映射为一条路径。从图中学习用户/物品的词嵌入，从而在整个图上嵌入更复杂的关系。GNN通过挖掘出被推荐物和相应的序列上下文之间的复杂关系来提供可解释的推荐。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;高级模型：常结合基本DNN解决特定问题。&lt;/p&gt;
&lt;p&gt;a. &lt;strong&gt;Attention models&lt;/strong&gt;注意力模型
注意力可以用来强调相关的、重要的互动，淡化与下一次互动不相关的，广泛地与RNN等模型结合用来处理带噪的互动序列。&lt;/p&gt;
&lt;p&gt;b.&lt;strong&gt;Memory networks&lt;/strong&gt;记忆网络
利用一个外部记忆矩阵，直接捕获任意历史中的用户-物品交互和下一次交互的依赖。这一矩阵能够更准确动态地存储和更新序列中的历史交互，增加模型可解释性，减少无关交互（噪声）的干扰。一些工作使用key-value memory  network来存储和更新序列中交互物品的知识库信息，学习属性级偏好以增强推荐效果。&lt;/p&gt;
&lt;p&gt;c.&lt;strong&gt;Mixture models&lt;/strong&gt;混合模型
指的是通过组合多种模型捕捉多种依赖关系的模型，典型的例子是组合多种编码器来分别捕捉长短期关系，进而学习精准的序列表示。比如说用卷积神经网络捕获短期偏好，循环神经网络捕获长期偏好。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;四未来工作&#34;&gt;四、未来工作
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;情景感知的序列化推荐系统&lt;/strong&gt;
用户或商品所在的当前环境会极大地影响用户对项目的选择，在进行推荐时应考虑到这一点。这在序列化推荐系统中更为必要，因为上下文可能会随着时间而变化。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;社会感知的序列化推荐系统&lt;/strong&gt;
用户生活在一个社会中，并与各种人在线和离线连接。其他人的行为或意见往往会对用户的选择产生很大的影响。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;交互式的序列化推荐系统&lt;/strong&gt;
现实世界中大部分的购物行为是连续的而非独立事件。现有SRSs常忽略用户和平台间的序列化交互，而仅为一个时间步长中的一个操作提供推荐。问题就是如何将用户-卖家交互考虑在内，生成多个时间步下的推荐。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;跨域的序列化推荐&lt;/strong&gt;
在现实世界中，用户在一定时间段内购买的商品通常来自多个域，而不是一个域。来自不同领域的项目之间存在一些顺序依赖关系，可以利用来自其他领域的信息和来自不同领域的更多不同的推荐来生成更准确的推荐。&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>Time Interval Aware Self-Attention for Sequential Recommendation</title>
        <link>http://localhost:1313/p/time-interval-aware-self-attention-for-sequential-recommendation/</link>
        <pubDate>Thu, 27 Feb 2025 00:48:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/time-interval-aware-self-attention-for-sequential-recommendation/</guid>
        <description>&lt;h3 id=&#34;摘要&#34;&gt;摘要
&lt;/h3&gt;&lt;p&gt;顺序推荐系统试图利用用户交互的顺序，以便基于用户最近所做的上下文来预测他们的下一个动作。传统上，马尔可夫链（MC），以及最近的递归神经网络（RNN）和自注意力（SA）由于其捕获序列模式动态的能力而激增。然而，大多数这些模型所做的简化假设是将交互历史视为有序序列，而不考虑每个交互之间的时间间隔（即，它们对时间顺序而不是实际的时间戳进行建模）。在本文中，我们寻求明确的时间戳的顺序建模框架内的相互作用，探讨不同的时间间隔对下一个项目的预测的影响。我们提出了TiSASRec（Time Interval aware Self-attention based sequential recommendation），它既可以模拟项目的绝对位置，也可以模拟它们之间的时间间隔。大量的实证研究显示了TiSASRec在不同设置下的特征，并比较了不同位置编码的自我注意表现。此外，实验结果表明，我们的方法优于各种国家的最先进的序列模型在稀疏和密集的数据集和不同的评价指标。&lt;/p&gt;
&lt;h3 id=&#34;引入&#34;&gt;引入
&lt;/h3&gt;&lt;p&gt;一般来说，以前的顺序排序器丢弃时间戳，只保留项目的顺序，也就是说，这些方法（隐含地）假设序列中所有相邻的项目具有相同的时间间隔。然而，直观地说，具有更近时间戳的项目将对下一个项目产生更大的影响。&lt;/p&gt;
&lt;p&gt;以前的工作忽略了这些间隔和它们对预测项的影响。为了解决上述局限性，受Self-Attention with Relative Position Representations [22]的启发，我们提出了一种时间感知的自我注意机制。该模型不仅考虑了SASRec [14]等项目的绝对位置，还考虑了任何两个项目之间的相对时间间隔。&lt;/p&gt;
&lt;h3 id=&#34;问题公式化&#34;&gt;问题公式化
&lt;/h3&gt;&lt;p&gt;让U和I分别表示用户和项目集合，对于每个用户有一个历史交互序列和对用的时间戳序列。&lt;/p&gt;
&lt;p&gt;在训练过程中，在时间步长t，模型根据先前的t个项目以及项目i和j之间的时间间隔ru ij来预测下一个项目。&lt;/p&gt;
&lt;p&gt;模型输入是用户交互序列和时间间隔序列Ru&lt;/p&gt;
&lt;p&gt;序列长度最大为n，如果超出则取最近的n个，如果少于n则填充。对于时间间隔取相对长度，即除以用户序列中最短的时间间隔。同时对于最大相对时间间隔进行约束，最大只能取k（假定超过某个阈值的精确时间是没有用的，同时也避免对稀疏关系进行编码）&lt;/p&gt;
&lt;p&gt;用FFN层把绝对位置，相对时间信息和自适应权重结合起来。同时也采用层归一化，残差连接和dropout正则化技术处理过拟合、不稳定训练过程。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>To Copy, or not to Copy; That is a Critical Issue of the Output Softmax Layer in Sequential Recommendation</title>
        <link>http://localhost:1313/p/to-copy-or-not-to-copy-that-is-a-critical-issue-of-the-output-softmax-layer-in-sequential-recommendation/</link>
        <pubDate>Thu, 27 Feb 2025 00:48:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/to-copy-or-not-to-copy-that-is-a-critical-issue-of-the-output-softmax-layer-in-sequential-recommendation/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;WSDM 2024&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/iesl/softmax_CPR_recommend&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/iesl/softmax_CPR_recommend&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;引言&#34;&gt;引言
&lt;/h3&gt;&lt;p&gt;现有方法并不能很好地决定是否复制或排除用户历史行为中出现过的商品。本文从这个动机出发，确定了这个问题的根源在softmax层，并在缓解 softmax 的问题后得到了显着的性能改进。&lt;/p&gt;
&lt;p&gt;在协同过滤中，softmax/矩阵分解层有几个优点：**它会鼓励相似的项目具有相似的emb，并且相似的输入序列会被编码为相似的用户emb。**比如可乐和雪碧在用户的历史行为中共现次数很多，神经网络会给共现次数多的商品有相近的emb映射。如下图所示，softmax函数会拉近分子，拉远分母。&lt;/p&gt;
&lt;p&gt;尽管softmax/矩阵分解层很有效，但其&lt;strong&gt;相似性结构是全局的&lt;/strong&gt;，有时会阻止神经推荐器输出所需的分布。如下图所示，如果一个用户重复购买了尿布产品和苹果汁产品，则下一个商品很可能是尿布产品或苹果汁产品。为了输出分布，神经推荐器需要输出介于尿布嵌入和苹果汁嵌入之间的用户嵌入，这可能会意外地接近苹果味婴儿食品的嵌入和/或苹果汁的嵌入孩子们。在这种情况下，softmax 层中的单个隐藏状态嵌入和静态项目嵌入导致难以正确复制历史项目序列中的项目。当嵌入空间非常拥挤时（例如，项目数量很大），这个问题会变得更加严重。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/assets/image-20240705201724523.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240705201724523&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;另一方面，相似性结构也可能迫使神经推荐器不正确地复制先前的项目。如下图所示，如果一个用户刚刚购买了《复仇者联盟》电影的 DVD，则该用户可能想观看其他漫威电影，例如《钢铁侠》或《美国队长》（即类似《复仇者联盟》的电影，但不是《复仇者联盟》本身）  。然而，接近所有其他漫威电影的用户嵌入将不可避免地接近复仇者联盟的嵌入，因为复仇者联盟电影与所有其他漫威电影相关。这可能会迫使神经推荐器继续推荐用户以前看过的电影。在这种情况下，softmax层会导致难以正确排除历史项目序列中的项目。&lt;/p&gt;
&lt;p&gt;由于问题的本质在于softmax函数无法在copy和exclude之间有效切换，即所谓的softmax瓶颈问题，因此本文提出将softmax-CPR函数应用在序列推荐上。softmax-CPR最初提出是为了减少语言生成模型的幻觉。&lt;/p&gt;
&lt;h3 id=&#34;方法&#34;&gt;方法
&lt;/h3&gt;&lt;p&gt;softmax 层如下所示，会拉近分子，拉远分母：
&lt;img src=&#34;http://localhost:1313/assets/image-20240705202106301.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240705202106301.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;Softmax-CPR 包括三个部分：上下文分区、指针网络和Reranker分区。如下图所示：
&lt;img src=&#34;http://localhost:1313/assets/image-20240705202131040.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240705202131040.png&#34;
	
	
&gt;
&lt;img src=&#34;http://localhost:1313/assets/image-20240705202402000.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240705202402000.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-实验&#34;&gt;3 实验
&lt;/h3&gt;</description>
        </item>
        <item>
        <title>各种掩码介绍</title>
        <link>http://localhost:1313/p/%E5%90%84%E7%A7%8D%E6%8E%A9%E7%A0%81%E4%BB%8B%E7%BB%8D/</link>
        <pubDate>Thu, 27 Feb 2025 00:48:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%90%84%E7%A7%8D%E6%8E%A9%E7%A0%81%E4%BB%8B%E7%BB%8D/</guid>
        <description>&lt;h2 id=&#34;前瞻掩码-look-ahead-mask&#34;&gt;前瞻掩码 Look-ahead Mask
&lt;/h2&gt;&lt;p&gt;前瞻掩码通过在自注意力机制中屏蔽（即设置为一个非常小的负值，如负无穷大）未来时间步的信息来工作。这确保了在计算每个元素的输出时，模型只能使用到当前和之前的信息，而不能使用后面的信息。这种机制对于保持自回归属性（即一次生成一个输出，且依赖于前面的输出）是必要的。&lt;/p&gt;
&lt;p&gt;在实现时，前瞻掩码通常表示为一个上三角矩阵，其中对角线及对角线以下的元素为0（表示这些位置的信息是可见的），对角线以上的元素为1（表示这些位置的信息是不可见的）。在计算注意力时，这些为1的位置会被设置为一个非常小的负数（通常是负无穷），这样经过softmax函数后，这些位置的权重接近于0，从而不会对输出产生影响。&lt;/p&gt;
&lt;h2 id=&#34;序列掩码&#34;&gt;序列掩码
&lt;/h2&gt;&lt;p&gt;在使用如Transformer模型时，序列掩码用于避免在计算注意力分数时考虑到填充位置的影响。这确保了模型的注意力是集中在实际有意义的数据上，而不是无关的填充数据。&lt;/p&gt;
&lt;p&gt;RNNs本身可以处理不同长度的序列，但在批处理和某些架构中，仍然需要固定长度的输入。序列掩码在这里可以帮助RNN忽略掉序列中的填充部分，特别是在计算最终序列输出或状态时。&lt;/p&gt;
&lt;p&gt;在训练模型时，序列掩码也可以用来确保在计算损失函数时，不会将填充部分的预测误差纳入总损失中，从而提高模型训练的准确性和效率。&lt;/p&gt;
&lt;p&gt;序列掩码通常表示为一个与序列数据维度相同的二进制矩阵或向量，其中1表示实际数据，0表示填充数据&lt;/p&gt;
&lt;h2 id=&#34;填充掩码&#34;&gt;填充掩码
&lt;/h2&gt;&lt;p&gt;填充掩码就是用来指示哪些数据是真实的，哪些是填充的。在模型处理这些数据时，掩码会用来避免在计算损失或者梯度时考虑填充的部分，确保模型的学习只关注于有效的数据。在使用诸如Transformer这样的模型时，填充掩码特别重要，因为它们可以帮助模型在进行自注意力计算时忽略掉填充的位置。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>序列加宽</title>
        <link>http://localhost:1313/p/%E5%BA%8F%E5%88%97%E5%8A%A0%E5%AE%BD/</link>
        <pubDate>Thu, 27 Feb 2025 00:48:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%BA%8F%E5%88%97%E5%8A%A0%E5%AE%BD/</guid>
        <description>&lt;h2 id=&#34;序列加宽&#34;&gt;序列加宽
&lt;/h2&gt;&lt;p&gt;序列再长也只是这一个用户的序列，这篇论文直接从别的用户的行为中寻找item。用所有用户的行为序列构建一个item图，图上的每个节点都是一个item，item有边代表有用户依次点击过这两个item。&lt;/p&gt;
&lt;p&gt;本文首先定义了一个图上的triangle，triangle的定义不是重点，可以把&lt;strong&gt;triangle简单的理解为图上的邻居&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下图中的红框部分就是一个类似于DIN的计算attention的网络，左边是处理triangle的，有边是计算多阶triangle（理解为图上的多阶邻居）attention的网络。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/image-20240705114803682.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240705114803682&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;某阶的TriangleNet：每一阶会有多个triangle，每个triangle会有3个item，所以就先内部聚合（intra），简单的avg pooling；再外部聚合（inter），multi-head self-attention。&lt;/p&gt;
&lt;p&gt;玩法一：加item的属性。这个属性的选择非常有讲究，&lt;strong&gt;得是变化的、且用户非常敏感的&lt;/strong&gt;，比如价钱、比如补贴；不能是那种无关痛痒的属性。属性的文章讲了3篇，分别是&lt;strong&gt;多属性attention&lt;/strong&gt;、考虑&lt;strong&gt;属性间关系的attenion&lt;/strong&gt;、考虑&lt;strong&gt;属性某种具体的相互关系（结构信息）的attention&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;玩法二：加更多的item，不过不是加长，而是通过&lt;strong&gt;图（本质是通过其他用户），引入一些用户以前没见过（或没交互过）但可能感兴趣的item&lt;/strong&gt;；这种加item的方式可以离线完成，可以用一些“高大上”的方法吹牛逼。个人感觉，这种方法有效的本质是&lt;strong&gt;学习了更多的共现关系。&lt;strong&gt;之前在给user选择poi时，只学习了user自己历史内的poi的共现关系；通过某种合理的方式（如其他用户的历史行为）引入更多&lt;/strong&gt;共现关系&lt;/strong&gt;可以拓宽模型的视野。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>序列推荐中sideinfo的处理方法</title>
        <link>http://localhost:1313/p/%E5%BA%8F%E5%88%97%E6%8E%A8%E8%8D%90%E4%B8%ADsideinfo%E7%9A%84%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/</link>
        <pubDate>Thu, 27 Feb 2025 00:48:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%BA%8F%E5%88%97%E6%8E%A8%E8%8D%90%E4%B8%ADsideinfo%E7%9A%84%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/</guid>
        <description>&lt;p&gt;除了商品以外，所有的信息都是side information（辅助信息）&lt;/p&gt;
&lt;h2 id=&#34;背景知识&#34;&gt;背景知识
&lt;/h2&gt;&lt;h3 id=&#34;常见信息融合方式-fusing&#34;&gt;常见信息融合方式 Fusing
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;相加（summation）&lt;/li&gt;
&lt;li&gt;拼接（concatination）&lt;/li&gt;
&lt;li&gt;门控加权（gated sum）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;invasive信息入侵&#34;&gt;Invasive（信息入侵）
&lt;/h3&gt;&lt;p&gt;暴力的信息融合方法，虽然可以把item和各种side用一个向量表示（或者说在同一个向量空间中表示），但也会导致side信息不可逆的入侵（invasion）item的信息空间，导致在模型的深层越来越难以利用到原始的item信息，从而导致Bert无法学习到最佳的Attention分布和深层Embedding表示。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有输入模型的信息中，最最最重要的肯定是item信息，直接加入side信息会给item序列带来噪声，会降低模型对item本身的学习能力&lt;/li&gt;
&lt;li&gt;side信息不一定在每一层都有用，有的信息更有助于浅层Attention的学习，有的则更适合在深层发挥作用。&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;sasrec-self-attentive-sequential-recommendation-icdm2018&#34;&gt;SASRec: &lt;a class=&#34;link&#34; href=&#34;https://link.zhihu.com/?target=https%3A//arxiv.org/pdf/1808.09781.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Self-Attentive Sequential Recommendation&lt;/a&gt; (ICDM2018)
&lt;/h2&gt;&lt;p&gt;sideinfo处理公认的base是SASRec中的处理方法，即所有sideinfo和item id emb融合起来计算attention。&lt;/p&gt;
&lt;p&gt;缺点：融合后改变了原始信息(id)输入的表达，造成“invasion of item  representation”问题，即底层融合后更改了原始item表达，糅杂了其他的Side-Info信息，导致Self-Attention后无法准确提取原始item信息。&lt;/p&gt;
&lt;h2 id=&#34;fdsa-feature-level-deeper-self-attention-network-for-sequential-recommendation-ijcai19&#34;&gt;FDSA: &lt;a class=&#34;link&#34; href=&#34;https://link.zhihu.com/?target=https%3A//www.ijcai.org/proceedings/2019/0600.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Feature-level Deeper Self-Attention Network for Sequential Recommendation&lt;/a&gt; (ijcai19)
&lt;/h2&gt;&lt;p&gt;出发点：现有的方法通常只考虑项目之间的转换模式，但忽略了项目&lt;strong&gt;特征之间的转换模式&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;方法：分别对item 和  features进行建模。features的建模方式为：每个item有多个features，先将每个item的多个features向量聚合成一个向量，再计算特征序列的向量表示。最终将item序列的向量表示与特征序列的向量表示concat起来。&lt;/p&gt;
&lt;p&gt;缺点：显而易见，FDSA中item和feature缺乏交互。&lt;/p&gt;
&lt;p&gt;![image-20240704142954349]img/image-20240704142954349.png)&lt;/p&gt;
&lt;h2 id=&#34;nova-non-invasive-self-attention-for-side-information-fusion-in-sequential-recommendation-aaai21&#34;&gt;NOVA: Non-invasive Self-attention for Side Information Fusion in Sequential Recommendation (aaai21)
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://zhuanlan.zhihu.com/p/375559349&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://zhuanlan.zhihu.com/p/375559349&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;出发点：将item与sideinfo信息融合起来，会带来信息侵入的问题，因此提出了非侵入（Non-invasive）的方法&lt;/p&gt;
&lt;p&gt;方法：为了避免side信息对原始item信息的入侵，作者将Bert中的信息流一分为二：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Integrated Embedding&lt;/strong&gt;：同原始方法，将item和side的Embedding通过某种方法融合后的信息&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ID Embedding&lt;/strong&gt;：只含item的embedding信息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;**Integrated Embedding为Bert的每一层提供Query和Key，ID Embedding为Bert的每一层提供Value。**这样在计算注意力分布的时候充分考虑到了item和side的信息，但通过注意力权重加权得到更深一层的Embedding分布时仍然只有item信息。可以说是从物理层面阻断了side对item信息的入侵。&lt;/p&gt;
&lt;p&gt;由于item信息每层都在变，而&lt;strong&gt;side信息是不变的&lt;/strong&gt;，因此在每一层都会&lt;strong&gt;将item信息和side信息用fusing function&lt;/strong&gt;进行融合，生成只在本层使用的Integrated Embedding。&lt;/p&gt;
&lt;p&gt;缺点：从梯度传播的角度看，所有sideinfo的回传梯度都是一样的，sideinfo无法根据重要性而“个性化”。所有side information在梯度更新中的影响力是均等的，这就意味着模型无法区分哪些side information是对预测更重要的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/image-20240704143805960.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240704143805960&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;dif-decoupled-side-information-fusion-for-sequential-recommendation--sigir22&#34;&gt;DIF: &lt;a class=&#34;link&#34; href=&#34;https://link.zhihu.com/?target=https%3A//arxiv.org/pdf/2204.11046.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Decoupled side information fusion for sequential recommendation&lt;/a&gt;  (sigir22)
&lt;/h2&gt;&lt;p&gt;通常的融合辅助信息的序列推荐方法都是将序列中交互对应的辅助信息（如商品的品牌，类别，用户打分等）和交互的商品ID一起融合后，再经过注意力机制进行相关性挖掘。本文作者发现提前融合会影响注意力层的表征能力，因此，作者将注意力机制放在融合之前，即下面章节的图3c，然后通过将不同属性的注意力权重进行融合，然后再对embedding进行加权。  得到序列中各个交互的embedding后，采用&lt;strong&gt;最后一次交互的商品embedding和候选商品embedding求用户交互分数&lt;/strong&gt;。并且在训练阶段约束交互中商品embedding包含辅助信息，具体可见损失函数部分。&lt;/p&gt;
&lt;p&gt;出发点：过早的信息融合会限制模型的表达力，即rank bottleneck，大白话就是矩阵的秩不可能大于矩阵的长宽。&lt;/p&gt;
&lt;p&gt;矩阵的秩是指矩阵行或列向量的最大线性独立组的大小，它描述了&lt;strong&gt;矩阵中包含的信息量&lt;/strong&gt;。矩阵的秩有以下性质：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;秩表示矩阵可以表达的维度或自由度。&lt;/li&gt;
&lt;li&gt;矩阵的秩最大等于其行数和列数的较小值。&lt;/li&gt;
&lt;li&gt;如果矩阵的秩等于其行数或列数，称为满秩，&lt;strong&gt;表示矩阵列（或行）向量组完全线性独立&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了避免这种“rank bottleneck”，模型设计时可以采取一些措施：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;延迟融合&lt;/strong&gt;：在保持信息尽可能丰富的阶段延后信息的融合步骤，直到确实需要进行决策或输出之前。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;提高维度&lt;/strong&gt;：增加处理和融合信息时的维度，确保信息在融合过程中不会因维度限制而丢失。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;方法：如下图(c)所示，每个sideinfo分别计算attention。这样做还有一个好处是不同的sideinfo可以灵活设置emb大小。&lt;/p&gt;
&lt;p&gt;缺点：特征之间完全没有交互。而且个人认为，作者对于秩的分析不太严谨，有一种“稳定秩”的概念可能会更好&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/image-20240704144522481.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240704144522481&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;trans2d-sequential-modeling-with-multiple-attributes-for-watchlist-recommendation-in-e-commerce-wsdm22&#34;&gt;Trans2D: Sequential Modeling with Multiple Attributes for Watchlist Recommendation in E-Commerce (wsdm22)
&lt;/h2&gt;&lt;p&gt;出发点：用户可能特别关心watchlist（类似于购物车）中商品的一些属性，如：价格、数量。当这些属性发生变化时，用户可能会有购买倾向。&lt;/p&gt;
&lt;p&gt;方法：trans2D，顾名思义即2维的transformer，每个特征+item_id都会和其他所有特征+item_id 计算attention。（这样特征之间就有了交互&lt;strong&gt;这篇文章考虑属性之间的相互关系。&lt;/strong&gt;）&lt;/p&gt;
&lt;p&gt;缺点：&lt;strong&gt;复杂度很高&lt;/strong&gt;，适合价格这种关键、动态、少量的特征。&lt;/p&gt;
&lt;img src=&#34;img/image-20240704172100451.png&#34; alt=&#34;image-20240704172100451&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;img src=&#34;img/image-20240704172148805-17201485042006.png&#34; alt=&#34;image-20240704172148805&#34; style=&#34;zoom: 50%;&#34; /&gt;
&lt;h2 id=&#34;hlen-hierarchical-intention-embedding-network-for-click-through-rate-prediction&#34;&gt;HlEN: Hierarchical intention Embedding Network for Click-Through Rate Prediction
&lt;/h2&gt;&lt;p&gt;前两篇文章都是在模型层面做优化，这篇文章在做embedding的优化。&lt;/p&gt;
&lt;p&gt;**这篇文章考虑属性之间的结构信息，**比如：一个广告item属于一个广告主advertiser，广告主又属于某个行业industry，用图的方式聚合embedding。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/image-20240705105527607.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240705105527607&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;模型结构如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/image-20240705110100112.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240705110100112&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;HIEN&lt;/p&gt;
&lt;p&gt;模型从左到右分为3个模块：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;user属性与item属性的聚合模块：相当于一个前置GNN，用GNN的聚合方式得到属性的embedding；&lt;/li&gt;
&lt;li&gt;user-item交互模块：这一步就是正常的GNN模块，不过在聚合属性和id的时候，考虑到属性间的层级结构。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;aligned-side-information-fusion-method-for-sequential-recommendation&#34;&gt;Aligned Side Information Fusion Method for Sequential Recommendation
&lt;/h2&gt;&lt;h3 id=&#34;背景&#34;&gt;背景
&lt;/h3&gt;&lt;p&gt;序列除了id特征之外，还有各种辅助信息（sideinfo）。现有的辅助信息融合方法可以分为早期融合、晚期融合和混合融合。早期融合可能会干扰 ID 的表示（即信息入侵），导致负面影响，而后期融合会错过 ID  和辅助信息之间的有效交互。混合融合（比如：NoVA、DIF）只将sideinfo加入到Q和K中参与attention  score的计算，sideinfo不影响V，在sideinfo和id有交互的同时避免信息入侵。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/v2-8eb145ed191a05a82a4e4e9f1d02203c_1440w.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;现有的混合融合方法有两个缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID和属性之间的相关性可能会有所不同，有些强有些弱，这使得很难消除干扰并有效地学习有意义的相关性；&lt;/li&gt;
&lt;li&gt;从最终表示中完全排除辅助信息以防止信息入侵的方法可能会无意中丢弃辅助信息本身中的关键信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第一个缺点里的“强弱”指的就是position，作者做了一个分析，表明ID和属性是强相关，和position是弱相关，因此在模型里把position单独拎出来建模，其他sideinfo还是正常交叉。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/image-20240705115613987.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240705115613987&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;第二个缺点是说ID和sideinfo的emb分布是不一样的，直接丢弃或者直接融合都是不合理的&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/image-20240705115849726.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240705115849726.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;方法&#34;&gt;方法
&lt;/h3&gt;&lt;p&gt;ASIF模型结构和其他对比模型结构如下，可以看出来，ASIF的模型结构就是FDSA+NOVA+DIF。position和ID弱相关所以单独建模，其他sideinfo正常交叉。
&lt;img src=&#34;http://localhost:1313/img/image-20240705143330316.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240705143330316&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;重点看一下Align是怎么对齐的。对齐分为表示空间对齐（Representation Space Alignment ，RSA）和同质信息提取（Homogeneous Information Extraction，HIE），如下图所示：
&lt;img src=&#34;http://localhost:1313/img/image-20240705143548922.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240705143548922&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;表示空间对齐representation-space-alignment-rsa&#34;&gt;表示空间对齐（Representation Space Alignment ，RSA）
&lt;/h3&gt;&lt;p&gt;RSA的目标是缩小项目ID和sideinfo的表示空间，以提高交互粒度上的语义一致性。方法就是用对比损失，约束序列级的ID emb和sideinfo emb的cos相似度。就是CLIP中文本和图像的对齐方式。
&lt;img src=&#34;http://localhost:1313/img/image-20240705143921856.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240705143921856.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;假设序列长度为n，sideinfo个数为m，那么得到序列的ID emb矩阵 X 和 A，shape均为[n*d]：&lt;/p&gt;
&lt;img src=&#34;img/image-20240705144021213.png&#34; alt=&#34;image-20240705144021213&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;然后计算cos相似度，即归一化之后求内积：&lt;/p&gt;
&lt;img src=&#34;img/image-20240705144036506.png&#34; alt=&#34;image-20240705144036506&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;最后计算对比损失，让cos相似度趋近单位阵，下式中 Yi为单位阵。（感觉如果sideinfo是商品名称这种和ID强相关的属性，这个损失还比较合理；但如果sideinfo是商品的统计信息，那可能就不太行了）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/v2-f3d4979805d3ef5978351c6648a6f8d2_1440w.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;同质信息提取homogeneous-information-extractionhie&#34;&gt;同质信息提取（Homogeneous Information Extraction，HIE）
&lt;/h3&gt;&lt;p&gt;HIE 提取属性中与项目 ID 相同的信息，并将其融合到 ID 表示中。方法就是将向量映射到一个r维的正交空间中，这样就能直接根据坐标的正负号判断方向是否一致。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/v2-bce526bf5d9058d5cfc3eb9ec6d7ab36_1440w.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;img src=&#34;img/image-20240705144134115.png&#34; alt=&#34;image-20240705144134115&#34; style=&#34;zoom: 50%;&#34; /&gt;
&lt;p&gt;整体的模型图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/image-20240705144302593.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240705144302593&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;实验&#34;&gt;实验
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/v2-7fc502e27e8a2ee045d15297c109331f_1440w.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;
与图1进行对比，ID-to-ID 和 ID-to-Attribute 的一致性更强。
&lt;img src=&#34;http://localhost:1313/img/image-20240705144455023.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240705144455023.png&#34;
	
	
&gt;
ASIF的ID和sideinfo在表示空间的分布也更加一致。（但好像有个问题，确实是把sideinfo拉得更开了，但也把ID拉得更近了，在计算公式8时给X加一个stop gradient可能会更好）
&lt;img src=&#34;http://localhost:1313/img/image-20240705144442403.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240705144442403.png&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>推荐系统偏差问题 &amp; 去偏最新研究进展</title>
        <link>http://localhost:1313/p/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E5%81%8F%E5%B7%AE%E9%97%AE%E9%A2%98-%E5%8E%BB%E5%81%8F%E6%9C%80%E6%96%B0%E7%A0%94%E7%A9%B6%E8%BF%9B%E5%B1%95/</link>
        <pubDate>Thu, 27 Feb 2025 00:48:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E5%81%8F%E5%B7%AE%E9%97%AE%E9%A2%98-%E5%8E%BB%E5%81%8F%E6%9C%80%E6%96%B0%E7%A0%94%E7%A9%B6%E8%BF%9B%E5%B1%95/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/image-20240410160035050.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240410160035050&#34;
	
	
&gt;
首先搜索相关的顶级会议和期刊，包括WWW，WSDM，SIGIR，KDD，RecSys，CIKM，TOIS，TKDE等，从2010年到2021年，将关键词“推荐”、“协同过滤”、“排名”或“搜索”与“偏见”、“公平”或“曝光”相结合。得到的统计情况如图所示。由此可见bias和debias引起了很大的关注和探讨。&lt;/p&gt;
&lt;h3 id=&#34;一-推荐系统的反馈回路&#34;&gt;一. 推荐系统的反馈回路
&lt;/h3&gt;&lt;p&gt;从user、data、model这三个推荐循环生态的角度出发，整体归纳起来大致有以下几个Bias（其实这些Bias很多场景下是可以互相转化的）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/image-20240410145851239.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240410145851239&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;①User -&amp;gt; Data&lt;/p&gt;
&lt;p&gt;从用户处收集数据，包括用户和商品的交互以及其他的side信息，
②Data -&amp;gt; Model&lt;/p&gt;
&lt;p&gt;基于收集到的数据进行推荐模型的学习，从历史的交互中学习用户的喜好，并且预测用户可能购买某个商品的概率等。
③ Model -&amp;gt; User&lt;/p&gt;
&lt;p&gt;通过训练得到的模型部署上线，在用户访问时给用户推荐合适的内容，以满足用户的信息需求。这一阶段将影响用户未来的行为和决策。&lt;/p&gt;
&lt;h3 id=&#34;二-推荐系统的bias&#34;&gt;二. 推荐系统的Bias
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/image-20240410150251806.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240410150251806&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;1-数据偏差&#34;&gt;1. 数据偏差
&lt;/h4&gt;&lt;p&gt;因为用户交互的数据是观察性的，而不是实验性的，即通过用户行为的训练数据不可避免的受到很多因素的影响，如：推荐系统的推荐机制、热点内容、舆论等。使得训练数据偏离真实场景中理想的数据分布：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/image-20240410150415918.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240410150415918&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;Data bias 会进一步使推荐模型捕捉到这些偏差，从而导致次优推荐效果。红色曲线表示测试的真实风险函数，而蓝色曲线表示训练的预期经验风险函数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;选择偏差&lt;/p&gt;
&lt;p&gt;主要来自显示反馈(Explicit feedback)，因为用户可以自由选择对哪些项目进行评分，所以观察到的评分并不是所有评分的代表性样本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;曝光偏差&lt;/p&gt;
&lt;p&gt;主要来自隐式反馈(Implicit feedback)，用户只能看到一部分系统曝光的物品，并作出点击等反应。但是不包含的交互并不一定代表用户不喜欢（可能是用户不知道该物品）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一致性偏差&lt;/p&gt;
&lt;p&gt;因为用户倾向于在群体中做出与他人相似的行为，即使与他们自己的感受不符&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;位置偏差&lt;/p&gt;
&lt;p&gt;位置偏差尤其发生在广告系统或搜索引擎场景中。用户倾向与列表头部的内容交互，而不太管这些内容是否真的是自己喜欢的&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-模型偏差&#34;&gt;2. 模型偏差
&lt;/h4&gt;&lt;p&gt;在模型设计中故意添加了一些归纳偏差，以实现一些理想的特性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;归纳偏差&lt;/p&gt;
&lt;p&gt;为了让模型更好地训练或者能泛化到训练集之外，需要做出一些假设。我们训练模型是为了能够在未见过的样本上有准确的预测，如果不对数据和模型做假设，那么泛化无从谈起&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3--推荐结果中隐含的偏差&#34;&gt;3.  推荐结果中隐含的偏差
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;流行度偏差(Popularity Bias)&lt;/p&gt;
&lt;p&gt;热门 items 受到超过本身应该有的 popularity 的关注，导致常见的中长尾现象，小部分热门 items 占据了大部分交互。在这种数据上训练模型，模型会倾向于给热门 items 打过高的分数，而默认对不热门 items 更加消极。所以流行度偏差会降低推荐系统的个性化水平，并导致推荐结果的不公平。&lt;/p&gt;
&lt;p&gt;如果忽略Popularuty bias，会产生以下几个问题：&lt;/p&gt;
&lt;p&gt;a. 加剧马太效应(Matthew effect)，流行偏差会进一步增加流行items的曝光机会——收集到更不平衡的数据。
b. 降低了个性化程度，使得结果不再具有偶然性。总是推荐热门内容会损害用户体验，尤其是小众偏好的用户。
c. 降低了推荐结果的公平性：流行的不一定是高质量的，那些与用户偏好更匹配的items反倒得不到曝光，这是不公平的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不公平性(Unfairness)&lt;/p&gt;
&lt;p&gt;对部分人有歧视，偏袒另一部分人。基于种族、性别、年龄、教育水平或财富等属性，不同的用户群体在数据中的被展现的机会通常是不平等的。这种不平衡又会被模型学到，进而可能导致系统性的歧视，降低弱势群体的被关注度。(但是可能以性别等人口特征作为用户特征能够更好推荐？)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;4-反馈回路放大bias&#34;&gt;4. 反馈回路放大bias
&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/image-20240410155850441.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240410155850441&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;偏差的存在，使得现实世界中的推荐系统的整个反馈回路走向偏差放大的方向，偏差不断进行自我强化（数据偏差 → 数据不平衡 → 数据偏差）。&lt;/p&gt;
&lt;h3 id=&#34;三偏差解决方案&#34;&gt;三.偏差解决方案
&lt;/h3&gt;&lt;p&gt;已经提出了大量的方法来减轻偏见或不公平的影响。表列出了所审查的方法及其优缺点。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/image-20240410161246285.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240410161246285&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;31-methods-for-selection-bias&#34;&gt;3.1 Methods for Selection Bias
&lt;/h4&gt;&lt;p&gt;由于打分只有部分可见，传统的评估通常是在可见的项目上做平均：但不是对真实性能的无偏估计。&lt;/p&gt;
&lt;p&gt;这种 gap 是由 selection bias 造成的。针对此问题目前有两个策略：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Peopensity Score（倾向分数）&lt;/li&gt;
&lt;li&gt;ATOP（不是很常用，因为要求假设很苛刻。）&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;32-debiasing-in-model-training&#34;&gt;3.2 Debiasing in model training
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Joint Generative Model&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;让模型同时考虑 rating prediction task 和 missing data prediction task。这些工作假设用户选择 items 进行评分和评分值有关，具体来说，sui可能被建模成依赖于rui的多项式、Logit model、MF model、binomial mixture model、social-enhanced model。这样，用户的偏好不仅基于打分值，还基于 missing mechanism。&lt;/p&gt;
&lt;p&gt;缺点是导致模型过于复杂， 难以训练。此外， 这种模型大多是启发式设计，关于分布的假设在某些实际场景中可能不成立。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Data Imputation (Relabeling)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;selection bias 出现是因为数据的丢失不是随机的（如果是随机的，并不影响分布），这种思路是给未标注的数据添加伪标签，以此来使得训练集数据分布趋向于理想分布。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Propensity Score (Reweighting)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;利用Propensity score来减轻选择偏差，直接以基于IPS的无偏估计量为目标并优化特定的loss：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Doubly Robust Model (Relabeling+Reweighting)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;上述两种方法中，data imputation-based models可能因伪标签不准确而存在大的 bias，IPS-based model通常有高方差的问题，Wang et al. 提出结合二者，虽然效果比单独的模型好，但是依然没有根本解决问题&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;33-methods-for-conformity-bias&#34;&gt;3.3 Methods for Conformity Bias
&lt;/h4&gt;&lt;p&gt;目前有主要有两种思路解决Conformity Bias问题：第一种认为用户的rating是符合公众意见。例如在推荐基础模型中引入三个关键features： 表示用户打分前该item的打分数量，aui是平均打分，dui是打分的分布，最终预测评分由XGBoost输出：这样，我们可以解耦 conformity 和用户真正的喜好，从而做出合适的推荐。&lt;/p&gt;
&lt;p&gt;另外一种方法是将用户的评分只作为用户喜好和社会影响的综合结果。很多工作在基础的推荐系统中利用 social factors 来生成最终的预测结果，并引入特定的参数来控制一致性偏差的影响。&lt;/p&gt;
&lt;h4 id=&#34;34-methods-for-exposure-bias&#34;&gt;3.4 Methods for Exposure Bias
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Heuristic weighting&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;针对 exposure bias 和 implicit feedback 中 negative signal 不可得的问题，一个直观的策略是将所有 unobserved interactions 视作负例，然后赋予他们置信度。目标函数可以表示为：
&lt;img src=&#34;http://localhost:1313/img/image-20240410162840035.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240410162840035&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;的置信权重是非常有挑战的，并且需要大量人类专家介入或者计算资源，才能搜索到合适的权重。&lt;/p&gt;
&lt;p&gt;但是这种方法通常需要大量人类专家介入或者计算资源，才能搜索到最合适的权重。对于百万级别的数据，人工赋予权重更是不现实的。而比较粗糙设计的置信权重又会在估计用户偏好时引入经验误差&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;Sampling&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;采样决定了使用哪些数据更新以及使用的频次，给每个数据增加采样概率。采样起到了类似置信度权重的作用。例如 Logistical matrix factorization、BPR等采用均匀负样本采样，还有对热门负样本的过采样、利用社交网络来辅助采样、建立基于item的知识图谱进行采样等，但是这些策略都较难捕捉到真实的负样本。&lt;/p&gt;
&lt;h4 id=&#34;35-methods-for-position-bias&#34;&gt;3.5 Methods for Position Bias
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Click model&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对用户的浏览行为作为假设，并且通过优化可观察的 clicks 的似然来估计真实的相关性反馈。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Propensity Score&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用inverse propensity score，每个instance有一个和位置相关的权值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Trust-aware Models&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;位置不仅影响 items 的曝光，还影响用户的决策。前述的 propensity score 无法解决这个问题。所以显式地建模用户位置的影响&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;35-针对data-biases的通用解决方案&#34;&gt;3.5 针对Data Biases的通用解决方案
&lt;/h4&gt;&lt;p&gt;大多数现有方法都是为解决特定场景中的一个或两个偏差而设计的。因此，当面对通常包含多种类型偏差的真实数据时，这些方法将无法满足要求。最近有一些关于多重数据偏差及其组合的通用解决方案的研究。这些方法借助于一个小的无偏数据集来 debias。例如，一些工作通过 domain adaption 或 knowledge distillation将知识从无偏数据转移到目标模型。尽管这些方法能有效地处理各种数据偏差，但它们需要的无偏数据很难获得，成本高昂。因此，如何在不使用无偏数据的情况下开发通用解决方案仍然是一个开放的问题&lt;/p&gt;
&lt;h4 id=&#34;36-methods-for-popularity-bias&#34;&gt;==3.6 Methods for Popularity Bias==
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Regularization&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;正则化：是解决各种Bias的常见思路，除了设计简单的正则项以外，这里以2020年阿里的一篇论文为例，提出了ESAM（Entire Space  Adaptation Model），利用Domain Adaptation的思想将热门物品（曝光集合）学到的知识迁移到长尾物品（未曝光集合）上&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;对抗训练(Adversarial Learning)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;同样是是解决各种Bias的常见思路，有很多相关的论文&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Causal Graphs&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;因果图是反事实推理的有力工具，这类方法首先建立因果图（causal graph）来解释 popularity bias，然后在图上应用反事实的干预来消除 bias。Zheng等人利用因果推理解决流行偏差。他们假设用户对商品的点击行为取决于兴趣和流行程度，并构建了一个特定的因果图。为了解决用户兴趣和流行偏差的问题，作者考虑了两种嵌入方法：兴趣嵌入以捕获用户对商品的真实兴趣，以及流行度嵌入来捕获由流行度引起的伪兴趣。在多任务学习的框架下，可以利用特定原因的数据对这些嵌入进行训练。最后，兴趣嵌入将被用于最终推荐，在这里，受欢迎度偏差已经被消除。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;其他方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一种方式是引入 side information。例如 , Bressan et al. 引入社交信息。Abdollahpouri et al. 提出一个基于 re-ranking 的策略。它首先使用普通的推荐模型生成一个更大的推荐列表，然后依据 popularity 做 re-rank。此外，还有一个工作使用 propensity score 来降低 popularity items 在模型训练中的影响&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;37-methods-for-unfairness&#34;&gt;3.7 Methods for Unfairness
&lt;/h4&gt;&lt;h4 id=&#34;38-methods-for-mitigating-loop-effect&#34;&gt;3.8 Methods for Mitigating Loop Effect
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Uniform data&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用统一数据是解决问题的最直接的方法。为了收集统一的数据，这种方法通过使用 random logging policy 而不是普通的normal recommendation policy 来干预系统。也就是说，对于每个用户来说，他们不使用推荐模型来进行 items 推送，而是随机选择一些 items，并以均匀分布的方式对其进行排序。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;强化学习(Reinforcement learning)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;推荐系统存在 exploration-exploitation dilemma，其中 exploitation 预测最符合用户偏好的 items，而 exploration 是随机推荐 items，以收集更多无偏的用户反馈，更好地捕捉用户偏好。为了解决这一问题，大量研究通过构建一个 reinforcement learning (RL) agent 来探索交互式推荐。与传统的推荐方法不同，RL 将信息搜索任务视为 agent（系统）与 users（环节）之间的序列交互。在交互过程中，agent 可以根据用户的历史信息或反馈（state ）不断更新策略 ，并生成最匹配用户偏好或 explore 用户偏好来获得长远的良好推荐效果（action ）。然后，用户将在推荐列表上给出反馈（即奖励 ，如评分或点击），以更新代理。因此，RL 能够平衡 exploitation 与 exploration 之间的竞争，最大化每个用户对系统的长期满意度。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;四未来工作&#34;&gt;四.未来工作
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Propensity Scores的评估&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Propensity Scores是一种传统的debias策略。然而，只有当倾向性得分被正确地指定时，IPS策略的有效性和公正性才得到保证。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;通用的Debiasing框架&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们可以发现，现有的方法通常只针对一个或两个特定的偏差而设计。然而，在现实世界中，各种Bias通常同时发生。推荐系统需要一个通用的借记框架来处理混合的偏差。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;更好的Evaluation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如何更好地利用这些辅助信息，因为属性不是孤立的，而是相互连接形成知识图的。知识图捕捉到更丰富的信息，这可能有助于理解数据偏差；知识图谱可能会成为开发featue-enhanced通用的debiasing框架的强有力工具。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;使用归因图来解释和推理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;降低Bias的关键是对推荐模型或数据的发生、原因和影响进行推理。大多数Bias可以通过原因假设和因果图中的其他混淆因素来理解；Bias的理解还可以通过图中的因果路径来推理。所以设计一个更好的合适的因果图，它可以推理、debiasing和解释。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;动态Bias&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;实践中,bias通常是动态的而不是静态的，因素或bias往往会随着时间的推移而演变。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Fairness-Accuracy的平衡&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在协同过滤中，包含诸如年龄和性别等敏感属性的用户配置文件会导致他们的行为模式不同；然而，这些配置文件是不被观察到的，但却隐含地影响了推荐性能。一个研究方向是了解在causality，设计公平性感知的协同过滤算法目前还没有。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;更好的Evaluation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如何不偏不倚地评估推荐系统？现有的方法要么需要准确的倾向得分，要么依赖大量无偏见的数据。然而，前者的准确性不能得到保证，而后者会损害用户体验，并且通常只限制在很小比例的在线流量上。统一的数据提供了黄金标准的无偏信息，但其规模小，使其不足以彻底评估推荐模型由于高方差。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>推荐系统往年论文列表</title>
        <link>http://localhost:1313/p/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E5%BE%80%E5%B9%B4%E8%AE%BA%E6%96%87%E5%88%97%E8%A1%A8/</link>
        <pubDate>Thu, 27 Feb 2025 00:48:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E5%BE%80%E5%B9%B4%E8%AE%BA%E6%96%87%E5%88%97%E8%A1%A8/</guid>
        <description>&lt;p&gt;Included Conferences: SIGIR 2020, SIGKDD 2020, RecSys 2020, CIKM 2020,
AAAI 2021, WSDM 2021, WWW 2021, SIGIR 2021, RecSys 2021, KDD 2021,
SIGIR 2022, RecSys 2022, KDD 2022, AAAI 2022, CIKM 2021, CIKM 2022,
WSDM 2022, WWW 2022, NIPS 2022, IJCAI 2022&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#task&#34; &gt;Task&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#collaborative-filtering&#34; &gt;Collaborative Filtering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#sequentialsession-based-recommendations&#34; &gt;Sequential/Session-based
Recommendations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#CTR/CVR-Prediction&#34; &gt;CTR/CVR Prediction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#knowledge-aware-recommendations&#34; &gt;Knowledge-aware
Recommendations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#conversational-recommender-system&#34; &gt;Conversational Recommender
System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#social-recommendation&#34; &gt;Social Recommendation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#news-recommendation&#34; &gt;News Recommendation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#music-recommendation&#34; &gt;Music Recommendation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#text-aware-recommendation&#34; &gt;Text-aware Recommendation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#poi-recommendation&#34; &gt;POI Recommendation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#online-recommendation&#34; &gt;Online Recommendation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#group-recommendation&#34; &gt;Group Recommendation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#multi-taskmulti-behaviorcross-domain-recommendation&#34; &gt;Multi-task/Multi-behavior/Cross-domain
Recommendation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#multimodal-recommendation&#34; &gt;Multimodal
Recommendations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#other-tasks&#34; &gt;Other Tasks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#topic&#34; &gt;Topic&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#debias-in-recommender-system&#34; &gt;Debias in Recommender
System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#fairness-in-recommender-system&#34; &gt;Fairness in Recommender
System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#attack-in-recommender-system&#34; &gt;Attack in Recommender
System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#explanation-in-recommender-system&#34; &gt;Explanation in Recommender
System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#long-tailcold-start-in-recommendations&#34; &gt;Long-tail/Cold-start in
Recommendations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#diversity-in-recommendation&#34; &gt;Diversity in Recommendation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#denoising-in-recommendation&#34; &gt;Denoising in Recommendation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#privacy-protection-in-recommendation&#34; &gt;Privacy Protection in Recommendation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#evaluation-of-recommender-system&#34; &gt;Evaluation of Recommender System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#other-topics&#34; &gt;Other Topics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#technique&#34; &gt;Technique&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#pre-training-in-recommender-system&#34; &gt;Pre-training in Recommender
System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#reinforcement-learning-in-recommendation&#34; &gt;Reinforcement Learning in
Recommendation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#knowledge-distillation-in-recommendation&#34; &gt;Knowledge Distillation in
Recommendation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#federated-learning-in-recommendation&#34; &gt;Federated Learning in
Recommendation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#gnn-in-Recommendation&#34; &gt;GNN in Recommendation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#Contrastive-Learning-based&#34; &gt;Contrastive Learning based&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#Adversarial-Learning-based&#34; &gt;Adversarial Learning based&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#Autoencoder-based&#34; &gt;Autoencoder based&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#meta-learning-based&#34; &gt;Meta Learning-based&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#AutoML-based&#34; &gt;AutoML-based&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#casual-inference/counterfactual&#34; &gt;Casual Inference/Counterfactual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#other-techniques&#34; &gt;Other Techniques&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;task&#34;&gt;Task
&lt;/h2&gt;&lt;h3 id=&#34;collaborative-filtering&#34;&gt;Collaborative Filtering
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Neural Graph Collaborative Filtering. SIGIR 2019 【神经图协同过滤】&lt;/li&gt;
&lt;li&gt;LightGCN: Simplifying and Powering Graph Convolution Network for Recommendation. SIGIR 2020 【推荐中的简化图神经网络】&lt;/li&gt;
&lt;li&gt;Neighbor Interaction Aware Graph Convolution Networks for Recommendation. SIGIR 2020 【邻域交互感知图卷积网络】&lt;/li&gt;
&lt;li&gt;A Framework for Recommending Accurate and Diverse Items Using Bayesian Graph Convolutional Neural Networks. KDD 2020 【贝叶斯图卷积神经网络】&lt;/li&gt;
&lt;li&gt;Dual Channel Hypergraph Collaborative Filtering. KDD 2020 【双通道超图的协同过滤】&lt;/li&gt;
&lt;li&gt;Probabilistic Metric Learning with Adaptive Margin for Top-K Recommendation. KDD 2020 【概率度量学习】&lt;/li&gt;
&lt;li&gt;Content-Collaborative Disentanglement Representation Learning for Enhanced Recommendation. RecSys 2020 【协同内容的表示学习】&lt;/li&gt;
&lt;li&gt;Neural Collaborative Filtering vs. Matrix Factorization Revisited. RecSys 2020 【深度协同过滤和矩阵分解的再思考】&lt;/li&gt;
&lt;li&gt;Bilateral Variational Autoencoder for Collaborative Filtering. WSDM 2021 【用于协同过滤的双向变分自动编码器】&lt;/li&gt;
&lt;li&gt;Learning User Representations with Hypercuboids for Recommender Systems. WSDM 2021 【超立方体学习】&lt;/li&gt;
&lt;li&gt;Local Collaborative Autoencoders. WSDM 2021 【局部的协同自编码器】&lt;/li&gt;
&lt;li&gt;A Scalable, Adaptive and Sound Nonconvex Regularizer for Low-rank Matrix Completion. WWW 2021 【低秩矩阵补全的正则化气】&lt;/li&gt;
&lt;li&gt;HGCF: Hyperbolic Graph Convolution Networks for Collaborative Filtering. WWW 2021 【双曲图卷积网络】&lt;/li&gt;
&lt;li&gt;High-dimensional Sparse Embeddings for Collaborative Filtering. WWW 2021 【高维稀疏向量】&lt;/li&gt;
&lt;li&gt;Collaborative Filtering with Preferences Inferred from Brain Signals. WWW 2021 【从脑信号中推断偏好】&lt;/li&gt;
&lt;li&gt;Interest-aware Message-Passing GCN for Recommendation. WWW 2021 【兴趣感知的图卷积网络】&lt;/li&gt;
&lt;li&gt;Neural Collaborative Reasoning. WWW 2021 【深度协同过滤的解释】&lt;/li&gt;
&lt;li&gt;Sinkhorn Collaborative Filtering. WWW 2021 【Sinkhorn 协同过滤】&lt;/li&gt;
&lt;li&gt;Bootstrapping User and Item Representations for One-Class Collaborative Filtering. SIGIR 2021 【单类协同过滤】&lt;/li&gt;
&lt;li&gt;When and Whom to Collaborate with in a Changing Environment: A Collaborative Dynamic Bandit Solution. SIGIR 2021 【推荐中的动态 bandit】&lt;/li&gt;
&lt;li&gt;Neural Graph Matching based Collaborative Filtering. SIGIR 2021 【基于神经图匹配的协同过滤】&lt;/li&gt;
&lt;li&gt;Enhanced Graph Learning for Collaborative Filtering via Mutual Information Maximization. SIGIR 2021 【通过互信息最大化进行图协同过滤】&lt;/li&gt;
&lt;li&gt;SimpleX: A Simple and Strong Baseline for Collaborative Filtering. CIKM 2021【将Cosine Contrastive Loss引入协同过滤】&lt;/li&gt;
&lt;li&gt;Incremental Graph Convolutional Network for Collaborative Filtering. CIKM 2021【增量图卷积神经网络用于协同过滤】&lt;/li&gt;
&lt;li&gt;LT-OCF: Learnable-Time ODE-based Collaborative Filtering. CIKM 2021【Learnable-Time CF】&lt;/li&gt;
&lt;li&gt;CausCF: Causal Collaborative Filtering for Recommendation Effect Estimation. CIKM 2021【applied paper，因果关系协同过滤用于推荐效果评估】&lt;/li&gt;
&lt;li&gt;Vector-Quantized Autoencoder With Copula for Collaborative Filtering. CIKM 2021【short paper，用于协同过滤的矢量量化自动编码器】&lt;/li&gt;
&lt;li&gt;Anchor-based Collaborative Filtering for Recommender Systems. CIKM 2021【short paper，Anchor-based推荐系统协同过滤】&lt;/li&gt;
&lt;li&gt;XPL-CF: Explainable Embeddings for Feature-based Collaborative Filtering. CIKM 2021【short paper，可解释 Embedding 用于基于特征的协同过滤】&lt;/li&gt;
&lt;li&gt;NMO: A Model-Agnostic and Scalable Module for Inductive Collaborative Filtering. SIGIR 2022 【模型无关的归纳式协同过滤模块】&lt;/li&gt;
&lt;li&gt;Collaborative Filtering with Attribution Alignment for Review-based Non-overlapped Cross Domain Recommendation. WWW 2022 【通过属性对齐实现基于评论的跨域推荐】&lt;/li&gt;
&lt;li&gt;Neuro-Symbolic Interpretable Collaborative Filtering for Attribute-based Recommendation. WWW 2022 【以模型为核心的神经符号可解释协同过滤】&lt;/li&gt;
&lt;li&gt;Improving Graph Collaborative Filtering with Neighborhood-enriched Contrastive Learning. WWW 2022 【通过邻居节点间的对比学习来改善图协同过滤】&lt;/li&gt;
&lt;li&gt;Hypercomplex Graph Collaborative Filtering. WWW 2022 【超复图协同过滤】&lt;/li&gt;
&lt;li&gt;Improving Graph Collaborative Filtering with Neighborhood-enriched Contrastive Learning. WWW 2022 【通过邻居节点间的对比学习来改善图协同过滤】&lt;/li&gt;
&lt;li&gt;On Sampling Collaborative Filtering Datasets. WSDM 2022【关于采样协同过滤数据集】&lt;/li&gt;
&lt;li&gt;Profiling the Design Space for Graph Neural Networks based Collaborative Filtering. WSDM 2022【分析基于图神经网络的协同过滤的设计空间】&lt;/li&gt;
&lt;li&gt;VAE++: Variational AutoEncoder for Heterogeneous One-Class Collaborative Filtering. WSDM 2022【异构单类协同过滤的变分自动编码器】&lt;/li&gt;
&lt;li&gt;Geometric Inductive Matrix Completion:
A Hyperbolic Approach with Unified Message Passing. WSDM 2022 【具有统一消息传递的双曲线方法】&lt;/li&gt;
&lt;li&gt;Asymmetrical Context-aware Modulation for Collaborative Filtering Recommendation. CIKM 2022 【用于协同过滤推荐的非对称上下文感知调制】&lt;/li&gt;
&lt;li&gt;Dynamic Causal Collaborative Filtering. CIKM 2022 【动态因果协同过滤】&lt;/li&gt;
&lt;li&gt;Towards Representation Alignment and Uniformity in Collaborative Filtering. KDD 2022 【用户和物品表示对齐】&lt;/li&gt;
&lt;li&gt;HICF: Hyperbolic Informative Collaborative Filtering. KDD 2022 【双曲空间增强表示】&lt;/li&gt;
&lt;li&gt;Geometric Disentangled Collaborative Filtering. SIGIR 2022 【几何解耦的协同过滤】&lt;/li&gt;
&lt;li&gt;Learning to Denoise Unreliable Interactions for Graph Collaborative Filtering. SIGIR 2022 【数据去噪】&lt;/li&gt;
&lt;li&gt;Self-Augmented Recommendation with Hypergraph Contrastive Collaborative Filtering. SIGIR 2022 【超图上的对比学习】&lt;/li&gt;
&lt;li&gt;Investigating Accuracy-Novelty Performance for Graph-based Collaborative Filtering. SIGIR 2022 【图协同过滤在准确度和新颖度上的表现】&lt;/li&gt;
&lt;li&gt;Unify Local and Global Information for Top-N Recommendation. SIGIR 2022 【综合局部和全局信息】&lt;/li&gt;
&lt;li&gt;Enhancing Top-N Item Recommendations by Peer Collaboration. SIGIR 2022 【short paper ，同龄人协同】&lt;/li&gt;
&lt;li&gt;Evaluation of Herd Behavior Caused by Population-scale Concept Drift in Collaborative Filtering. SIGIR 2022 【short paper】&lt;/li&gt;
&lt;li&gt;Matrix Factorization for Collaborative Filtering Is Just Solving an Adjoint Latent Dirichlet Allocation Model After All. RecSys 2021【矩阵分解式协同过滤的理论联系】&lt;/li&gt;
&lt;li&gt;Negative Interactions for Improved Collaborative-Filtering: Don’t go Deeper, go Higher. RecSys 2021【线性全秩模型考虑高阶交互的扩展】&lt;/li&gt;
&lt;li&gt;Privacy Preserving Collaborative Filtering by Distributed Mediation. RecSys 2021【隐私保护式协同过滤】&lt;/li&gt;
&lt;li&gt;ProtoCF: Prototypical Collaborative Filtering for Few-shot Item Recommendation. RecSys 2021【少样本物品推荐的原型协同过滤】&lt;/li&gt;
&lt;li&gt;Reenvisioning the comparison between Neural Collaborative Filtering and Matrix Factorization. RecSys 2021 【Reproducibility paper，神经协同过滤与矩阵分解的比较】&lt;/li&gt;
&lt;li&gt;Investigating Overparameterization for Non-Negative Matrix Factorization in Collaborative Filtering. RecSys 2021【LBR，协同过滤中非负矩阵分解的过参数化研究】&lt;/li&gt;
&lt;li&gt;ProtoMF: Prototype-based Matrix Factorization for Effective and Explainable Recommendations. RecSys 2022【基于原型的可解释协同过滤算法】&lt;/li&gt;
&lt;li&gt;Revisiting the Performance of iALS on Item Recommendation Benchmarks. RecSys 2022【Reproducibility paper，隐式交替最小二乘法 iALS 基准表现的再思考】&lt;/li&gt;
&lt;li&gt;Scalable Linear Shallow Autoencoder for Collaborative Filtering. RecSys 2022 【LBR，用于协同过滤的可扩展线性浅层自动编码器】&lt;/li&gt;
&lt;li&gt;HCFRec: Hash Collaborative Filtering via Normalized Flow with Structural Consensus for Efficient Recommendation. IJCAI 2022 【为 hash-CF 学习最优哈希码】&lt;/li&gt;
&lt;li&gt;Trading Hard Negatives and True Negatives: A Debiased Contrastive Collaborative Filtering Approach. IJCAI 2022 【探索正确的负样本】&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;sequentialsession-based-recommendations&#34;&gt;Sequential/Session-based Recommendations
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Session-based recommendation with graph neural networks. AAAI 2019 【基于图神经网络的会话推荐】&lt;/li&gt;
&lt;li&gt;Graph contextualized self-attention network for session-based recommendation. IJCAI 2019 【针对会话推荐的图上下文自注意力网络】&lt;/li&gt;
&lt;li&gt;Session-based social recommendation via dynamic graph attention networks. WSDM 2019 【通过动态图注意力网络进行会话的社交推荐】&lt;/li&gt;
&lt;li&gt;Sequential Recommendation with Self-attentive Multi-adversarial Network. SIGIR 2020 【自注意力机制的多对抗网络】&lt;/li&gt;
&lt;li&gt;KERL: A Knowledge-Guided Reinforcement Learning Model for Sequential Recommendation. SIGIR 2020 【序列推荐中知识增强的强化学习模型】&lt;/li&gt;
&lt;li&gt;Modeling Personalized Item Frequency Information for Next-basket Recommendation. SIGIR 2020 【下一篮推荐中建模个性化物品概率信息】&lt;/li&gt;
&lt;li&gt;Incorporating User Micro-behaviors and Item Knowledge into Multi-task Learning for Session-based Recommendation. SIGIR 2020 【将用户行为和物品知识融入基于会话的推荐多任务学习】&lt;/li&gt;
&lt;li&gt;GAG: Global Attributed Graph Neural Network for Streaming Session-based Recommendation. SIGIR 2020 【基于流会话推荐的全局属性图神经网络】&lt;/li&gt;
&lt;li&gt;Next-item Recommendation with Sequential Hypergraphs. SIGIR 2020 【序列推荐中的超图】&lt;/li&gt;
&lt;li&gt;A General Network Compression Framework for Sequential Recommender Systems. SIGIR 2020 【通用的网络压缩框架】&lt;/li&gt;
&lt;li&gt;Make It a Chorus: Knowledge- and Time-aware Item Modeling for Sequential Recommendation. SIGIR 2020 【知识和时间感知的物品建模】&lt;/li&gt;
&lt;li&gt;Global Context Enhanced Graph Neural Networks for Session-based Recommendation. SIGIR 2020 【上下文增强的图神经网络】&lt;/li&gt;
&lt;li&gt;Self-Supervised Reinforcement Learning for Recommender Systems. SIGIR 2020 【自监督的强化学习】&lt;/li&gt;
&lt;li&gt;Time Matters: Sequential Recommendation with Complex Temporal Information. SIGIR 2020 【结合时序信息的序列推荐】&lt;/li&gt;
&lt;li&gt;Controllable Multi-Interest Framework for Recommendation. KDD 2020 【可控的多兴趣框架】&lt;/li&gt;
&lt;li&gt;Disentangled Self-Supervision in Sequential Recommenders. KDD 2020 【序列推荐器中的自监督信号】&lt;/li&gt;
&lt;li&gt;Handling Information Loss of Graph Neural Networks for Session-based Recommendation. KDD 2020 【基于会话推荐的图神经网络信息丢失处理】&lt;/li&gt;
&lt;li&gt;Maximizing Cumulative User Engagement in Sequential Recommendation An Online Optimization Perspective. KDD 2020 【从在线优化的角度最大化序列推荐中的累积用户参与度】&lt;/li&gt;
&lt;li&gt;Contextual and Sequential User Embeddings for Large-Scale Music Recommendation. RecSys 2020 【大规模音乐推荐的上下文和时序用户表示】&lt;/li&gt;
&lt;li&gt;FISSA:Fusing Item Similarity Models with Self-Attention Networks for Sequential Recommendation. RecSys 2020 【融合物品相似性和自注意网络的序列推荐】&lt;/li&gt;
&lt;li&gt;From the lab to production: A case study of session-based recommendations in the home-improvement domain. RecSys 2020 【家庭装修领域基于会话推荐的案例研究】&lt;/li&gt;
&lt;li&gt;Recommending the Video to Watch Next: An Offline and Online Evaluation at YOUTV.de. RecSys 2020 【青年电视台的离线和在线视频评估】&lt;/li&gt;
&lt;li&gt;SSE-PT:Sequential Recommendation Via Personalized Transformer. RecSys 2020 【基于个性化 Transformer 的序列推荐】&lt;/li&gt;
&lt;li&gt;Improving End-to-End Sequential Recommendations with Intent-aware Diversification. CIKM 2020 【意向感知的多样性】&lt;/li&gt;
&lt;li&gt;Quaternion-based self-Attentive Long Short-term User Preference Encoding for Recommendation. CIKM 2020 【基于四元数的自注意力长短期用户偏好】&lt;/li&gt;
&lt;li&gt;Sequential Recommender via Time-aware Attentive Memory Network. CIKM 2020 【时间感知的注意力记忆网络】&lt;/li&gt;
&lt;li&gt;Star Graph Neural Networks for Session-based Recommendation. CIKM 2020 【基于会话推荐的星形图神经网络】&lt;/li&gt;
&lt;li&gt;S$^3$-Rec: Self-Supervised Learning for Sequential Recommendation with Mutual Information Maximization. CIKM 2020 【基于互信息最大化的序列推荐自监督学习】&lt;/li&gt;
&lt;li&gt;Dynamic Memory Based Attention Network for Sequential Recommendation. AAAI 2021 【序列推荐中基于动态记忆的注意力网络】&lt;/li&gt;
&lt;li&gt;Noninvasive Self-Attention for Side Information Fusion in Sequential Recommendation. AAAI 2021 【序列推荐中融合边信息的自注意力】&lt;/li&gt;
&lt;li&gt;Self-Supervised Hypergraph Convolutional Networks for Session-based Recommendation. AAAI 2021 【自监督超图卷积网络】&lt;/li&gt;
&lt;li&gt;An Efficient and Effective Framework for Session-based Social Recommendation. WSDM 2021 【基于会话的社交推荐】&lt;/li&gt;
&lt;li&gt;Sparse-Interest Network for Sequential Recommendation. WSDM 2021 【序列推荐的稀疏兴趣网络】&lt;/li&gt;
&lt;li&gt;Dynamic Embeddings for Interaction Prediction. WWW 2021 【交互预测的动态向量】&lt;/li&gt;
&lt;li&gt;Session-aware Linear Item-Item Models for Session-based Recommendation. WWW 2021 【线性的物品-物品模型】&lt;/li&gt;
&lt;li&gt;RetaGNN: Relational Temporal Attentive Graph Neural Networks for Holistic Sequential Recommendation. WWW 2021 【关系时间注意的图神经网络】&lt;/li&gt;
&lt;li&gt;Adversarial and Contrastive Variational Autoencoder for Sequential Recommendation. WWW 2021 【对抗和对比式变分自动编码器】&lt;/li&gt;
&lt;li&gt;Future-Aware Diverse Trends Framework for Recommendation. WWW 2021 【面向未来的多元化趋势推荐框架】&lt;/li&gt;
&lt;li&gt;DeepRec: On-device Deep Learning for Privacy-Preserving Sequential Recommendation in Mobile Commerce. WWW 2021 【移动商务的隐私保护】&lt;/li&gt;
&lt;li&gt;Linear-Time Self Attention with Codeword Histogram for Efficient Recommendation. WWW 2021 【通过 codeword 直方图进行线性时间的自注意力】&lt;/li&gt;
&lt;li&gt;Category-aware Collaborative Sequential Recommendation. SIGIR 2021 【类别感知的协同序列推荐】&lt;/li&gt;
&lt;li&gt;Sequential Recommendation with Graph Convolutional Networks. SIGIR 2021 【引入图卷积网络的序列推荐】&lt;/li&gt;
&lt;li&gt;Augmenting Sequential Recommendation with Pseudo-Prior Items via Reversely Pre-training Transformer. SIGIR 2021 【反向预训练 Transformer 增强序列推荐】&lt;/li&gt;
&lt;li&gt;Dual Attention Transfer in Session-based Recommendation with Multi Dimensional Integration. SIGIR 2021 【多维集成会话推荐中的双重注意转移】&lt;/li&gt;
&lt;li&gt;Unsupervised Proxy Selection for Session-based Recommender Systems. SIGIR 2021 【无监督代理选择】&lt;/li&gt;
&lt;li&gt;StackRec: Efficient Training of Very Deep Sequential Recommender Models by Iterative Stacking. SIGIR 2021 【基于迭代叠加的序列推荐模型】&lt;/li&gt;
&lt;li&gt;Counterfactual Data-Augmented Sequential Recommendation. SIGIR 2021 【反事实数据增强】&lt;/li&gt;
&lt;li&gt;CauseRec: Counterfactual User Sequence Synthesis for Sequential Recommendation. SIGIR 2021 【反事实用户序列合成】&lt;/li&gt;
&lt;li&gt;The World is Binary: Contrastive Learning for Denoising Next Basket Recommendation. SIGIR 2021 【通过对比学习对下一篮推荐问题去噪】&lt;/li&gt;
&lt;li&gt;Motif-aware Sequential Recommendation. SIGIR 2021 【模式感知的序列推荐】&lt;/li&gt;
&lt;li&gt;Lighter and Better: Low-Rank Decomposed Self-Attention Networks for Next-Item Recommendation. SIGIR 2021 【short paper，低阶分解的自注意网络】&lt;/li&gt;
&lt;li&gt;Seq2Bubbles: Region-Based Embedding Learning for User Behaviors in Sequential Recommenders. CIKM 2021【序列推荐中基于区域的用户行为Embedding学习】&lt;/li&gt;
&lt;li&gt;Enhancing User Interest Modeling with Knowledge-Enriched Itemsets for Sequential Recommendation. CIKM 2021【序列推荐中使用物品集增强用户兴趣建模】&lt;/li&gt;
&lt;li&gt;Continuous-Time Sequential Recommendation with Temporal Graph Collaborative Transformer. CIKM 2021【将时序图协同Transformer用于连续时间序列推荐】&lt;/li&gt;
&lt;li&gt;Extracting Attentive Social Temporal Excitation for Sequential Recommendation. CIKM 2021【提取时序激励用于序列推荐】&lt;/li&gt;
&lt;li&gt;Hyperbolic Hypergraphs for Sequential Recommendation. CIKM 2021【使用双曲超图进行序列推荐】&lt;/li&gt;
&lt;li&gt;Learning Dual Dynamic Representations on Time-Sliced User-Item Interaction Graphs for Sequential Recommendation. CIKM 2021【用于序列推荐的在时间片用户物品交互图上的对偶动态表示】&lt;/li&gt;
&lt;li&gt;Lightweight Self-Attentive Sequential Recommendation. CIKM 2021【使用CNN捕获局部特征，使用Self-Attention捕获全局特征】&lt;/li&gt;
&lt;li&gt;What is Next when Sequential Prediction Meets Implicitly Hard Interaction? CIKM 2021【序列预测与交互】&lt;/li&gt;
&lt;li&gt;Modeling Sequences as Distributions with Uncertainty for Sequential Recommendation. CIKM 2021【short paper，序列建模】&lt;/li&gt;
&lt;li&gt;Locker: Locally Constrained Self-Attentive Sequential Recommendation. CIKM 2021【short paper，局部约束的自注意力序列推荐】&lt;/li&gt;
&lt;li&gt;CBML: A Cluster-based Meta-learning Model for Session-based Recommendation. CIKM 2021【用于会话推荐的基于聚类的元学习】&lt;/li&gt;
&lt;li&gt;Self-Supervised Graph Co-Training for Session-based Recommendation. CIKM 2021【用于会话推荐的自监督图协同训练】&lt;/li&gt;
&lt;li&gt;S-Walk: Accurate and Scalable Session-based Recommendation with Random Walks. WSDM 2022【具有随机游走的准确且可扩展的基于会话的推荐】&lt;/li&gt;
&lt;li&gt;Learning Multi-granularity Consecutive User Intent Unit for Session-based Recommendation. WSDM 2022【基于会话的推荐学习多粒度连续用户意图单元】&lt;/li&gt;
&lt;li&gt;A Relevant and Diverse Retrieval-enhanced Data Augmentation Framework for Sequential Recommendation. CIKM 2022 【Applied Research Track, 用于顺序推荐的相关且多样化的检索增强数据增强框架】&lt;/li&gt;
&lt;li&gt;Beyond Learning from Next Item: Sequential Recommendation via Personalized Interest Sustainability. CIKM 2022 【基于个性化兴趣可持续性的序列推荐】&lt;/li&gt;
&lt;li&gt;Storage-saving Transformer for Sequential Recommendations. CIKM 2022 【用于序列推荐的节省存储的Transformer】&lt;/li&gt;
&lt;li&gt;Contrastive Learning with Bidirectional Transformers for Sequential Recommendation. CIKM 2022 【用于序列推荐的双向 Transformer 对比学习】&lt;/li&gt;
&lt;li&gt;FwSeqBlock: A Field-wise Approach for Modeling Behavior Representation in Sequential Recommendation. CIKM 2022 【建模行为表示】&lt;/li&gt;
&lt;li&gt;Dually Enhanced Propensity Score Estimation in Sequential Recommendation. CIKM 2022 【双重增强倾向得分估计】&lt;/li&gt;
&lt;li&gt;Hierarchical Item Inconsistency Signal learning for Sequence Denoising in Sequential Recommendation. CIKM 2022 【序列推荐中序列去噪的分层项目不一致信号学习】&lt;/li&gt;
&lt;li&gt;ContrastVAE: Contrastive Variational AutoEncoder for Sequential Recommendation. CIKM 2022 【用于序列推荐的对比变分自动编码器】&lt;/li&gt;
&lt;li&gt;Disentangling Past-Future Modeling in Sequential Recommendation via Dual Networks. CIKM 2022 【通过双网络解耦序列推荐中的过去未来】&lt;/li&gt;
&lt;li&gt;Evolutionary Preference Learning via Graph Nested GRU ODE for Session-based Recommendation. CIKM 2022 【通过图嵌套 GRU ODE 进行进化偏好学习】&lt;/li&gt;
&lt;li&gt;Spatiotemporal-aware Session-based Recommendation with Graph Neural Networks. CIKM 2022 【使用图神经网络的时空感知基于会话的推荐】&lt;/li&gt;
&lt;li&gt;Time Lag Aware Sequential Recommendation. CIKM 2022 【延时感知序列推荐】&lt;/li&gt;
&lt;li&gt;Temporal Contrastive Pre-Training for Sequential Recommendation. CIKM 2022 【时序推荐的时间对比预训练】&lt;/li&gt;
&lt;li&gt;Debiasing the Cloze Task in Sequential Recommendation with Bidirectional Transformers. KDD 2022 【序列完形填空去偏】&lt;/li&gt;
&lt;li&gt;PARSRec: Explainable Personalized Attention-fused Recurrent Sequential Recommendation Using Session Partial Actions. KDD 2022 【用户个性化区分】&lt;/li&gt;
&lt;li&gt;Multi-Behavior Hypergraph-Enhanced Transformer for Sequential Recommendation. KDD 2022 【多行为超图增强】&lt;/li&gt;
&lt;li&gt;NxtPost: User To Post Recommendations In Facebook Groups. KDD 2022 【引入外部token扩充预料】&lt;/li&gt;
&lt;li&gt;Recommendation in Offline Stores: A Gamification Approach for Learning the Spatiotemporal Representation of Indoor Shopping. KDD 2022 【游戏化方法时空表征】&lt;/li&gt;
&lt;li&gt;DiPS: Differentiable Policy for Sketching in Recommender Systems. AAAI 2022 【可微分的草图策略】&lt;/li&gt;
&lt;li&gt;FPAdaMetric: False-Positive-Aware Adaptive Metric Learning for Session-Based Recommendation. AAAI 2022 【度量学习正则化】&lt;/li&gt;
&lt;li&gt;SEMI: A Sequential Multi-Modal Information Transfer Network for E-Commerce Micro-Video Recommendations. KDD 2021 【基于序列多模态信息传输网络的电商微视频推荐系统】&lt;/li&gt;
&lt;li&gt;Decoupled Side Information Fusion for Sequential Recommendation. SIGIR 2022 【融合边缘特征的序列推荐】&lt;/li&gt;
&lt;li&gt;On-Device Next-Item Recommendation with Self-Supervised Knowledge Distillation. SIGIR 2022 【自监督知识蒸馏】&lt;/li&gt;
&lt;li&gt;Multi-Agent RL-based Information Selection Model for Sequential Recommendation. SIGIR 2022 【多智能体信息选择】&lt;/li&gt;
&lt;li&gt;An Attribute-Driven Mirroring Graph Network for Session-based Recommendation. SIGIR 2022 【特征驱动的反射图网络】&lt;/li&gt;
&lt;li&gt;When Multi-Level Meets Multi-Interest: A Multi-Grained Neural Model for Sequential Recommendation. SIGIR 2022 【多粒度网络】&lt;/li&gt;
&lt;li&gt;Price DOES Matter! Modeling Price and Interest Preferences in Session-based Recommendation. SIGIR 2022 【考虑价格和兴趣的推荐】&lt;/li&gt;
&lt;li&gt;AutoGSR: Neural Architecture Search for Graph-based Session Recommendation. SIGIR 2022 【面向图会话推荐的网络结构搜索】&lt;/li&gt;
&lt;li&gt;Ada-Ranker: A Data Distribution Adaptive Ranking Paradigm for Sequential Recommendation. SIGIR 2022 【数据分布自适应排序】&lt;/li&gt;
&lt;li&gt;Multi-Faceted Global Item Relation Learning for Session-Based Recommendation. SIGIR 2022 【多面全局商品关系学习】&lt;/li&gt;
&lt;li&gt;ReCANet: A Repeat Consumption-Aware Neural Network for Next Basket Recommendation in Grocery Shopping. SIGIR 2022 【考虑重复消费的网络】&lt;/li&gt;
&lt;li&gt;Determinantal Point Process Set Likelihood-Based Loss Functions for Sequential Recommendation. SIGIR 2022 【基于DPP的损失函数】&lt;/li&gt;
&lt;li&gt;Positive, Negative and Neutral: Modeling Implicit Feedback in Session-based News Recommendation. SIGIR 2022 【建模隐式反馈】&lt;/li&gt;
&lt;li&gt;Coarse-to-Fine Sparse Sequential Recommendation. SIGIR 2022 【short paper，粗到细的稀疏序列化推荐】&lt;/li&gt;
&lt;li&gt;Dual Contrastive Network for Sequential Recommendation. SIGIR 2022 【short paper，双对比网络】&lt;/li&gt;
&lt;li&gt;Explainable Session-based Recommendation with Meta-Path Guided Instances and Self-Attention Mechanism. SIGIR 2022 【short paper， 基于元路径指导和自注意力机制的可解释会话推荐】&lt;/li&gt;
&lt;li&gt;Item-Provider Co-learning for Sequential Recommendation. SIGIR 2022 【short paper，商品-商家一同训练】&lt;/li&gt;
&lt;li&gt;RESETBERT4Rec: A Pre-training Model Integrating Time And User Historical Behavior for Sequential Recommendation. SIGIR 2022 【short paper，融合时间和用户历史行为的预训练模型】&lt;/li&gt;
&lt;li&gt;Enhancing Hypergraph Neural Networks with Intent Disentanglement for Session-based Recommendation. SIGIR 2022 【short paper，意图解耦增强超图神经网络】&lt;/li&gt;
&lt;li&gt;CORE: Simple and Effective Session-based Recommendation within Consistent Representation Space. SIGIR 2022 【short paper，在一致表示空间上的简单有效会话推荐】&lt;/li&gt;
&lt;li&gt;DAGNN: Demand-aware Graph Neural Networks for Session-based Recommendation. SIGIR 2022 【short paper， 需求感知的图神经网络】&lt;/li&gt;
&lt;li&gt;Progressive Self-Attention Network with Unsymmetrical Positional Encoding for Sequential Recommendation. SIGIR 2022 【short paper，使用非对称位置编码的自注意力网络】&lt;/li&gt;
&lt;li&gt;ELECRec: Training Sequential Recommenders as Discriminators. SIGIR 2022 【short paper，训练序列推荐模型作为判别器】&lt;/li&gt;
&lt;li&gt;Exploiting Session Information in BERT-based Session-aware Sequential Recommendation. SIGIR 2022 【short paper，在基于BERT的模型中利用会话信息】&lt;/li&gt;
&lt;li&gt;Black-Box Attacks on Sequential Recommenders via Data-Free Model Extraction. RecSys 2021 【序列推荐的黑盒攻击】&lt;/li&gt;
&lt;li&gt;Next-item Recommendations in Short Sessions. RecSys 2021 【短会话中的下一个物品推荐】&lt;/li&gt;
&lt;li&gt;Transformers4Rec: Bridging the Gap between NLP and Sequential / Session-Based Recommendation. RecSys 2021 【建立自然语言处理和序列推荐的联系】&lt;/li&gt;
&lt;li&gt;A Case Study on Sampling Strategies for Evaluating Neural Sequential Item Recommendation Models. RecSys 2021 【Reproducibility paper，序列推荐模型评测策略的研究】&lt;/li&gt;
&lt;li&gt;Sequence Adaptation via Reinforcement Learning in Recommender Systems. RecSys 2021 【LBR，用强化学习方法进行序列推荐】&lt;/li&gt;
&lt;li&gt;Aspect Re-distribution for Learning Better Item Embeddings in Sequential Recommendation. RecSys 2022 【序列推荐中物品向量的方面重分布】&lt;/li&gt;
&lt;li&gt;Context and Attribute-Aware Sequential Recommendation via Cross-Attention. RecSys 2022 【交叉注意力机制实现上下文和属性感知的序列推荐】&lt;/li&gt;
&lt;li&gt;Defending Substitution-Based Profile Pollution Attacks on Sequential Recommenders. RecSys 2022 【序列推荐中基于替代的对抗性攻击算法】&lt;/li&gt;
&lt;li&gt;Denoising Self-Attentive Sequential Recommendation. RecSys 2022 【基于 Transformer 的序列推荐中自注意力机制的去噪】&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t recommend the obvious: estimate probability ratios. RecSys 2022 【通过拟合逐点的互信息来改进序列推荐的流行度采样指标】&lt;/li&gt;
&lt;li&gt;Effective and Efficient Training for Sequential Recommendation using Recency Sampling. RecSys 2022 【基于接近度采样进行高效的序列推荐】&lt;/li&gt;
&lt;li&gt;Global and Personalized Graphs for Heterogeneous Sequential Recommendation by Learning Behavior Transitions and User Intentions. RecSys 2022 【异构序列推荐中通过全局和个性化的图建模学习行为转换和用户意图】&lt;/li&gt;
&lt;li&gt;Learning Recommendations from User Actions in the Item-poor Insurance Domain. RecSys 2022 【保险领域使用循环神经网络的跨会话模型】&lt;/li&gt;
&lt;li&gt;A Systematic Review and Replicability Study of BERT4Rec for Sequential Recommendation. RecSys 2022【Reproducibility paper，BERT4Rec 结果的系统回顾与可复现性研究】&lt;/li&gt;
&lt;li&gt;Streaming Session-Based Recommendation: When Graph Neural Networks meet the Neighborhood. RecSys 2022【Reproducibility paper，图神经网络解决流会话推荐问题】&lt;/li&gt;
&lt;li&gt;Learning to Ride a Buy-Cycle: A Hyper-Convolutional Model for Next Basket Repurchase Recommendation. RecSys 2022 【针对下一篮回购推荐问题的超卷积模型】&lt;/li&gt;
&lt;li&gt;M2TRec: Metadata-aware Multi-task Transformer for Large-scale and Cold-start free Session-based Recommendations. RecSys 2022【LBR，基于元数据和多任务 Transformer 的冷启动会话推荐系统】&lt;/li&gt;
&lt;li&gt;MLP4Rec: A Pure MLP Architecture for Sequential Recommendations. IJCAI 2022 【利用MLP捕捉商品特征中的序列关系】&lt;/li&gt;
&lt;li&gt;Enhancing Sequential Recommendation with Graph Contrastive Learning. IJCAI 2022 【用于序列推荐的图对比学习】&lt;/li&gt;
&lt;li&gt;Disentangling Long and Short-Term Interests for Recommendation. WWW 2022 【利用自监督对比学习解耦长短期兴趣】&lt;/li&gt;
&lt;li&gt;Efficient Online Learning to Rank for Sequential Music Recommendation. WWW 2022 【将搜索空间限制在此前表现不佳的搜索方向的正交补上】&lt;/li&gt;
&lt;li&gt;Filter-enhanced MLP is All You Need for Sequential Recommendation. www 2022 【通过可学习滤波器对用户序列进行编码】&lt;/li&gt;
&lt;li&gt;Generative Session-based Recommendation. WWW 2022 【构建生成器来模拟用户序列行为，从而改善目标序列推荐模型】&lt;/li&gt;
&lt;li&gt;GSL4Rec: Session-based Recommendations with Collective Graph Structure Learning and Next Interaction Prediction. WWW 2022 【图结构学习+推荐】&lt;/li&gt;
&lt;li&gt;Intent Contrastive Learning for Sequential Recommendation. WWW 2022 【利用用户意图来增强序列推荐】&lt;/li&gt;
&lt;li&gt;Learn from Past, Evolve for Future: Search-based Time-aware Recommendation with Sequential Behavior Data. WWW 2022 【检索相关历史行为并融合当前序列行为】&lt;/li&gt;
&lt;li&gt;Sequential Recommendation via Stochastic Self-Attention. WWW 2022 【通过随机高斯分布和Wasserstein自注意力模块来引入不确定性】&lt;/li&gt;
&lt;li&gt;Sequential Recommendation with Decomposed Item Feature Routing. WWW 2022 【解耦item特征，并分别利用软硬模型来路由最有特征序列】&lt;/li&gt;
&lt;li&gt;Towards Automatic Discovering of Deep Hybrid Network Architecture for Sequential Recommendation. WWW 2022 【通过NAS来搜索每一层使用注意力/卷积模块】&lt;/li&gt;
&lt;li&gt;Unbiased Sequential Recommendation with Latent Confounders. WWW 2022 【去除潜在混淆变量来实现无偏序列推荐】&lt;/li&gt;
&lt;li&gt;Re4: Learning to Re-contrast, Re-attend, Re-construct for Multi-interest Recommendation. WWW 2022 【通过re-contrast,re-attend,re-construct来增强解耦用户多兴趣表示】&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ctrcvr-prediction&#34;&gt;CTR/CVR Prediction
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Fi-GNN: Modeling Feature Interactions via Graph Neural Networks for CTR Prediction. WWW 2019 【CTR 预测中基于图神经网络的特征交互建模】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unbiased Ad Click Prediction for Position-aware Advertising Systems. RecSys 2020 【无偏的广告点击预测】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cross-Positional Attention for Debiasing Clicks. WWW 2021 【跨位置的注意力机制用于点击去偏】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enhanced Doubly Robust Learning for Debiasing Post-Click Conversion Rate Estimation. SIGIR 2021 【点击后转换率估计】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning Graph Meta Embeddings for Cold-Start Ads in Click-Through Rate Prediction. SIGIR 2021 【点击率预测中冷启动广告】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RLNF: Reinforcement Learning based Noise Filtering for Click-Through Rate Prediction. SIGIR 2021 【基于强化学习的点击率预测噪声滤波】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Detecting Beneficial Feature Interactions for Recommender Systems. AAAI 2021 【推荐系统的特征交互】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DeepLight: Deep Lightweight Feature Interactions for Accelerating CTR Predictions in Ad Serving. WSDM 2021 【广告服务的轻量级特征交互】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multi-Interactive Attention Network for Fine-grained Feature Learning in CTR Prediction. WSDM 2021 【CTR 预测中细粒度特征学习的多交互注意力网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FM$^2$: Field-matrixed Factorization Machines for CTR Prediction. WWW 2021 【段矩阵分解机】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multi-task Learning for Bias-Free Joint CTR Prediction and Market Price Modeling in Online Advertising. CIKM 2021【在线广告无偏差联合CTR预估和市场价格建模的多任务学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enhancing Explicit and Implicit Feature Interactions via Information Sharing for Parallel Deep CTR Models. CIKM 2021【applied paper，用于并行 CTR 的显式和隐式特征交互增强】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TSI: An Ad Text Strength Indicator using Text-to-CTR and Semantic-Ad-Similarity. CIKM 2021【applied paper，使用 Text-to-CTR 和 Semantic-Ad-Similarity 的广告文本强度指标】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;One Model to Serve All: Star Topology Adaptive Recommender for Multi-Domain CTR Prediction. CIKM 2021【applied paper，用于多领域CTR预估的自适应推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Efficient Learning to Learn a Robust CTR Model for Web-scale Online Sponsored Search Advertising. CIKM 2021【applied paper，用于在线搜索广告的CTR模型】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AutoIAS: Automatic Integrated Architecture Searcher for Click-Trough Rate Prediction. CIKM 2021【CTR预估的自动集成搜索架构】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click-Through Rate Prediction with Multi-Modal Hypergraphs. CIKM 2021【使用多模态超图的点击率预测】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open Benchmarking for Click-Through Rate Prediction. CIKM 2021【开源CTR预估Benchmark】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Disentangled Self-Attentive Neural Networks for Click-Through Rate Prediction. CIKM 2021【short paper，用于CTR预估的自注意力网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AutoHERI: Automated Hierarchical Representation Integration for Post-Click Conversion Rate Estimation. CIKM 2021【short paper，用于点击后转换率估计的分层表示学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sequential Modeling with Multiple Attributes for Watchlist Recommendation in E-Commerce. WSDM 2022【电子商务中观察列表推荐的多属性序列建模】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Modeling Users’ Contextualized Page-wise Feedback for Click-Through Rate Prediction in E-commerce Search. WSDM 2022【电子商务搜索中点击率预测的用户情境化页面反馈建模】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning-To-Ensemble by Contextual Rank Aggregation in E-Commerce. WSDM 2022【通过电子商务中的上下文排名聚合学习集成】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CAN: Feature Co-Action Network for Click-Through Rate Prediction. WSDM 2022【用于点击率预测的特征协同网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Triangle Graph Interest Network for Click-through Rate Prediction. WSDM 2022【用于点击率预测的三角图兴趣网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;OptEmbed: Learning Optimal Embedding Table for Click-through Rate Prediction. CIKM 2022 【点击率预测的最优嵌入表】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multi-Interest Refinement by Collaborative Attributes Modeling for Click-Through Rate Prediction. CIKM 2022 【通过协作属性建模进行多兴趣细化的点击率预测】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GIFT: Graph-guIded Feature Transfer for Cold-Start Video Click-Through Rate Prediction. CIKM 2022 【GIFT：用于冷启动视频点击率预测的图引导特征迁移】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Graph Based Long-Term And Short-Term Interest Model for Click-Through Rate Prediction. CIKM 2022 【用于点击率预测的基于图的长期和短期兴趣模型】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hierarchically Fusing Long and Short-Term User Interests for Click-Through Rate Prediction in Product Search. CIKM 2022 【分层融合长期和短期用户兴趣以进行产品搜索中的点击率预测】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sparse Attentive Memory Network for Click-through Rate Prediction with Long Sequences. CIKM 2022 【用于长序列点击率预测的稀疏注意力记忆网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Towards Understanding the Overfitting Phenomenon of Deep Click-Through Rate Models. CIKM 2022 【了解深度点击率模型的过拟合现象】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;User-Event Graph Embedding Learning for Context-Aware Recommendation. KDD 2022 【CTR 任务引入用户-事件图进行表示学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adversarial Gradient Driven Exploration for Deep Click-Through Rate Prediction. KDD 2022 【CTR EE 探索】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Combo-Fashion: Fashion Clothes Matching CTR Prediction with Item History. KDD 2022 【流行服饰匹配增强 CTR】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enhancing CTR Prediction with Context-Aware Feature Representation Learning. SIGIR 2022 【上下文相关的特征表示】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HIEN: Hierarchical Intention Embedding Network for Click-Through Rate Prediction. SIGIR 2022 【层次化意图嵌入网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;NAS-CTR: Efficient Neural Architecture Search for Click-Through Rate Prediction. SIGIR 2022 【高效的网络结构搜索】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;NMO: A Model-Agnostic and Scalable Module for Inductive Collaborative Filtering. SIGIR 2022 【模型无关的归纳式协同过滤模块】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Neighbour Interaction based Click-Through Rate Prediction via Graph-masked Transformer. SIGIR 2022 【图遮盖的Transformer】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Neural Statistics for Click-Through Rate Prediction. SIGIR 2022 【short paper，神经统计学】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Smooth-AUC: Smoothing the Path Towards Rank-based CTR Prediction. SIGIR 2022 【short paper，基于排序的CTR预估】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DisenCTR: Dynamic Graph-based Disentangled Representation for Click-Through Rate Prediction. SIGIR 2022 【基于图的解耦表示】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deep Multi-Representational Item Network for CTR Prediction. SIGIR 2022 【short paper，多重表示商品网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Gating-adapted Wavelet Multiresolution Analysis for Exposure Sequence Modeling in CTR prediction. SIGIR 2022 【short paper，多分辨率小波分析】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MetaCVR: Conversion Rate Prediction via Meta Learning in Small-Scale Recommendation Scenarios. SIGIR 2022 【short paper，小规模推荐场景下的元学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adversarial Filtering Modeling on Long-term User Behavior Sequences for Click-Through Rate Prediction. SIGIR 2022 【short paper，对抗过滤建模用户长期行为序列】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clustering based Behavior Sampling with Long Sequential Data for CTR Prediction. SIGIR 2022 【short paper，长序列数据集基于聚类的行为采样】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CTnoCVR: A Novelty Auxiliary Task Making the Lower-CTR-Higher-CVR Upper. SIGIR 2022 【short paper，新颖度辅助任务】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Large-Scale Modeling of Mobile User Click Behaviors Using Deep Learning. RecSys 2021 【移动设备的用户的点击行为预测】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Page-level Optimization of e-Commerce Item Recommendations. RecSys 2021 【商品详细信息页面的商品推荐模块】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An Analysis Of Entire Space Multi-Task Models For Post-Click Conversion Prediction. RecSys 2021 【LBR，点击后转换率预测的全空间多任务模型分析】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CAEN: A Hierarchically Attentive Evolution Network for Item-Attribute-Change-Aware Recommendation in the Growing E-commerce Environment. RecSys 2022 【物品属性变化感知的分层注意力动态网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dual Attentional Higher Order Factorization Machines. RecSys 2022 【双注意高阶因式分解机】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Position Awareness Modeling with Knowledge Distillation for CTR Prediction. RecSys 2022 【LBR，位置感知的知识提取框架】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;APG: Adaptive Parameter Generation Network for Click-Through Rate Prediction. NIPS 2022 【点击率预测的自适应参数生成网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Alleviating Cold-start Problem in CTR Prediction with A Variational Embedding Learning Framework. WWW 2022 【使用变分embedding学习框架缓解 CTR 预测中的冷启动问题】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CBR: Context Bias aware Recommendation for Debiasing User Modeling and Click Prediction. WWW 2022 【去除由丰富交互造成的上下文偏差】&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;knowledge-aware-recommendations&#34;&gt;Knowledge-aware Recommendations
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Knowledge Graph Convolutional Networks for Recommender Systems. WWW 2019 【推荐系统的知识图谱卷积网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;KGAT: Knowledge Graph Attention Network for Recommendation. KDD 2019 【推荐的知识图谱注意力机制网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CKAN: Collaborative Knowledge-aware Attentive Network for Recommender Systems. SIGIR 2020 【推荐系统的协同知识感知注意力网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Attentional Graph Convolutional Networks for Knowledge Concept Recommendation in MOOCs in a Heterogeneous View. SIGIR 2020 【MOOC 知识概念推荐的注意力图卷积网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MVIN: Learning multiview items for recommendation. SIGIR 2020 【学习多视角的物品表示】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jointly Non-Sampling Learning for Knowledge Graph Enhanced Recommendation. SIGIR 2020 【知识图增强推荐的非采样学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Joint Item Recommendation and Attribute Inference: An Adaptive Graph Convolutional Network Approach. SIGIR 2020 【结合物品推荐和属性推理的自适应图卷积网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Leveraging Demonstrations for Reinforcement Recommendation Reasoning over Knowledge Graphs. SIGIR 2020 【利用演示增强知识图上的推荐推理】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Interactive Recommender System via Knowledge Graph-enhanced Reinforcement Learning. SIGIR 2020 【基于知识图增强强化学习的交互式推荐系统】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fairness-Aware Explainable Recommendation over Knowledge Graphs. SIGIR 2020 【知识图谱上公平性感知的可解释推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SimClusters Community-Based Representations for Heterogenous Recommendations at Twitter. KDD 2020 【推特上基于相似社区的表示】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multi-modal Knowledge Graphs for Recommender Systems. CIKM 2020 【推荐系统的多模态知识图】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DisenHAN Disentangled Heterogeneous Graph Attention Network for Recommendation. CIKM 2020 【异构图注意网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Genetic Meta-Structure Search for Recommendation on Heterogeneous Information Network. CIKM 2020 【异构信息网络推荐的遗传元结构搜索】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TGCN Tag Graph Convolutional Network for Tag-Aware Recommendation. CIKM 2020 【标签图卷积网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Knowledge-Enhanced Top-K Recommendation in Poincaré Ball. AAAI 2021 【双曲空间中知识增强的推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Graph Heterogeneous Multi-Relational Recommendation. AAAI 2021 【图异构的多关系推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Knowledge-Enhanced Hierarchical Graph Transformer Network for Multi-Behavior Recommendation. AAAI 2021 【用于多行为推荐的知识增强层次图 Transformer 网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Alleviating Cold-Start Problems in Recommendation through Pseudo-Labelling over Knowledge Graph. WSDM 2021 【知识图上的伪标记缓解冷启动问题】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Decomposed Collaborative Filtering Modeling Explicit and Implicit Factors For Recommender Systems. WSDM 2021 【分解协同过滤模型的显式和隐式因素】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Temporal Meta-path Guided Explainable Recommendation. WSDM 2021 【时态元路径引导的可解释推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning Intents behind Interactions with Knowledge Graph for Recommendation. WWW 2021 【知识增强推荐的意图学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Knowledge-Aware Recommender with Attention-Enhanced Dynamic Convolutional Network. CIKM 2021【动态卷积用于知识感知的推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Entity-aware Collaborative Relation Network with Knowledge Graph for Recommendation. CIKM 2021【short paper，KG+RS】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Conditional Graph Attention Networks for Distilling and Refining Knowledge Graphs in Recommendation. CIKM 2021【GNN+KG+RS】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Knowledge Enhanced Multi-Interest Network for the Generation of Recommendation Candidates. CIKM 2022 【用于生成推荐候选的知识增强多兴趣网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tiger: Transferable Interest Graph Embedding for Domain-Level Zero-Shot Recommendation. CIKM 2022 【用于域级零样本推荐的可迁移兴趣图嵌入】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Improving Knowledge-aware Recommendation with Multi-level Interactive Contrastive Learning. CIKM 2022 【通过多层次交互式对比学习改进知识感知推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Modeling Scale-free Graphs with Hyperbolic Geometry for Knowledge-aware Recommendation. WSDM 2022【使用双曲几何建模无标度图以进行知识感知推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Knowledge Graph Contrastive Learning for Recommendation. SIGIR 2022 【知识图谱上的对比学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multi-level Cross-view Contrastive Learning for Knowledge-aware Recommender System. SIGIR 2022 【多级交叉视图的对比学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Alleviating Spurious Correlations in Knowledge-aware Recommendations through Counterfactual Generator. SIGIR 2022 【利用反事实生成器缓解假知识】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HAKG: Hierarchy-Aware Knowledge Gated Network for Recommendation. SIGIR 2022 【层次化知识门控网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;KETCH: Knowledge Graph Enhanced Thread Recommendation in Healthcare Forums. SIGIR 2022 【医疗论坛上的知识图谱增强的推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sparse Feature Factorization for Recommender Systems with Knowledge Graphs. RecSys 2021 【利用知识图谱分解推荐系统稀疏特征】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TinyKG: Memory-Efficient Training Framework for Knowledge Graph Neural Recommender Systems. RecSys 2022 【知识图神经推荐系统的内存高效训练框架】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Knowledge-aware Recommendations Based on Neuro-Symbolic Graph Embeddings and First-Order Logical Rules. RecSys 2022 【LBR，基于神经符号图表示的知识感知推荐框架】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multi-level Recommendation Reasoning over Knowledge Graphs with Reinforcement Learning. WWW 2022 【基于强化学习的知识图多级推荐推理】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Path Language Modeling over Knowledge Graphs for Explainable Recommendation. WWW 2022 【在知识图谱上学习语言模型，实现推荐和解释】&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;conversational-recommender-system&#34;&gt;Conversational Recommender System
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Towards Question-based Recommender Systems. SIGIR 2020 【基于问题的推荐系统】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Improving Conversational Recommender Systems via Knowledge Graph based Semantic Fusion. KDD 2020 【知识图谱的语义融合增强对话推荐系统】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Interactive Path Reasoning on Graph for Conversational Recommendation. KDD 2020 【对话推荐中基于图路径的解释】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Ranking Optimization Approach to Latent Linear Critiquing for Conversational Recommender Systems. RecSys 2020 【会话推荐系统线性评判的排序优化方法】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What does BERT know about books, movies and music: Probing BERT for Conversational Recommendation. RecSys 2020 【BERT 的对话推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adapting User Preference to Online Feedback in Multi-round Conversational Recommendation. WSDM 2021 【多轮会话推荐中调整用户偏好】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Workflow Analysis of Context-driven Conversational Recommendation. WWW 2021 【上下文驱动会话推荐的工作流分析】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unified Conversational Recommendation Policy Learning via Graph-based Reinforcement Learning. SIGIR 2021 【基于图强化学习的对话推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning to Ask Appropriate Questions in Conversational Recommendation. SIGIR 2021 【对话推荐中学习问恰当的问题】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Comparison-based Conversational Recommender System with Relative Bandit Feedback. SIGIR 2021 【基于相对 bandit 反馈的对话推荐系统】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Popcorn: Human-in-the-loop Popularity Debiasing in Conversational Recommender Systems. CIKM 2021【采用人在回路方式进行对话推荐系统的流行度去偏】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Neural Conversation Generation Model via Equivalent Shared Memory Investigation. CIKM 2021【对话生成】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;C2-CRS: Coarse-to-Fine Contrastive Learning for Conversational Recommender System. WSDM 2022【对话式推荐系统的粗到细对比学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rethinking Conversational Recommendations: Is Decision Tree All You Need? CIKM 2022 【重新思考对话推荐：决策树是否就是我们需要的？】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Two-level Graph Path Reasoning for Conversational Recommendation with User Realistic Preference. CIKM 2022 【具有用户现实偏好的会话推荐的两级图路径推理】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extracting Relevant Information from User&amp;rsquo;s Utterances in Conversational Search and Recommendation. KDD 2022 【用户话语权】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Towards Unified Conversational Recommender Systems via Knowledge-Enhanced Prompt Learning. KDD 2022 【知识增强的提示学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning to Infer User Implicit Preference in Conversational Recommendation. SIGIR 2022 【学习推测用户隐偏好】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;User-Centric Conversational Recommendation with Multi-Aspect User Modeling. SIGIR 2022 【多角度用户建模】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Variational Reasoning about User Preferences for Conversational Recommendation. SIGIR 2022 【用户偏好的变分推理】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Analyzing and Simulating User Utterance Reformulation in Conversational Recommender Systems. SIGIR 2022 【对话推荐中模仿用户言论】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Improving Conversational Recommender Systems via Transformer-based Sequential ModellingSIGIR 2022 【short paper，基于Transformer的序列化建模】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Conversational Recommendation via Hierarchical Information Modeling. SIGIR 2022 【short paper，层次化信息建模】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Large-scale Interactive Conversational Recommendation System. RecSys 2021 【大规模交互式对话推荐系统】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Partially Observable Reinforcement Learning for Dialog-based Interactive Recommendation. RecSys 2021 【将强化学习用于基于对话框的交互式推荐任务】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Generation-based vs. Retrieval-based Conversational Recommendation: A User-Centric Comparison. RecSys 2021 【Reproducibility paper，对话推荐中基于生成和基于检索的方法对比】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Soliciting User Preferences in Conversational Recommender Systems via Usage-related Questions. RecSys 2021 【LBR，对话推荐系统的偏好启发方法】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bundle MCR: Towards Conversational Bundle Recommendation. RecSys 2022 【马尔可夫决策进行对话式捆绑推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Self-Supervised Bot Play for Transcript-Free Conversational Recommendation with Rationales. RecSys 2022 【自监督对话推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multiple Choice Questions based Multi-Interest Policy Learning for Conversational Recommendation. WWW 2022 【基于多兴趣的对话推荐策略学习】&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;social-recommendation&#34;&gt;Social Recommendation
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A Neural Influence Diffusion Model for Social Recommendation. SIGIR 2019 【社交推荐的影响扩散模型】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Graph Neural Networks for Social Recommendation. WWW 2019 【社交推荐的图神经网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Session-based social recommendation via dynamic graph attention networks. WSDM 2019 【通过动态图注意力网络进行会话的社交推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Partial Relationship Aware Influence Diffusion via a Multi-channel Encoding Scheme for Social Recommendation. CIKM 2020 【多通道编码方案的部分关系感知影响扩散】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Random Walks with Erasure: Diversifying Personalized Recommendations on Social and Information Networks. WWW 2021 【社交网络个性化推荐的多样化】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dual Side Deep Context-aware Modulation for Social Recommendation. WWW 2021 【社交推荐的上下文感知调制】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Self-Supervised Multi-Channel Hypergraph Convolutional Network for Social Recommendation. WWW 2021 【用于社交推荐的自监督多通道超图卷积网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Social Recommendation with Self-Supervised Metagraph Informax Network. CIKM 2021【使用自监督元图网络的社交推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ranking Friend Stories on Social Platforms with Edge-Contextual Local Graph Convolutions. WSDM 2022 【基于图卷积神经网络的社交排序】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Socially-Aware Self-Supervised Tri-Training for Recommendation. KDD 2021 【社会意识自监督的立体推荐系统】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Affective Signals in a Social Media Recommender System. KDD 2022 【社交媒体情感信息】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I want to break free! Recommending friends from outside the echo chamber. RecSys 2021 【有回声室意识的朋友推荐方法】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Dual Echo Chamber: Modeling Social Media Polarization for Interventional Recommending. RecSys 2021 【针对双回声室效应的社交媒体极化模型】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Auditing the Effect of Social Network Recommendations on Polarization in Geometrical Ideological Spaces. RecSys 2021 【LBR，社交网络推荐对几何意识形态空间中极化的影响】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do recommender systems make social media more susceptible to misinformation spreaders?. RecSys 2022 【LBR，错误信息传播者对社交推荐的影响】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Revisiting Graph based Social Recommendation: A Distillation Enhanced Social Graph Network. WWW 2022 【使用知识蒸馏来融入user-item交互图和user-user社交图的信息】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Large-scale Personalized Video Game Recommendation via Social-aware Contextualized Graph Neural Network. WWW 202 【同时考虑个性化，游戏上下文，社交联系】&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;news-recommendation&#34;&gt;News Recommendation
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;KRED:Knowledge-Aware Document Representation for News Recommendations. RecSys 2020 【新闻推荐知识感知的文档表示】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;News Recommendation with Topic-Enriched Knowledge Graphs. CIKM 2020 【主题丰富知识图的新闻推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Interaction between Political Typology and Filter Bubbles in News Recommendation Algorithms. WWW 2021 【新闻推荐算法中政治类型与过滤气泡的相互作用】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Personalized News Recommendation with Knowledge-aware News Interactions. SIGIR 2021 【知识感知的个性化新闻推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Joint Knowledge Pruning and Recurrent Graph Convolution for News Recommendation. SIGIR 2021 【新闻推荐中的联合知识剪枝和递归图卷积】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WG4Rec: Modeling Textual Content with Word Graph for News Recommendation. CIKM 2021【使用Word Graph为新闻推荐建模文本内容】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Popularity-Enhanced News Recommendation with Multi-View Interest Representation. CIKM 2021【多视角兴趣学习的流行度增强的新闻推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Prioritizing Original News on Facebook. CIKM 2021【applied paper，原创新闻优先级排序】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DeepVT: Deep View-Temporal Interaction Network for News Recommendatio. CIKM 2022 【新闻推荐的深度视图-时间交互网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Generative Adversarial Zero-Shot Learning for Cold-Start News Recommendation. CIKM 2022 【冷启动新闻推荐的生成对抗零样本学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Personalized Chit-Chat Generation for Recommendation Using External Chat Corpora. KDD 2022 【个性化聊天】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Training Large-Scale News Recommenders with Pretrained Language Models in the Loop. KDD 2022 【轻量级编码pipeline】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reinforced Anchor Knowledge Graph Generation for News Recommendation Reasoning. KDD 2021 【新闻推荐推理的增强锚点知识图生成】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ProFairRec: Provider Fairness-aware News Recommendation. SIGIR 2022 【商家公平的新闻推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Positive, Negative and Neutral: Modeling Implicit Feedback in Session-based News Recommendation. SIGIR 2022 【建模隐式反馈】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FUM: Fine-grained and Fast User Modeling for News Recommendation. SIGIR 2022 【short paper，细粒度快速的用户建模】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Is News Recommendation a Sequential Recommendation Task?. SIGIR 2022 【short paper，新闻推荐是序列化推荐吗】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;News Recommendation with Candidate-aware User Modeling. SIGIR 2022 【short paper，候选感知的用户建模】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MM-Rec: Visiolinguistic Model Empowered Multimodal News Recommendation. SIGIR 2022 【short paper，视觉语言学增强的多模态新闻推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RADio – Rank-Aware Divergence Metrics to Measure Normative Diversity in News Recommendations. RecSys 2022【衡量新闻推荐规范化多样性的度量框架】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reducing Cross-Topic Political Homogenization in Content-Based News Recommendation. RecSys 2022【新闻推荐中减少跨主题的政治同质化】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FeedRec: News Feed Recommendation with Various User Feedbacks. WWW 2022 【融入各类显示/隐式反馈来建模用户兴趣】&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;music-recommendation&#34;&gt;Music Recommendation
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Contextual and Sequential User Embeddings for Large-Scale Music Recommendation. RecSys 2020 【大规模音乐推荐的上下文和时序用户表示】&lt;/li&gt;
&lt;li&gt;A Case Study in Educational Recommenders:Recommending Music Partitures at Tomplay. CIKM 2022 【在 Tomplay 推荐音乐片段】&lt;/li&gt;
&lt;li&gt;Counteracting User Attention Bias in Music Streaming Recommendation via Reward Modification. KDD 2022 【用户注意力对抗】&lt;/li&gt;
&lt;li&gt;Follow the guides: disentangling human and algorithmic curation in online music consumption. RecSys 2021 【在线音乐消费中的人为和算法影响】&lt;/li&gt;
&lt;li&gt;The role of preference consistency, defaults and musical expertise in users&amp;rsquo; exploration behavior in a genre exploration recommender. RecSys 2021 【用户音乐偏好的行为探索】&lt;/li&gt;
&lt;li&gt;Analyzing Item Popularity Bias of Music Recommender Systems: Are Different Genders Equally Affected?. RecSys 2021 【LBR，音乐推荐物品流行度偏差的性别分析】&lt;/li&gt;
&lt;li&gt;Baby Shark to Barracuda: Analyzing Children’s Music Listening Behavior. RecSys 2021 【LBR，儿童音乐行为分析】&lt;/li&gt;
&lt;li&gt;Optimizing the Selection of Recommendation Carousels with Quantum Computing. RecSys 2021【LBR，用量子计算优化音乐歌单推荐】&lt;/li&gt;
&lt;li&gt;Play It Again, Sam! Recommending Familiar Music in Fresh Ways. RecSys 2021【LBR，用巡演推荐重复的音乐】&lt;/li&gt;
&lt;li&gt;Predicting Music Relistening Behavior Using the ACT-R Framework. RecSys 2021【LBR，基于心理学的理论来建模音乐重听行为】&lt;/li&gt;
&lt;li&gt;Siamese Neural Networks for Content-based Cold-Start Music Recommendation. RecSys 2021 【LBR，暹罗神经网络进行音乐冷启动推荐】&lt;/li&gt;
&lt;li&gt;A User-Centered Investigation of Personal Music Tours. RecSys 2022 【以用户为中心的音乐巡演推荐】&lt;/li&gt;
&lt;li&gt;Exploiting Negative Preference in Content-based Music Recommendation with Contrastive Learning. RecSys 2022 【利用对比学习挖掘基于内容的音乐推荐中的负面偏好】&lt;/li&gt;
&lt;li&gt;Exploring the longitudinal effect of nudging on users&amp;rsquo; genre exploration behavior and listening preference. RecSys 2022 【探索轻推对用户听歌体裁偏好的纵向效应】&lt;/li&gt;
&lt;li&gt;Discovery Dynamics: Leveraging Repeated Exposure for User and Music CharacterizationRecSys 2022 【LBR，探索轻推对用户听歌体裁偏好的纵向效应】&lt;/li&gt;
&lt;li&gt;Efficient Online Learning to Rank for Sequential Music Recommendation. WWW 2022 【将搜索空间限制在此前表现不佳的搜索方向的正交补上】&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;text-aware-recommendation&#34;&gt;Text-aware Recommendation
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;TAFA: Two-headed Attention Fused Autoencoder for Context-Aware Recommendations. RecSys 2020 【用于上下文感知推荐的双头注意力融合自编码器】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set-Sequence-Graph A Multi-View Approach Towards Exploiting Reviews for Recommendation. CIKM 2020 【利用评论进行推荐的多视图方法】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TPR: Text-aware Preference Ranking for Recommender Systems. CIKM 2020 【文本感知的偏好排序】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Leveraging Review Properties for Effective Recommendation. WWW 2021 【利用评论属性实现高效建议】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Counterfactual Review-based Recommendation. CIKM 2021【基于评论的反事实推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Review-Aware Neural Recommendation with Cross-Modality Mutual Attention. CIKM 2021【short paper，文本+RS+跨模态】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Aligning Dual Disentangled User Representations from Ratings and Textual Content. KDD 2022 【用户双重解耦表示对齐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Collaborative Filtering with Attribution Alignment for Review-based Non-overlapped Cross Domain Recommendation. WWW 2022 【通过属性对齐实现基于评论的跨域推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Accurate and Explainable Recommendation via Review Rationalization. WWW 2022 【提取评论中的因果关系】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Heterogeneous Interactive Snapshot Network for Review-Enhanced Stock Profiling and Recommendation. IJCAI 2022 【评论增强的股票分析和推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;poi-recommendation&#34;&gt;POI Recommendation
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;HME: A Hyperbolic Metric Embedding Approach for Next-POI Recommendation. SIGIR 2020 【POI 推荐的双曲线度量方法】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Spatial Object Recommendation with Hints: When Spatial Granularity Matters. SIGIR 2020 【带提示的空间对象推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Geography-Aware Sequential Location Recommendation. KDD 2020 【地理感知的时序位置推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning Graph-Based Geographical Latent Representation for Point-of-Interest Recommendation. CIKM 2020 【基于图的地理表示的 POI 推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;STP-UDGAT Spatial-Temporal-Preference User Dimensional Graph Attention Network for Next POI Recommendation. CIKM 2020 【POI 推荐的时空偏好用户维图注意力网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;STAN: Spatio-Temporal Attention Network for next Point-of-Interest Recommendation. WWW 2021 【POI 推荐的时空注意力网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Incremental Spatio-Temporal Graph Learning for Online Query-POI Matching. WWW 2021 【在线查询 POI 匹配的增量时空图学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Answering POI-recommendation Questions using Tourism Reviews. CIKM 2021【使用旅游者评论回答POI问题】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SNPR: A Serendipity-Oriented Next POI Recommendation Model. CIKM 2021【面向偶然性的POI推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You Are What and Where You Are: Graph Enhanced Attention Network for Explainable POI Recommendation. CIKM 2021【applied paper，Attention 图神经网络用于可解释推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ST-PIL: Spatial-Temporal Periodic Interest Learning for Next Point-of-Interest Recommendation. CIKM 2021【short paper，用于POI推荐的时空周期兴趣学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Graph-Flashback Network for Next Location Recommendation. KDD 2022 【引入POI相似度权重】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Curriculum Meta-Learning for Next POI Recommendation. KDD 2021 【基于元学习的下一代兴趣点推荐系统】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hierarchical Multi-Task Graph Recurrent Network for Next POI Recommendation. SIGIR 2022 【多任务图循环网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning Graph-based Disentangled Representations for Next POI Recommendation. SIGIR 2022 【学习基于图的解耦表示】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GETNext: Trajectory Flow Map Enhanced Transformer for Next POI Recommendation. SIGIR 2022 【轨迹图加强的Transformer】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Next Point-of-Interest Recommendation with Auto-Correlation Enhanced Multi-Modal Transformer Network. SIGIR 2022 【short paper，自修正的多模态Transformer】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Empowering Next POI Recommendation with Multi-Relational Modeling. SIGIR 2022 【多重关系建模】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Exploring the Impact of Temporal Bias in Point-of-Interest Recommendation. RecSys 2022 【LBR，时间偏差对兴趣点推荐的影响】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Modeling Spatio-temporal Neighbourhood for Personalized Point-of-interest Recommendation. IJCAI 2022 【融入知识图谱和时域信息，实现个性化POI推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Next Point-of-Interest Recommendation with Inferring Multi-step Future Preferences. IJCAI 2022 【考虑用户未来偏好】&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;online-recommendation&#34;&gt;Online Recommendation
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Gemini: A novel and universal heterogeneous graph information fusing framework for online recommendations. KDD 2020 【用于在线推荐的新型通用异构图信息融合框架】&lt;/li&gt;
&lt;li&gt;Exploring Clustering of Bandits for Online Recommendation System. RecSys 2020 【在线推荐系统中的 bandit 聚类研究】&lt;/li&gt;
&lt;li&gt;Contextual User Browsing Bandits for Large-Scale Online Mobile Recommendation. RecSys 2020 【大规模在线移动推荐的上下文用户浏览 bandit】&lt;/li&gt;
&lt;li&gt;A Hybrid Bandit Framework for Diversified Recommendation. AAAI 2021 【多元化推荐的混合 Bandit 框架】&lt;/li&gt;
&lt;li&gt;Generative Inverse Deep Reinforcement Learning for Online Recommendation. CIKM 2021【用于在线推荐的生成式逆强化学习】&lt;/li&gt;
&lt;li&gt;Long Short-Term Temporal Meta-learning in Online Recommendation. WSDM 2022【在线推荐中的长短期时间元学习】&lt;/li&gt;
&lt;li&gt;A Cooperative-Competitive Multi-Agent Framework for Auto-bidding in Online Advertising. WSDM 2022【一种用于在线广告自动竞价的合作竞争多代理框架】&lt;/li&gt;
&lt;li&gt;Knowledge Extraction and Plugging for Online Recommendation. CIKM 2022 【在线推荐的知识抽取与插入】&lt;/li&gt;
&lt;li&gt;Real-time Short Video Recommendation on Mobile Devices. CIKM 2022 【移动端实时短视频推荐】&lt;/li&gt;
&lt;li&gt;SASNet: Stage-aware sequential matching for online travel recommendation. CIKM 2022 【在线旅游推荐的阶段感知序列匹配】&lt;/li&gt;
&lt;li&gt;Meta-Learning for Online Update of Recommender Systems AAAI 2022 【自适应最优学习率】&lt;/li&gt;
&lt;li&gt;Architecture and Operation Adaptive Network for Online Recommendations. KDD 2021 【在线推荐系统的架构及其自适应网络】&lt;/li&gt;
&lt;li&gt;Recommendation on Live-Streaming Platforms: Dynamic Availability and Repeat Consumption. RecSys 2021 【实时流平台推荐的动态可用性和重复消费】&lt;/li&gt;
&lt;li&gt;A GPU-specialized Inference Parameter Server for Large-Scale Deep Recommendation Models. RecSys 2022 【大规模在线推理模型基于 GPU 高速缓存的分布式框架】&lt;/li&gt;
&lt;li&gt;Modeling User Repeat Consumption Behavior for Online Novel Recommendation. RecSys 2022 【在线小说推荐的用户重复消费行为建模】&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;group-recommendation&#34;&gt;Group Recommendation
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Bundle Recommendation with Graph Convolutional Networks. SIGIR 2020 【基于图卷积网络的捆绑推荐 】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GAME: Learning Graphical and Attentive Multi-view Embeddings for Occasional Group Recommendation. SIGIR 2020 【多视图表示的组推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GroupIM: A Mutual Information Maximizing Framework for Neural Group Recommendation. SIGIR 2020 【组推荐的互信息最大化框架】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Group-Aware Long- and Short-Term Graph Representation Learning for Sequential Group Recommendation. SIGIR 2020 【序列群推荐的群体感知长短期图表示学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ensuring Fairness in Group Recommendations by Rank-Sensitive Balancing of Relevance. RecSys 2020 【通过排名敏感的相关性平衡确保群组推荐的公平性】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Double-Scale Self-Supervised Hypergraph Learning for Group Recommendation. CIKM 2021【用于群组推荐的自监督超图学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DeepGroup: Group Recommendation with Implicit Feedback. CIKM 2021【short paper，隐式反馈的群组推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multi-View Intent Disentangle Graph Networks for Bundle Recommendation. AAAI 2022 【多意图捆绑推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Thinking inside The Box: Learning Hypercube Representations for Group Recommendation. SIGIR 2022 【超立方体表示用于组推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enumerating Fair Packages for Group Recommendations. WSDM 2022【枚举组推荐的公平包】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GBERT: Pre-training User representations for Ephemeral Group Recommendation. CIKM 2022 【为临时组推荐预训练用户表示】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;BRUCE – Bundle Recommendation Using Contextualized item Embeddings. RecSys 2022 【Transformer 建模上下文进行捆绑推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bundle MCR: Towards Conversational Bundle Recommendation. RecSys 2022 【马尔可夫决策进行对话式捆绑推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;multi-taskmulti-behaviorcross-domain-recommendations&#34;&gt;Multi-task/Multi-behavior/Cross-domain Recommendations
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Transfer Learning via Contextual Invariants for One-to-Many Cross-Domain Recommendation. SIGIR 2020 【一对多跨域推荐迁移学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CATN: Cross-Domain Recommendation for Cold-Start Users via Aspect Transfer Network. SIGIR 2020 【为冷启动用户提供跨域建议】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multi-behavior Recommendation with Graph Convolution Networks. SIGIR 2020 【基于图卷积网络的多行为推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Parameter-Efficient Transfer from Sequential Behaviors for User Modeling and Recommendation. SIGIR 2020 【用户建模和推荐中序列行为的参数有效转换】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Web-to-Voice Transfer for Product Recommendation on Voice. SIGIR 2020 【语音产品推荐的网络语音转换】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Incorporating User Micro-behaviors and Item Knowledge into Multi-task Learning for Session-based Recommendation. SIGIR 2020 【将用户行为和物品知识融入基于会话的推荐多任务学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jointly Learning to Recommend and Advertise. KDD 2020 【推荐和广告的结合】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Progressive Layered Extraction (PLE) A Novel Multi-Task Learning (MTL) Model for Personalized Recommendations. RecSys 2020 【个性化推荐的多任务学习模型】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Whole-Chain Recommendations. CIKM 2020 【全链推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Personalized Approximate Pareto-Efficient Recommendation. WWW 2021 【近似帕累托效率的推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Federated Collaborative Transfer for Cross-Domain Recommendation. SIGIR 2021 【跨域推荐的联邦协作转换】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning Domain Semantics and Cross-Domain Correlations for Paper Recommendation. SIGIR 2021 【领域语义和跨领域关联用于论文推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Graph Meta Network for Multi-Behavior Recommendation with Interaction Heterogeneity and Diversity. SIGIR 2021 【具有交互异质性和多样性的多行为推荐图元网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multi-task Learning for Bias-Free Joint CTR Prediction and Market Price Modeling in Online Advertising. CIKM 2021【在线广告无偏差联合CTR预估和市场价格建模的多任务学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cross-Market Product Recommendation. CIKM 2021【跨市场产品推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Expanding Relationship for Cross Domain Recommendation. CIKM 2021【扩展跨领域推荐的关系】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning Representations of Inactive Users: A Cross Domain Approach with Graph Neural Networks. CIKM 2021【short paper，跨领域方法结合图神经网络用于学习非活跃用户表示】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Low-dimensional Alignment for Cross-Domain Recommendation. CIKM 2021【short paper，跨领域推荐的低维对齐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multi-Sparse-Domain Collaborative Recommendation via Enhanced Comprehensive Aspect Preference Learning. WSDM 2022【通过增强的综合方面偏好学习的多稀疏域协作推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Leaving No One Behind: A Multi-Scenario Multi-Task Meta Learning Approach for Advertiser Modeling. WSDM 2022【一种用于广告商建模的多场景多任务元学习方法】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RecGURU: Adversarial Learning of Generalized User Representations for Cross-Domain Recommendation. WSDM 2022【用于跨域推荐的广义用户表示的对抗性学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Personalized Transfer of User Preferences for Cross-domain Recommendation. WSDM 2022【跨域推荐用户偏好的个性化传输】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adaptive Domain Interest Network for Multi-domain Recommendation. CIKM 2022 【多域推荐的自适应域兴趣网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multi-Scale User Behavior Network for Entire Space Multi-Task Learning. CIKM 2022 【全空间多任务学习的多尺度用户行为网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Gromov-Wasserstein Guided Representation Learning for Cross-Domain Recommendation. CIKM 2022 【跨域推荐表示学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Contrastive Cross-Domain Sequential Recommendation. CIKM 2022 【对比跨域序列推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cross-domain Recommendation via Adversarial Adaptation. CIKM 2022【通过对抗性适应进行跨域推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dual-Task Learning for Multi-Behavior Sequential Recommendation. CIKM 2022 【多行为序列推荐的双任务学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FedCDR: Federated Cross-Domain Recommendation for Privacy-Preserving Rating Prediction. CIKM 2022 【FedCDR：用于隐私保护评级预测的联合跨域推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Leveraging Multiple Types of Domain Knowledge for Safe and Effective Drug Recommendation. CIKM 2022 【利用多种领域知识进行安全有效的药物推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multi-Faceted Hierarchical Multi-Task Learning for Recommender Systems. CIKM 2022 【推荐系统的多方面分层多任务学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Review-Based Domain Disentanglement without Duplicate Users or Contexts for Cross-Domain Recommendation. CIKM 2022 【没有重复用户或上下文的基于审查的域解耦，用于跨域推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Scenario-Adaptive and Self-Supervised Model for Multi-Scenario Personalized Recommendation. CIKM 2022 【多场景个性化推荐的场景自适应自监督模型】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cross-Task Knowledge Distillation in Multi-Task Recommendation. AAAI 2022 【跨任务知识蒸馏】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Towards Universal Sequence Representation Learning for Recommender Systems. KDD 2022  【引入物品描述文本】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Contrastive Cross-domain Recommendation in Matching. KDD 2022 【对比学习捕获用户兴趣】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multi-Behavior Hypergraph-Enhanced Transformer for Sequential Recommendation. KDD 2022 【多行为超图增强】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multi-Task Fusion via Reinforcement Learning for Long-Term User Satisfaction in Recommender Systems. KDD 2022 【Batch RL建模MTF】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CausalInt: Causal Inspired Intervention for Multi-Scenario Recommendation. KDD 2022 【多场景推荐统一框架】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Modeling the Sequential Dependence among Audience Multi-step Conversions with Multi-task Learning in Targeted Display Advertising. KDD 2021 【序列依赖多任务学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning to Expand Audience via Meta Hybrid Experts and Critics for Recommendation and Advertising. KDD 2021 【混合场景多任务学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adversarial Feature Translation for Multi-domain Recommendation. KDD 2021 【对抗特征迁移多任务学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Debiasing Learning based Cross-domain Recommendation. KDD 2021 【跨域推荐纠偏】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Co-training Disentangled Domain Adaptation Network for Leveraging Popularity Bias in Recommenders. SIGIR 2022 【训练解耦的域适应网络来利用流行度偏差】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DisenCDR: Learning Disentangled Representations for Cross-Domain Recommendation. SIGIR 2022 【解耦表示】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Doubly-Adaptive Reinforcement Learning for Cross-Domain Interactive Recommendation. SIGIR 2022 【双重适应的强化学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Exploiting Variational Domain-Invariant User Embedding for Partially Overlapped Cross Domain Recommendation. SIGIR 2022 【域不变的用户嵌入】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multi-Behavior Sequential Transformer Recommender. SIGIR 2022 【多行为序列化Transformer】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Towards Source-Aligned Variational Models for Cross-Domain Recommendation. RecSys 2021 【变分自动编码器用于跨域推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An Analysis Of Entire Space Multi-Task Models For Post-Click Conversion Prediction. RecSys 2021 【LBR，点击后转换率预测的全空间多任务模型分析】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MARRS: A Framework for multi-objective risk-aware route recommendation using Multitask-Transformer. RecSys 2022 【利用多任务 Transformer 进行多目标的路线推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;M2TRec: Metadata-aware Multi-task Transformer for Large-scale and Cold-start free Session-based Recommendations. RecSys 2022【LBR，基于元数据和多任务 Transformer 的冷启动会话推荐系统】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MARRS: A Framework for multi-objective risk-aware route recommendation using Multitask-Transformer. RecSys 2022 【利用多任务 Transformer 进行多目标的路线推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Collaborative Filtering with Attribution Alignment for Review-based Non-overlapped Cross Domain Recommendation. WWW 2022 【通过属性对齐实现基于评论的跨域推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Differential Private Knowledge Transfer for Privacy-Preserving Cross-Domain Recommendation. WWW 2022 【通过可微隐私知识迁移实现源域隐私保护的跨域推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MetaBalance: Improving Multi-Task Recommendations via Adapting Gradient Magnitudes of Auxiliary Tasks. WWW 2022 【动态保持辅助任务和目标任务的梯度在同一个量级】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Contrastive Sharing Model for Multi-Task Recommendation. WWW 2022 【使用对比掩码来解决多任务中的参数冲突问题】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Self-supervised Graph Neural Networks for Multi-behavior Recommendation. IJCAI 2022 【GNN + 多行为推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Re4: Learning to Re-contrast, Re-attend, Re-construct for Multi-interest Recommendation. WWW 2022 【通过re-contrast,re-attend,re-construct来增强解耦用户多兴趣表示】&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;multimodal-recommendation&#34;&gt;Multimodal Recommendation
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Multi-modal Knowledge Graphs for Recommender Systems. CIKM 2020 【推荐系统的多模态知识图】&lt;/li&gt;
&lt;li&gt;Pre-training Graph Transformer with Multimodal Side Information for Recommendation. ACM MM 2021 【多模态侧信息的预训练图 Transformer 用于推荐】&lt;/li&gt;
&lt;li&gt;Review-Aware Neural Recommendation with Cross-Modality Mutual Attention. CIKM 2021【short paper，文本+RS+跨模态】&lt;/li&gt;
&lt;li&gt;Click-Through Rate Prediction with Multi-Modal Hypergraphs. CIKM 2021【使用多模态超图的点击率预测】&lt;/li&gt;
&lt;li&gt;Multimodal Graph Meta Contrastive Learning. CIKM 2021【short paper，多模态元图对比学习】&lt;/li&gt;
&lt;li&gt;AutoMARS: Searching to Compress Multi-Modality Recommendation Systems. CIKM 2022 【搜索压缩多模态推荐系统】&lt;/li&gt;
&lt;li&gt;Multimodal Meta-Learning for Cold-Start Sequential Recommendation. CIKM 2022 【冷启动序列推荐的多模态元学习】&lt;/li&gt;
&lt;li&gt;MARIO: Modality-Aware Attention and Modality-Preserving Decoders for Multimedia Recommendation. CIKM 2022 【用于多媒体推荐的模态感知注意力和模态保留解码器】&lt;/li&gt;
&lt;li&gt;ItemSage: Learning Product Embeddings for Shopping Recommendations at Pinterest. KDD 2022 【多模态商品推荐】&lt;/li&gt;
&lt;li&gt;SEMI: A Sequential Multi-Modal Information Transfer Network for E-Commerce Micro-Video Recommendations. KDD 2021 【基于序列多模态信息传输网络的电商微视频推荐系统】&lt;/li&gt;
&lt;li&gt;MM-Rec: Visiolinguistic Model Empowered Multimodal News Recommendation. SIGIR 2022 【short paper，视觉语言学增强的多模态新闻推荐】&lt;/li&gt;
&lt;li&gt;Semi-Supervised Visual Representation Learning for Fashion Compatibility. RecSys 2021 【搭配时装预测的半监督视觉表征学习】&lt;/li&gt;
&lt;li&gt;Tops, Bottoms, and Shoes: Building Capsule Wardrobes via Cross-Attention Tensor Network. RecSys 2021 【通过视觉的交叉注意力张力网络提供服饰搭配推荐】&lt;/li&gt;
&lt;li&gt;Multi-Modal Dialog State Tracking for Interactive Fashion Recommendation. RecSys 2022 【交互式时装推荐的多模态注意网络】&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;other-tasks&#34;&gt;Other Tasks
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Octopus: Comprehensive and Elastic User Representation for the Generation of Recommendation Candidates. SIGIR 2020 【生成推荐候选的综合弹性用户表示】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How to Retrain a Recommender System? SIGIR 2020 【重训练推荐系统】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning Personalized Risk Preferences for Recommendation. SIGIR 2020 【个性化风险偏好】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Distributed Equivalent Substitution Training for Large-Scale Recommender Systems. SIGIR 2020 【分布式等效替换训练】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Beyond User Embedding Matrix: Learning to Hash for Modeling Large-Scale Users in Recommendation. SIGIR 2020 【推荐中为大规模用户哈希建模】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Improving Recommendation Quality in Google Drive. KDD 2020 【提升谷歌云盘的推荐质量】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Goal-driven Command Recommendations for Analysts. RecSys 2020 【针对分析员的目标驱动的命令推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MultiRec: A Multi-Relational Approach for Unique Item Recommendation in Auction Systems. RecSys 2020 【拍卖系统中唯一物品推荐的多关系方法】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PURS: Personalized Unexpected Recommender System for Improving User Satisfaction. RecSys 2020 【提高用户满意度的个性化意外推荐系统】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RecSeats: A Hybrid Convolutional Neural Network Choice Model for Seat Recommendations at Reserved Seating Venues. RecSys 2020 【预约座位推荐的混合卷积神经网络模型】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Live Multi-Streaming and Donation Recommendations via Coupled Donation-Response Tensor Factorization. CIKM 2020 【实时多流媒体和捐赠推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning to Recommend from Sparse Data via Generative User Feedback. AAAI 2021 【通过生成的用户反馈从稀疏数据中进行推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Real-time Relevant Recommendation Suggestion. WSDM 2021 【实时的相关推荐建议】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FINN: Feedback Interactive Neural Network for Intent Recommendation. WWW 2021 【用于意向推荐的反馈交互式神经网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Drug Package Recommendation via Interaction-aware Graph Induction. WWW 2021 【通过交互感知图归纳推荐药品包装】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Large-scale Comb-K Recommendation. WWW 2021 【大规模 Comb-K 推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Variation Control and Evaluation for Generative Slate Recommendations. WWW 2021 【生成性板岩推荐的变化控制和评估】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;UGRec: Modeling Directed and Undirected Relations for Recommendation. SIGIR 2021 【为推荐建立有向和无向关系模型】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning Recommender Systems with Implicit Feedback via Soft Target Enhancement. SIGIR 2021 【通过软目标增强学习具有隐式反馈的推荐系统】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PreSizE: Predicting Size in E-Commerce using Transformers. SIGIR 2021 【利用 Transformer 预测电子商务的规模】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Path-based Deep Network for Candidate Item Matching in Recommenders. SIGIR 2021 【基于路径的候选物品匹配】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning An End-to-End Structure for Retrieval in Large-Scale Recommendations. CIKM 2021【在大规模推荐中学习一个端到端的结构用于检索】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;USER: A Unified Information Search and Recommendation Model based on Integrated Behavior Sequence. CIKM 2021【基于集成行为序列的统一搜索与推荐模型】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multi-hop Reading on Memory Neural Network with Selective Coverage for Medication Recommendation. CIKM 2021【药物推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Show Me the Whole World: Towards Entire Item Space Exploration for Interactive Personalized Recommendations. WSDM 2022【面向交互式个性化推荐的整个商品空间探索】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adapting Triplet Importance of Implicit Feedback for Personalized Recommendation. CIKM 2022 【在个性化推荐中调整隐式反馈的三元组重要性】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GRP: A Gumbel-based Rating Prediction Framework for Imbalanced Recommendation. CIKM 2022 【基于 Gumbel 的不平衡推荐评级预测框架】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rank List Sensitivity of Recommender Systems to Interaction Perturbations. CIKM 2022 【推荐系统对交互扰动的排名列表敏感性】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CROLoss: Towards a Customizable Loss for Retrieval Models in Recommender Systems. CIKM 2022 【推荐系统中检索模型的可定制损失】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Towards Principled User-side Recommender Systems. CIKM 2022 【迈向有原则的用户侧推荐系统】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;UDM: A Unified Deep Matching Framework in Recommender System. CIKM 2022 【推荐系统中的统一深度匹配框架】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;User Recommendation in Social Metaverse with VR. CIKM 2022 【VR 的用户推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AdaFS: Adaptive Feature Selection in Deep Recommender System. KDD 2022 【自适应特征选择】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CAPTOR: A Crowd-Aware Pre-Travel Recommender System for Out-of-Town Users. SIGIR 2022 【为乡村用户提供的旅游推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PERD: Personalized Emoji Recommendation with Dynamic User Preference. SIGIR 2022 【short paper，个性化表情推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Item Similarity Mining for Multi-Market Recommendation. SIGIR 2022 【short paper，多市场推荐中的商品相似度挖掘】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Content Recommendation Policy for Gaining Subscribers. SIGIR 2022 【short paper，为提升订阅者的内容推荐策略】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Accordion: A Trainable Simulator for Long-Term Interactive Systems. RecSys 2021 【长期交互系统的可训练模拟器】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Information Interactions in Outcome Prediction: Quantification and Interpretation using Stochastic Block Models. RecSys 2021 【结果预测中的信息交互】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Local Factor Models for Large-Scale Inductive Recommendation. RecSys 2021 【归纳推荐的局部因子模型】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reverse Maximum Inner Product Search: How to efficiently find users who would like to buy my item?. RecSys 2021 【反向最大内部产品搜索】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;“Serving Each User”: Supporting Different Eating Goals Through a Multi-List Recommender Interface. RecSys 2021 【通过多列表推荐界面个性化食品推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An Interpretable Recommendation Model for Gerontological Care. RecSys 2021【LBR，老年护理的推荐研究】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Automatic Collection Creation and Recommendation. RecSys 2021【LBR，自动创建和推荐收藏夹】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Estimating and Penalizing Preference Shifts in Recommender Systems. RecSys 2021【LBR，推荐系统中偏好转移的分析】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Global-Local Item Embedding for Temporal Set Prediction. RecSys 2021【LBR，时间集预测任务】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Modeling Two-Way Selection Preference for Person-Job Fit. RecSys 2022 【建模双向选择偏好的人岗匹配模型】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Towards Psychologically Grounded Dynamic Preference Models. RecSys 2022 【基于心理学的动态偏好建模】&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;topic&#34;&gt;Topic
&lt;/h2&gt;&lt;h3 id=&#34;debias-in-recommender-system&#34;&gt;Debias in Recommender System
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Measuring and Mitigating Item Under-Recommendation Bias in Personalized Ranking Systems. SIGIR 2020 【个性化排名系统中衡量和减轻推荐偏差】&lt;/li&gt;
&lt;li&gt;Attribute-based Propensity for Unbiased Learning in Recommender Systems Algorithm and Case Studies. KDD 2020 【基于属性的无偏学习倾向】&lt;/li&gt;
&lt;li&gt;Counterfactual Evaluation of Slate Recommendations with Sequential Reward Interactions. KDD 2020 【结合序列奖励交互的反事实评估】&lt;/li&gt;
&lt;li&gt;Debiasing Item-to-Item Recommendations With Small Annotated Datasets. RecSys 2020 【用带注释的小数据集对物-物推荐去偏】&lt;/li&gt;
&lt;li&gt;Keeping Dataset Biases out of the Simulation : A Debiased Simulator for Reinforcement Learning based Recommender Systems. RecSys 2020 【基于强化学习的去偏模拟器】&lt;/li&gt;
&lt;li&gt;Unbiased Ad Click Prediction for Position-aware Advertising Systems. RecSys 2020 【无偏的广告点击预测】&lt;/li&gt;
&lt;li&gt;Unbiased Learning for the Causal Effect of Recommendation. RecSys 2020 【推荐因果效应的无偏学习】&lt;/li&gt;
&lt;li&gt;E-commerce Recommendation with Weighted Expected Utility. CIKM 2020 【考虑加权预期效用的电子商务推荐】&lt;/li&gt;
&lt;li&gt;Popularity-Opportunity Bias in Collaborative Filtering. WSDM 2021 【协同过滤中的流行机会偏差】&lt;/li&gt;
&lt;li&gt;Combating Selection Biases in Recommender Systems with a Few Unbiased Ratings. WSDM 2021 【无偏评级对抗推荐的选择偏差】&lt;/li&gt;
&lt;li&gt;Leave No User Behind Towards Improving the Utility of Recommender Systems for Non-mainstream Users. WSDM 2021 【关注小众的用户】&lt;/li&gt;
&lt;li&gt;Non-Clicks Mean Irrelevant Propensity Ratio Scoring As a Correction. WSDM 2021 【不相关的倾向得分作为推荐结果的修正】&lt;/li&gt;
&lt;li&gt;Diverse User Preference Elicitation with Multi-Armed Bandits. WSDM 2021 【多臂老虎机的多种用户偏好启发】&lt;/li&gt;
&lt;li&gt;Unbiased Learning to Rank in Feeds Recommendation. WSDM 2021 【Feeds 推荐中的无偏学习】&lt;/li&gt;
&lt;li&gt;Debiasing Career Recommendations with Neural Fair Collaborative Filtering. WWW 2021 【职业推荐的公平性去偏】&lt;/li&gt;
&lt;li&gt;AutoDebias: Learning to Debias for Recommendation. SIGIR 2021 【推荐的自动去偏】&lt;/li&gt;
&lt;li&gt;Mitigating Sentiment Bias for Recommender Systems. SIGIR 2021 【减轻推荐系统的情感偏见】&lt;/li&gt;
&lt;li&gt;Causal Intervention for Leveraging Popularity Bias in Recommendation. SIGIR 2021 【在推荐中利用流行偏见的因果干预】&lt;/li&gt;
&lt;li&gt;Enhanced Doubly Robust Learning for Debiasing Post-Click Conversion Rate Estimation. SIGIR 2021 【点击后转换率估计】&lt;/li&gt;
&lt;li&gt;Cross-Positional Attention for Debiasing Clicks. WWW 2021 【跨位置的注意力机制用于点击去偏】&lt;/li&gt;
&lt;li&gt;Popcorn: Human-in-the-loop Popularity Debiasing in Conversational Recommender Systems. CIKM 2021【采用人在回路方式进行对话推荐系统的流行度去偏】&lt;/li&gt;
&lt;li&gt;Unbiased Filtering of Accidental Clicks in Verizon Media Native Advertising. CIKM 2021【applied paper，广告意外点击的无偏过滤】&lt;/li&gt;
&lt;li&gt;CauSeR: Causal Session-based Recommendations for Handling Popularity Bias. CIKM 2021【short paper，用于流行度去偏的因果关系序列推荐】&lt;/li&gt;
&lt;li&gt;It Is Different When Items Are Older: Debiasing Recommendations When Selection Bias and User Preferences are Dynamic. WSDM 2022【选择偏差和偏好偏差动态变化时的纠偏推荐系统】&lt;/li&gt;
&lt;li&gt;Fighting Mainstream Bias in Recommender Systems via Local Fine Tuning. WSDM 2022【通过局部微调对抗推荐系统中的主流偏见】&lt;/li&gt;
&lt;li&gt;Towards Unbiased and Robust Causal Ranking for Recommender Systems. WSDM 2022【推荐系统的无偏和稳健因果排名】&lt;/li&gt;
&lt;li&gt;Quantifying and Mitigating Popularity Bias in Conversational Recommender Systems. CIKM 2022 【量化和减轻会话推荐系统中的流行度偏差】&lt;/li&gt;
&lt;li&gt;Learning Unbiased User Behaviors Estimation with Hierarchical Recurrent Model on the Entire Space. CIKM 2022 【分层递归模型学习无偏用户行为估计】&lt;/li&gt;
&lt;li&gt;Representation Matters When Learning From Biased Feedback in Recommendation. CIKM 2022 【从推荐中的有偏反馈中学习时，表征很重要】&lt;/li&gt;
&lt;li&gt;Invariant Preference Learning for General Debiasing in Recommendation. KDD 2022 【不变偏好解耦】&lt;/li&gt;
&lt;li&gt;Counteracting User Attention Bias in Music Streaming Recommendation via Reward Modification. KDD 2022 【用户注意力对抗】&lt;/li&gt;
&lt;li&gt;Deconfounding Duration Bias in Watch-time Prediction for Video Recommendation. KDD 2022 【视频时长去偏】&lt;/li&gt;
&lt;li&gt;Debiasing the Cloze Task in Sequential Recommendation with Bidirectional Transformers. KDD 2022 【序列完形填空去偏】&lt;/li&gt;
&lt;li&gt;Debiasing Learning for Membership Inference Attacks Against Recommender Systems. KDD 2022 【VAE 去偏】&lt;/li&gt;
&lt;li&gt;Popularity Bias in Dynamic Recommendation. KDD 2021 【动态推荐系统的热度纠偏】&lt;/li&gt;
&lt;li&gt;Debiasing Learning based Cross-domain Recommendation. KDD 2021 【跨域推荐纠偏】&lt;/li&gt;
&lt;li&gt;Model-Agnostic Counterfactual Reasoning for Eliminating Popularity Bias in Recommender System. KDD 2021 【不可知反事实推理模型消除推荐系统的流行偏差】&lt;/li&gt;
&lt;li&gt;Interpolative Distillation for Unifying Biased and Debiased Recommendation&lt;/li&gt;
&lt;li&gt;Co-training Disentangled Domain Adaptation Network for Leveraging Popularity Bias in Recommenders. SIGIR 2022 【训练解耦的域适应网络来利用流行度偏差】&lt;/li&gt;
&lt;li&gt;Bilateral Self-unbiased Recommender Learning from Biased Implicit Feedback. SIGIR 2022 【双边去偏】&lt;/li&gt;
&lt;li&gt;Mitigating Consumer Biases in Recommendations with Adversarial Training. SIGIR 2022 【short paper，对抗训练去偏】&lt;/li&gt;
&lt;li&gt;Neutralizing Popularity Bias in Recommendation Models. SIGIR 2022 【short paper，中和流行度偏差】&lt;/li&gt;
&lt;li&gt;DeSCoVeR: Debiased Semantic Context Prior for Venue Recommendation. SIGIR 2022 【short paper，在场所推荐中去除语义上下文先验】&lt;/li&gt;
&lt;li&gt;An Audit of Misinformation Filter Bubbles on YouTube: Bubble Bursting and Recent Behavior Changes. RecSys 2021 【虚假信息过滤气泡的审计：走出信息茧房并改变近期行为】&lt;/li&gt;
&lt;li&gt;Debiased Explainable Pairwise Ranking from Implicit Feedback. RecSys 2021【去偏的可解释贝叶斯个性化排名】&lt;/li&gt;
&lt;li&gt;Mitigating Confounding Bias in Recommendation via Information Bottleneck. RecSys 2021【信息瓶颈缓解混杂偏倚】&lt;/li&gt;
&lt;li&gt;User Bias in Beyond-Accuracy Measurement of Recommendation Algorithms. RecSys 2021【超精度测量中的算法用户偏差】&lt;/li&gt;
&lt;li&gt;Analyzing Item Popularity Bias of Music Recommender Systems: Are Different Genders Equally Affected?. RecSys 2021 【LBR，音乐推荐物品流行度偏差的性别分析】&lt;/li&gt;
&lt;li&gt;The Idiosyncratic Effects of Adversarial Training on Bias in Personalized Recommendation Learning. RecSys 2021 【LBR，对抗训练对流行度偏差的影响研究】&lt;/li&gt;
&lt;li&gt;Transfer Learning in Collaborative Recommendation for Bias Reduction. RecSys 2021 【LBR，减少偏差的迁移学习】&lt;/li&gt;
&lt;li&gt;Countering Popularity Bias by Regularizing Score Differences. RecSys 2022 【利用正则化分数差异减少流行度偏差】&lt;/li&gt;
&lt;li&gt;Off-Policy Actor Critic for Recommender Systems. RecSys 2022 【离线演员-评论家强化学习算法缓解分布偏差问题】&lt;/li&gt;
&lt;li&gt;Exploring the Impact of Temporal Bias in Point-of-Interest Recommendation. RecSys 2022 【LBR，时间偏差对兴趣点推荐的影响】&lt;/li&gt;
&lt;li&gt;Trading Hard Negatives and True Negatives: A Debiased Contrastive Collaborative Filtering Approach. IJCAI 2022 【探索正确的负样本】&lt;/li&gt;
&lt;li&gt;Debiased, Longitudinal and Coordinated Drug Recommendation through Multi-Visit Clinic Records. NIPS 2022 【去偏药物推荐】&lt;/li&gt;
&lt;li&gt;CBR: Context Bias aware Recommendation for Debiasing User Modeling and Click Prediction. WWW 2022 【去除由丰富交互造成的上下文偏差】&lt;/li&gt;
&lt;li&gt;UKD: Debiasing Conversion Rate Estimation via Uncertainty-regularized Knowledge Distillation. WWW 2022 【基于不确定性正则化和知识提取的转化率估计去偏】&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;fairness-in-recommender-system&#34;&gt;Fairness in Recommender System
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Fairness-Aware Explainable Recommendation over Knowledge Graphs. SIGIR 2020 【知识图谱上公平性感知的可解释推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ensuring Fairness in Group Recommendations by Rank-Sensitive Balancing of Relevance. RecSys 2020 【通过排名敏感的相关性平衡确保群组推荐的公平性】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fairness-Aware News Recommendation with Decomposed Adversarial Learning. AAAI 2021 【基于分解对抗学习的公平新闻推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Practical Compositional Fairness Understanding Fairness in Multi-Component Recommender Systems. WSDM 2021 【多组件推荐中的公平性】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Towards Long-term Fairness in Recommendation. WSDM 2021 【推荐中的长期公平性】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning Fair Representations for Recommendation: A Graph-based Perspective. WWW 2021 【图视角理解推荐中的公平性】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;User-oriented Group Fairness In Recommender Systems. WWW 2021 【推荐系统中用户导向的群体公平性】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Personalized Counterfactual Fairness in Recommendation. SIGIR 2021 【推荐中个性化的反事实公平性】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TFROM: A Two-sided Fairness-Aware Recommendation Model for Both Customers and Providers. SIGIR 2021 【针对顾客和供应商双方的公平性感知推荐模型】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fairness among New Items in Cold Start Recommender Systems. SIGIR 2021 【冷启动推荐系统中新物品的公平性】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SAR-Net: A Scenario-Aware Ranking Network for Personalized Fair Recommendation in Hundreds of Travel Scenarios. CIKM 2021【applied paper，用于个性化公平推荐的场景感知排名网络】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enumerating Fair Packages for Group Recommendations. WSDM 2022【枚举组推荐的公平包】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Toward Pareto Efficient Fairness-Utility Trade-off in Recommendation through Reinforcement Learning. WSDM 2022【通过强化学习在推荐中实现帕累托高效的公平-效用权衡】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make Fairness More Fair: Fair Item Utility Estimation and Exposure Re-Distribution. KDD 2022 【物品公平效益】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Comprehensive Fair Meta-learned Recommender System. KDD 2022 【元学习公平性框架】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Online Certification of Preference-Based Fairness for Personalized Recommender Systems. AAAI 2022 【强化学习探索】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Joint Multisided Exposure Fairness for Recommendation. SIGIR 2022 【综合考虑多边的曝光公平性】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ProFairRec: Provider Fairness-aware News Recommendation. SIGIR 2022 【商家公平的新闻推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CPFair: Personalized Consumer and Producer Fairness Re-ranking for Recommender Systems. SIGIR 2022 【用户和商家公平的重排序】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Explainable Fairness for Feature-aware Recommender Systems. SIGIR 2022 【考虑特征的推荐系统中的可解释公平】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Selective Fairness in Recommendation via Prompts. SIGIR 2022 【short paper，通过提示保证可选的公平性】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Regulating Provider Groups Exposure in Recommendations. SIGIR 2022 【short paper，调整商家组曝光】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adversary or Friend? An adversarial Approach to Improving Recommender Systems. RecSys 2022 【对抗式方法促进推荐系统公平性】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fairness-aware Federated Matrix Factorization. RecSys 2022 【结合差异隐私技术的公平感知的联邦矩阵分解】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Toward Fair Federated Recommendation Learning: Characterizing the Inter-Dependence of System and Data Heterogeneity. RecSys 2022 【推荐中公平的联邦学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Link Recommendations for PageRank Fairness. WWW 2022 【PageRank算法链接预测中的公平性】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FairGAN: GANs-based Fairness-aware Learning for Recommendations with Implicit Feedback. WWW 2022 【将物品曝光公平性问题映射为隐式反馈数据中缺乏负反馈的问题】&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;attack-in-recommender-system&#34;&gt;Attack in Recommender System
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Revisiting Adversarially Learned Injection Attacks Against Recommender Systems. RecSys 2020 【推荐系统对抗学习的注入攻击】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Attacking Recommender Systems with Augmented User Profiles. CIKM 2020 【推荐中对增强用户简介的攻击】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Black-Box Attack Model for Visually-Aware Recommenders. WSDM 2021 【视觉感知推荐的黑盒攻击模型】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Denoising Implicit Feedback for Recommendation. WSDM 2021 【推荐隐反馈的去噪】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adversarial Item Promotion: Vulnerabilities at the Core of Top-N Recommenders that Use Images to Address Cold Start. WWW 2021 【使用图像解决冷启动推荐的漏洞】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Graph Embedding for Recommendation against Attribute Inference Attacks. WWW 2021 【针对属性推理攻击的图表示】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fight Fire with Fire: Towards Robust Recommender Systems via Adversarial Poisoning Training. SIGIR 2021 【对抗性 poisoning 训练】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PipAttack: Poisoning Federated Recommender Systems for Manipulating Item Promotion. WSDM 2022【用于操纵项目促销的中毒联合推荐系统】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FedAttack: Effective and Covert Poisoning Attack on Federated Recommendation via Hard Sampling. KDD 2022 【联邦推荐的对抗攻击】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Knowledge-enhanced Black-box Attacks for Recommendations. KDD 2022 【知识图谱增强】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Debiasing Learning for Membership Inference Attacks Against Recommender Systems. KDD 2022 【VAE去偏】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Data Poisoning Attack against Recommender System Using Incomplete and Perturbed Data. KDD 2021 【不完整及扰动数据攻击推荐系统】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Initialization Matters: Regularizing Manifold-informed Initialization for Neural Recommendation Systems. KDD 2021 【基于正则化信息的流形神经网络推荐系统】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Triple Adversarial Learning for Influence based Poisoning Attack in Recommender Systems. KDD 2021 【三元对抗学习在推荐系统中毒攻击】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Black-Box Attacks on Sequential Recommenders via Data-Free Model Extraction. RecSys 2021 【序列推荐的黑盒攻击】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Defending Substitution-Based Profile Pollution Attacks on Sequential Recommenders. RecSys 2022 【序列推荐中基于替代的对抗性攻击算法】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Revisiting Injective Attacks on Recommender Systems. NIPS 2022 【重新审视对推荐系统的注入式攻击】&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;explanation-in-recommender-system&#34;&gt;Explanation in Recommender System
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Try This Instead: Personalized and Interpretable Substitute Recommendation. KDD 2020 【个性化和可解释的替代推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CAFE: Coarse-to-Fine Neural Symbolic Reasoning for Explainable Recommendation. CIKM 2020 【用于可解释推荐的符号推理】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Explainable Recommender Systems via Resolving Learning Representations. CIKM 2020 【解决表示学习进行可解释推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Generate Neural Template Explanations for Recommendation. CIKM 2020 【生成神经模板解释以供推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Explainable Recommendation with Comparative Constraints on Product Aspects. WSDM 2021 【产品方面有比较约束的可解释推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Explanation as a Defense of Recommendation. WSDM 2021 【解释作为推荐的防御】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;EX$^3$: Explainable Product Set Recommendation for Comparison Shopping. WWW 2021 【可解释的产品集推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning from User Feedback on Explanations to Improve Recommender Models. WWW 2021 【从用户反馈中学习解释】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cost-Effective and Interpretable Job Skill Recommendation with Deep Reinforcement Learning. WWW 2021 【结合强化学习的可解释工作技能推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On Interpretation and Measurement of Soft Attributes for Recommendation. SIGIR 2021 【推荐软属性的解释和衡量】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ReXPlug: Explainable Recommendation using Plug-and-Play Language Model. SIGIR 2021 【即插即用语言模型的可解释推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;User-Centric Path Reasoning towards Explainable Recommendation. SIGIR 2021 【以用户为中心的路径推理进行可解释推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Interactive Path Reasoning on Graph for Conversational Recommendation. KDD 2020 【对话推荐中基于图路径的解释】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Leveraging Demonstrations for Reinforcement Recommendation Reasoning over Knowledge Graphs. SIGIR 2020 【利用演示增强知识图上的推荐推理】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fairness-Aware Explainable Recommendation over Knowledge Graphs. SIGIR 2020 【知识图谱上公平性感知的可解释推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Temporal Meta-path Guided Explainable Recommendation. WSDM 2021 【时态元路径引导的可解释推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Neural Collaborative Reasoning. WWW 2021 【深度协同过滤的解释】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Counterfactual Explainable Recommendation. CIKM 2021【反事实可解释推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On the Diversity and Explainability of Recommender Systems: A Practical Framework for Enterprise App Recommendation. CIKM 2021【applied paper，推荐系统的多样性和可解释性】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You Are What and Where You Are: Graph Enhanced Attention Network for Explainable POI Recommendation. CIKM 2021【applied paper，Attention 图神经网络用于可解释推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;XPL-CF: Explainable Embeddings for Feature-based Collaborative Filtering. CIKM 2021【short paper，可解释 Embedding 用于基于特征的协同过滤】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reinforcement Learning over Sentiment-Augmented Knowledge Graphs towards Accurate and Explainable Recommendation. WSDM 2022【对情感增强知识图的强化学习以实现准确和可解释的推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Explanation Guided Contrastive Learning for Sequential Recommendation. CIKM 2022 【序列推荐的解释引导对比学习】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PARSRec: Explainable Personalized Attention-fused Recurrent Sequential Recommendation Using Session Partial Actions. KDD 2022 【用户个性化区分】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Post Processing Recommender Systems with Knowledge Graphs for Recency, Popularity, and Diversity of Explanations. SIGIR 2022 【使用知识图谱为推荐生成崭新的、多样的解释】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PEVAE: A hierarchical VAE for personalized explainable recommendation.. SIGIR 2022 【利用层次化VAE进行个性化可解释推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Explainable Session-based Recommendation with Meta-Path Guided Instances and Self-Attention Mechanism. SIGIR 2022 【short paper， 基于元路径指导和自注意力机制的可解释会话推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Debiased Explainable Pairwise Ranking from Implicit Feedback. RecSys 2021【去偏的可解释贝叶斯个性化排名】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;EX3: Explainable Attribute-aware Item-set Recommendations. RecSys 2021【基于物品集属性的可解释推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do Users Appreciate Explanations of Recommendations? An Analysis in the Movie Domain. RecSys 2021【LBR，电影推荐系统中用户对解释的满意度分析】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ProtoMF: Prototype-based Matrix Factorization for Effective and Explainable Recommendations. RecSys 2022【基于原型的可解释协同过滤算法】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Graph-based Extractive Explainer for Recommendations. WWW 2022 【使用图注意力网络来实现可解释推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ExpScore: Learning Metrics for Recommendation Explanation. WWW 2022 【可解释推荐评价指标】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Path Language Modeling over Knowledge Graphs for Explainable Recommendation. WWW 2022 【在知识图谱上学习语言模型，实现推荐和解释】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Accurate and Explainable Recommendation via Review Rationalization. WWW 2022 【提取评论中的因果关系】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AmpSum: Adaptive Multiple-Product Summarization towards Improving Recommendation Captions. WWW 2022 【生成商品标题】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Comparative Explanations of Recommendations. WWW 2022 【可比较的推荐解释】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Neuro-Symbolic Interpretable Collaborative Filtering for Attribute-based Recommendation. WWW 2022 【以模型为核心的神经符号可解释协同过滤】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multi-level Recommendation Reasoning over Knowledge Graphs with Reinforcement Learning. WWW 2022 【基于强化学习的知识图多级推荐推理】&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;long-tailcold-start-in-recommendations&#34;&gt;Long-tail/Cold-start in Recommendations
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Sequential and Diverse Recommendation with Long Tail. IJCAI 2019. &lt;a class=&#34;link&#34; href=&#34;https://www.ijcai.org/proceedings/2019/0380.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PDF&lt;/a&gt; 【长尾的序列和多样推荐】&lt;/li&gt;
&lt;li&gt;Content-aware Neural Hashing for Cold-start Recommendation. SIGIR 2020 【内容感知的神经散列用于冷启动推荐】&lt;/li&gt;
&lt;li&gt;Recommendation for New Users and New Items via Randomized Training and Mixture-of-Experts Transformation. SIGIR 2020 【通过随机训练和专家转型混合对新用户和新物品进行推荐】&lt;/li&gt;
&lt;li&gt;MAMO: Memory-Augmented Meta-Optimization for Cold-start Recommendation. KDD 2020 【冷启动推荐的内存增强元优化】&lt;/li&gt;
&lt;li&gt;Learning Transferrable Parameters for Long-tailed Sequential User Behavior Modeling. KDD 2020 【长尾用户的行为建模】&lt;/li&gt;
&lt;li&gt;Meta-learning on Heterogeneous Information Networks for Cold-start Recommendation. KDD 2020 【异构信息网络的元学习用于冷启动推荐】&lt;/li&gt;
&lt;li&gt;Cold-Start Sequential Recommendation via Meta Learner. AAAI 2021 【通过元学习冷启动序列推荐】&lt;/li&gt;
&lt;li&gt;Personalized Adaptive Meta Learning for Cold-start User Preference Prediction. AAAI 2021 【用于冷启动用户偏好预测的个性化自适应元学习】&lt;/li&gt;
&lt;li&gt;Task-adaptive Neural Process for User Cold-Start Recommendation. WWW 2021 【用于用户冷启动推荐的任务自适应】&lt;/li&gt;
&lt;li&gt;A Model of Two Tales: Dual Transfer Learning Framework for Improved Long-tail Item Recommendation. WWW 2021 【双转移学习框架用于改进长尾推荐】&lt;/li&gt;
&lt;li&gt;FORM: Follow the Online Regularized Meta-Leader for Cold-Start Recommendation. SIGIR 2021 【遵循在线规范化的元领导者进行冷启动推荐】&lt;/li&gt;
&lt;li&gt;Privileged Graph Distillation for Cold-start Recommendation. SIGIR 2021 【冷启动推荐的特权图蒸馏】&lt;/li&gt;
&lt;li&gt;Learning to Warm Up Cold Item Embeddings for Cold-start Recommendation with Meta Scaling and Shifting Networks. SIGIR 2021 【元缩放和偏移网络进行冷启动推荐】&lt;/li&gt;
&lt;li&gt;CATN: Cross-Domain Recommendation for Cold-Start Users via Aspect Transfer Network. SIGIR 2020 【为冷启动用户提供跨域建议】&lt;/li&gt;
&lt;li&gt;Learning Graph Meta Embeddings for Cold-Start Ads in Click-Through Rate Prediction. SIGIR 2021 【点击率预测中冷启动广告】&lt;/li&gt;
&lt;li&gt;Fairness among New Items in Cold Start Recommender Systems. SIGIR 2021 【冷启动推荐系统中新物品的公平性】&lt;/li&gt;
&lt;li&gt;Alleviating Cold-Start Problems in Recommendation through Pseudo-Labelling over Knowledge Graph. WSDM 2021 【知识图上的伪标记缓解冷启动问题】&lt;/li&gt;
&lt;li&gt;Adversarial Item Promotion: Vulnerabilities at the Core of Top-N Recommenders that Use Images to Address Cold Start. WWW 2021 【使用图像解决冷启动推荐的漏洞】&lt;/li&gt;
&lt;li&gt;CMML: Contextual Modulation Meta Learning for Cold-Start Recommendation. CIKM 2021【元学习+冷启动】&lt;/li&gt;
&lt;li&gt;Reinforcement Learning to Optimize Lifetime Value in Cold-Start Recommendation. CIKM 2021【增强学习+冷启动】&lt;/li&gt;
&lt;li&gt;Zero Shot on the Cold-Start Problem: Model-Agnostic Interest Learning for Recommender Systems. CIKM 2021【零样本学习+冷启动】&lt;/li&gt;
&lt;li&gt;Memory Bank Augmented Long-tail Sequential Recommendation. CIKM 2022 【记忆库增强】&lt;/li&gt;
&lt;li&gt;GIFT: Graph-guIded Feature Transfer for Cold-Start Video Click-Through Rate Prediction. CIKM 2022 【GIFT：用于冷启动视频点击率预测的图引导特征迁移】&lt;/li&gt;
&lt;li&gt;Task-optimized User Clustering based on Mobile App Usage for Cold-start Recommendations. KDD 2022 【用户聚类】&lt;/li&gt;
&lt;li&gt;A Dynamic Meta-Learning Model for Time-Sensitive Cold-Start Recommendations. AAAI 2022 【元学习动态推荐框架】&lt;/li&gt;
&lt;li&gt;SMINet: State-Aware Multi-Aspect Interests Representation Network for Cold-Start Users Recommendation. AAAI 2022 【状态感知多方面兴趣网络】&lt;/li&gt;
&lt;li&gt;Multi-view Denoising Graph Auto-Encoders on Heterogeneous Information Networks for Cold-start Recommendation. KDD 2021 【异构信息网络多视图去噪图自动编码器实现冷启动】&lt;/li&gt;
&lt;li&gt;A Semi-Personalized System for User Cold Start Recommendation on Music Streaming Apps. KDD 2021 【半个性化的音乐流媒体应用冷启动推荐系统】&lt;/li&gt;
&lt;li&gt;Socially-aware Dual Contrastive Learning for Cold-Start Recommendation. SIGIR 2022 【short paper，社交感知的双重对比学习】&lt;/li&gt;
&lt;li&gt;Transform Cold-Start Users into Warm via Fused Behaviors in Large-Scale Recommendation. SIGIR 2022 【short paper，通过融合行为转换冷启动用户】&lt;/li&gt;
&lt;li&gt;Generative Adversarial Framework for Cold-Start Item Recommendation. SIGIR 2022 【short paper，针对冷启动商品的生成对抗框架】&lt;/li&gt;
&lt;li&gt;Improving Item Cold-start Recommendation via Model-agnostic Conditional Variational Autoencoder. SIGIR 2022 【short paper，模型无关的自编码器提升商品冷启动推荐】&lt;/li&gt;
&lt;li&gt;Cold Start Similar Artists Ranking with Gravity-Inspired Graph Autoencoders. RecSys 2021 【图自动编码器冷启动相似艺术家排序问题】&lt;/li&gt;
&lt;li&gt;Shared Neural Item Representations for Completely Cold Start Problem. RecSys 2021 【通过共享物品表示解决完全冷启动问题】&lt;/li&gt;
&lt;li&gt;Siamese Neural Networks for Content-based Cold-Start Music Recommendation. RecSys 2021 【LBR，暹罗神经网络进行音乐冷启动推荐】&lt;/li&gt;
&lt;li&gt;Fast And Accurate User Cold-Start Learning Using Monte Carlo Tree Search. RecSys 2022 【蒙特卡洛树搜索进行用户冷启动学习】&lt;/li&gt;
&lt;li&gt;M2TRec: Metadata-aware Multi-task Transformer for Large-scale and Cold-start free Session-based Recommendations. RecSys 2022【LBR，基于元数据和多任务 Transformer 的冷启动会话推荐系统】&lt;/li&gt;
&lt;li&gt;Alleviating Cold-start Problem in CTR Prediction with A Variational Embedding Learning Framework. WWW 2022 【使用变分embedding学习框架缓解 CTR 预测中的冷启动问题】&lt;/li&gt;
&lt;li&gt;PNMTA: A Pretrained Network Modulation and Task Adaptation Approach for User Cold-Start Recommendation. WWW 2022 【加入编码调制器和预测调制器，使得编码器和预测器可以自适应处理冷启动用户。】&lt;/li&gt;
&lt;li&gt;KoMen: Domain Knowledge Guided Interaction Recommendation for Emerging Scenarios. WWW 2022 【元学习+图网络】&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;diversity-in-recommendation&#34;&gt;Diversity in Recommendation
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Fast Greedy MAP Inference for Determinantal Point Process to Improve Recommendation Diversity. NIPS 2018. &lt;a class=&#34;link&#34; href=&#34;https://proceedings.neurips.cc/paper/2018/file/dbbf603ff0e99629dda5d75b6f75f966-Paper.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PDF&lt;/a&gt; 【行列式点过程的快速贪婪映射推理提高推荐多样性】&lt;/li&gt;
&lt;li&gt;PD-GAN: Adversarial Learning for Personalized Diversity-Promoting Recommendation. IJCAI 2019. &lt;a class=&#34;link&#34; href=&#34;https://www.ijcai.org/proceedings/2019/0537.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PDF&lt;/a&gt; 【考虑推荐多样性的对抗性学习】&lt;/li&gt;
&lt;li&gt;Sequential and Diverse Recommendation with Long Tail. IJCAI 2019. &lt;a class=&#34;link&#34; href=&#34;https://www.ijcai.org/proceedings/2019/0380.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PDF&lt;/a&gt; 【长尾的序列和多样推荐】&lt;/li&gt;
&lt;li&gt;Diversified Interactive Recommendation with Implicit Feedback. AAAI 2020. &lt;a class=&#34;link&#34; href=&#34;https://ojs.aaai.org/index.php/AAAI/article/download/5931/5787&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PDF&lt;/a&gt; 【隐反馈的多样化交互式推荐】&lt;/li&gt;
&lt;li&gt;ART (Attractive Recommendation Tailor): How the Diversity of Product Recommendations Affects Customer Purchase Preference in Fashion Industry. CIKM 2020. &lt;a class=&#34;link&#34; href=&#34;https://dl.acm.org/doi/pdf/10.1145/3340531.3412687?casa_token=pLrkqMKPqS4AAAAA:SROCQTKY_rSZVDJa2gTQf5bRGKky_BJEnNOcXXi0A1nYDNO9cBb1FjmIucxg7NN_K42IZA5RGye3XA&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PDF&lt;/a&gt; 【多样性对时尚行业客户购买偏好的影响】&lt;/li&gt;
&lt;li&gt;A Framework for Recommending Accurate and Diverse Items Using Bayesian Graph Convolutional Neural Networks. KDD 2020 【贝叶斯图卷积神经网络】&lt;/li&gt;
&lt;li&gt;Enhancing Recommendation Diversity using Determinantal Point Processes on Knowledge Graphs. SIGIR 2020. &lt;a class=&#34;link&#34; href=&#34;https://dl.acm.org/doi/pdf/10.1145/3397271.3401213?casa_token=WLxAwJzJFhwAAAAA:k_i4GlcKpa6xxtdxPfZLuyyVZ_cp61I4C6pf361chyAYvYzWFQeZJjNQ95POg2UiKPECCcaF-hz9YA&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PDF&lt;/a&gt; 【知识图谱上使用行列式点过程增强推荐多样性】&lt;/li&gt;
&lt;li&gt;A Hybrid Bandit Framework for Diversified Recommendation. AAAI 2021. &lt;a class=&#34;link&#34; href=&#34;https://arxiv.org/pdf/2012.13245&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PDF&lt;/a&gt; 【多样性推荐的混合 bandit 框架】&lt;/li&gt;
&lt;li&gt;P-Companion:  A Principled Framework for Diversified Complementary Product Recommendation. CIKM 2021. &lt;a class=&#34;link&#34; href=&#34;https://dl.acm.org/doi/pdf/10.1145/3340531.3412732&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PDF&lt;/a&gt; 【多元化补充产品推荐的原则框架】&lt;/li&gt;
&lt;li&gt;Sliding Spectrum Decomposition for Diversified Recommendation. KDD 2021. &lt;a class=&#34;link&#34; href=&#34;https://dl.acm.org/doi/pdf/10.1145/3447548.3467108?casa_token=-ODzWqfs760AAAAA:4NO7u-6ARd9lVBIuyiqCN2WKK0QCKbQUCW532MVJduRVV_0dawflyQ1y8YUXaKxMo342KmqF7Q&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PDF&lt;/a&gt; 【滑动频谱分解以实现多样化推荐】&lt;/li&gt;
&lt;li&gt;Enhancing Domain-Level and User-Level Adaptivity in Diversified Recommendation.  SIGIR 2021. &lt;a class=&#34;link&#34; href=&#34;https://dl.acm.org/doi/abs/10.1145/3404835.3462957&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PDF&lt;/a&gt; 【在多元化推荐中提高域级和用户级适应性】&lt;/li&gt;
&lt;li&gt;Graph Meta Network for Multi-Behavior Recommendation with Interaction Heterogeneity and Diversity. SIGIR 2021 【结合交互异质性和多样性的多行为推荐图元网络】&lt;/li&gt;
&lt;li&gt;Modeling Intent Graph for Search Result Diversification. SIGIR 2021 【建模意向网络用于搜索结果多样性】&lt;/li&gt;
&lt;li&gt;Dynamic Graph Construction for Improving Diversity of Recommendation. RecSys 2021. &lt;a class=&#34;link&#34; href=&#34;https://dl.acm.org/doi/abs/10.1145/3460231.3478845&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PDF&lt;/a&gt; 【改进推荐多样性的动态图构建】&lt;/li&gt;
&lt;li&gt;Towards Unified Metrics for Accuracy and Diversity for Recommender Systems. RecSys 2021. &lt;a class=&#34;link&#34; href=&#34;https://dl.acm.org/doi/pdf/10.1145/3460231.3474234&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PDF&lt;/a&gt; 【为推荐系统建立准确性和多样性的统一指标】&lt;/li&gt;
&lt;li&gt;DGCN: Diversified Recommendation with Graph Convolutional Networks.  WWW 2021. &lt;a class=&#34;link&#34; href=&#34;http://fi.ee.tsinghua.edu.cn/public/publications/b344fd48-92b0-11eb-96bc-0242ac120003.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PDF&lt;/a&gt; 【使用图卷积网络的多样化推荐】&lt;/li&gt;
&lt;li&gt;Future-Aware Diverse Trends Framework for Recommendation. WWW 2021. &lt;a class=&#34;link&#34; href=&#34;https://arxiv.org/pdf/2011.00422&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PDF&lt;/a&gt; 【面向未来的多元化趋势推荐框架】&lt;/li&gt;
&lt;li&gt;Random Walks with Erasure: Diversifying Personalized Recommendations on Social and Information Networks.  WWW 2021. &lt;a class=&#34;link&#34; href=&#34;https://arxiv.org/pdf/2102.09635&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PDF&lt;/a&gt; 【社交网络个性化推荐的多样化】&lt;/li&gt;
&lt;li&gt;Improving End-to-End Sequential Recommendations with Intent-aware Diversification. CIKM 2020 【意向感知的多样性】&lt;/li&gt;
&lt;li&gt;Diversified Recommendation Through Similarity-Guided Graph Neural Networks. WWW 2021 【基于相似引导图神经网络的多样化推荐】&lt;/li&gt;
&lt;li&gt;On the Diversity and Explainability of Recommender Systems: A Practical Framework for Enterprise App Recommendation. CIKM 2021. &lt;a class=&#34;link&#34; href=&#34;https://dl.acm.org/doi/pdf/10.1145/3459637.3481940?casa_token=x4k2BTtSkmMAAAAA:J-83ktko4ediMOH7qhGal9GmLiop5gLEUgsmffLKfJK2ITuC6m8SDdKvbG4xnttmjH2gCLL66geyog&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PDF&lt;/a&gt; 【applied paper，推荐系统的多样性和可解释性】&lt;/li&gt;
&lt;li&gt;Choosing the Best of All Worlds: Accurate, Diverse, and Novel Recommendations through Multi-Objective Reinforcement Learning. WSDM 2022【通过多目标强化学习的准确、多样化和新颖的推荐】&lt;/li&gt;
&lt;li&gt;Feature-aware Diversified Re-ranking with Disentangled Representations for Relevant Recommendation. KDD 2022 【特征表示解耦去噪】&lt;/li&gt;
&lt;li&gt;DAWAR: Diversity-aware Web APIs Recommendation for Mashup Creation based on Correlation Graph. SIGIR 2022 【多样化Web API推荐】&lt;/li&gt;
&lt;li&gt;Mitigating the Filter Bubble while Maintaining Relevance: Targeted Diversification with VAE-based Recommender Systems. SIGIR 2022 【short paper，定向多样化】&lt;/li&gt;
&lt;li&gt;Diversity vs Relevance: a practical multi-objective study in luxury fashion recommendations. SIGIR 2022 【short paper，奢侈品推荐中的多目标研究】&lt;/li&gt;
&lt;li&gt;Towards Unified Metrics for Accuracy and Diversity for Recommender Systems. RecSys 2021 【推荐系统准确性和多样性的统一度量】&lt;/li&gt;
&lt;li&gt;Dynamic Graph Construction for Improving Diversity of Recommendation. RecSys 2021 【LBR，改进推荐系统多样性的动态多样图框架】&lt;/li&gt;
&lt;li&gt;Solving Diversity-Aware Maximum Inner Product Search Efficiently and Effectively. RecSys 2022 【多样性感知的最大内部产品搜索】&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;denoising-in-recommendation&#34;&gt;Denoising in Recommendation
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Denoising Implicit Feedback for Recommendation. WSDM 2021 【推荐隐反馈的去噪】&lt;/li&gt;
&lt;li&gt;The World is Binary: Contrastive Learning for Denoising Next Basket Recommendation. SIGIR 2021 【通过对比学习对下一篮推荐问题去噪】&lt;/li&gt;
&lt;li&gt;Concept-Aware Denoising Graph Neural Network for Micro-Video Recommendation. CIKM 2021【用于微视频推荐的去噪GNN】&lt;/li&gt;
&lt;li&gt;Hierarchical Item Inconsistency Signal learning for Sequence Denoising in Sequential Recommendation. CIKM 2022 【序列推荐中序列去噪的分层项目不一致信号学习】&lt;/li&gt;
&lt;li&gt;Multi-view Denoising Graph Auto-Encoders on Heterogeneous Information Networks for Cold-start Recommendation. KDD 2021 【面向冷启动推荐的异构信息网络多视图去噪图自动编码器】&lt;/li&gt;
&lt;li&gt;Learning to Denoise Unreliable Interactions for Graph Collaborative Filtering. SIGIR 2022 【数据去噪】&lt;/li&gt;
&lt;li&gt;Less is More: Reweighting Important Spectral Graph Features for Recommendation. SIGIR 2022 【评估重要的图谱特征】&lt;/li&gt;
&lt;li&gt;Denoising Time Cycle Modeling for Recommendation. SIGIR 2022 【short paper，去噪时间循环建模】&lt;/li&gt;
&lt;li&gt;Denoising User-aware Memory Network for Recommendation. RecSys 2021 【用户感知记忆网络的去噪】&lt;/li&gt;
&lt;li&gt;Denoising Self-Attentive Sequential Recommendation. RecSys 2022 【基于 Transformer 的序列推荐中自注意力机制的去噪】&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;privacy-protection-in-recommendation&#34;&gt;Privacy Protection in Recommendation
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;DeepRec: On-device Deep Learning for Privacy-Preserving Sequential Recommendation in Mobile Commerce. WWW 2021 【移动商务的隐私保护】&lt;/li&gt;
&lt;li&gt;FedCDR: Federated Cross-Domain Recommendation for Privacy-Preserving Rating Prediction. CIKM 2022 【FedCDR：用于隐私保护评级预测的联合跨域推荐】&lt;/li&gt;
&lt;li&gt;PipAttack: Poisoning Federated Recommender Systems for Manipulating Item Promotion. WSDM 2022【用于操纵项目促销的中毒联合推荐系统】&lt;/li&gt;
&lt;li&gt;FedAttack: Effective and Covert Poisoning Attack on Federated Recommendation via Hard Sampling. KDD 2022 【联邦推荐的对抗攻击】&lt;/li&gt;
&lt;li&gt;Privacy-Preserving Synthetic Data Generation for Recommendation. SIGIR 2022 【隐私保护的仿真数据生成】&lt;/li&gt;
&lt;li&gt;Privacy Preserving Collaborative Filtering by Distributed Mediation. RecSys 2021【隐私保护式协同过滤】&lt;/li&gt;
&lt;li&gt;A Payload Optimization Method for Federated Recommender Systems. RecSys 2021 【联邦推荐的有效负载优化方法】&lt;/li&gt;
&lt;li&gt;Stronger Privacy for Federated Collaborative Filtering With Implicit Feedback. RecSys 2021【隐式数据的联邦推荐系统】&lt;/li&gt;
&lt;li&gt;FR-FMSS: Federated Recommendation via Fake Marks and Secret Sharing. RecSys 2021【LBR，跨用户联邦推荐框架】&lt;/li&gt;
&lt;li&gt;Horizontal Cross-Silo Federated Recommender Systems. RecSys 2021【LBR，联邦推荐对多类利益相关者的影响研究】&lt;/li&gt;
&lt;li&gt;Dynamic Global Sensitivity for Differentially Private Contextual Bandits. RecSys 2022 【通过差分私有的上下文 Bandit 算法保护隐私】&lt;/li&gt;
&lt;li&gt;EANA: Reducing Privacy Risk on Large-scale Recommendation Models. RecSys 2022 【降低大规模推荐模型的隐私风险】&lt;/li&gt;
&lt;li&gt;Fairness-aware Federated Matrix Factorization. RecSys 2022 【结合差异隐私技术的公平感知的联邦矩阵分解】&lt;/li&gt;
&lt;li&gt;Toward Fair Federated Recommendation Learning: Characterizing the Inter-Dependence of System and Data Heterogeneity. RecSys 2022 【推荐中公平的联邦学习】&lt;/li&gt;
&lt;li&gt;Poisoning Deep Learning based Recommender Model in Federated Learning Scenarios. IJCAI 2022 【设计针对基于深度学习的推荐模型的攻击】&lt;/li&gt;
&lt;li&gt;Differential Private Knowledge Transfer for Privacy-Preserving Cross-Domain Recommendation. WWW 2022 【通过可微隐私知识迁移实现源域隐私保护的跨域推荐】&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;evaluation-of-recommender-system&#34;&gt;Evaluation of Recommender System
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;How Dataset Characteristics Affect the Robustness of Collaborative Recommendation Models. SIGIR 2020 【分析数据集特征如何影响协同推荐模型的稳健性】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Agreement and Disagreement between True and False-Positive Metrics in Recommender Systems Evaluation. SIGIR 2020 【推荐系统评估中真假正例指标的一致性和不一致性】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Critically Examining the Claimed Value of Convolutions over User-Item Embedding Maps for Recommender Systems. CIKM 2020 【批判性分析推荐系统的用户物品图卷积的作用】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On Estimating Recommendation Evaluation Metrics under Sampling. AAAI 2021 【推荐中采样评测指标的分析】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Beyond Point Estimate Inferring Ensemble Prediction Variation from Neuron Activation Strength in Recommender Systems. WSDM 2021 【推荐系统中神经元激活强度变化】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bias-Variance Decomposition for Ranking. WSDM 2021 【排序中偏差-方差的分解】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Theoretical Understandings of Product Embedding for E-commerce Machine Learning. WSDM 2021 【电子商务机器学习中物品表征的理论理解】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Measuring Recommendation Explanation Quality: The Conflicting Goals of Explanations. SIGIR 2020 【衡量推荐解释的质量】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Evaluating Conversational Recommender Systems via User Simulation. KDD 2020 【通过用户仿真评估会话推荐系统】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On Sampled Metrics for Item Recommendation. KDD 2020 【物品推荐的采样指标】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On Sampling Top-K Recommendation Evaluation. KDD 2020 【推荐采样的评估】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Are We Evaluating Rigorously： Benchmarking Recommendation for Reproducible Evaluation and Fair Comparison. RecSys 2020 【可重复评估和公平比较的基准推荐】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On Target Item Sampling in Offline Recommender System Evaluation. RecSys 2020 【离线推荐系统评估中的目标物品采样】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Exploiting Performance Estimates for Augmenting Recommendation Ensembles. RecSys 2020 【利用性能估算来增强推荐集合】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Method to Anonymize Business Metrics to Publishing Implicit Feedback Datasets. RecSys 2020 【匿名业务指标发布隐反馈数据集的方法】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Standing in Your Shoes: External Assessments for Personalized Recommender Systems. SIGIR 2021 【个性化推荐系统的外部评估】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;librec-auto: A Tool for Recommender Systems Experimentation. CIKM 2021 【librec-auto：推荐系统实验的工具】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RecBole: Towards a Unified, Comprehensive and Efficient Framework for Recommendation Algorithms. CIKM 2021 【RecBole：迈向统一、全面和高效的推荐算法框架】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RecBole 2.0: Towards a More Up-to-Date Recommendation Library. CIKM 2022 【RecBole 2.0：与时俱进的推荐库】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Best practices for top-N recommendation evaluation: Candidate set sampling and Statistical inference techniques. CIKM 2022 【候选集抽样和统计推断技术】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;KuaiRec: A Fully-observed Dataset and Insights for Evaluating Recommender Systems. CIKM 2022 【用于评估推荐系统的完全观察数据集和见解】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FPAdaMetric: False-Positive-Aware Adaptive Metric Learning for Session-Based Recommendation. AAAI 2022 【度量学习正则化】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Evaluation of Herd Behavior Caused by Population-scale Concept Drift in Collaborative Filtering. SIGIR 2022 【short paper】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Evaluating Off-Policy Evaluation: Sensitivity and Robustness. RecSys 2021 【离线评估的可解释性评估】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Online Evaluation Methods for the Causal Effect of Recommendations. RecSys 2021 【推荐中因果效应的在线评估方法】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Towards Unified Metrics for Accuracy and Diversity for Recommender Systems. RecSys 2021 【推荐系统准确性和多样性的统一度量】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Values of Exploration in Recommender Systems. RecSys 2021 【基于强化学习推荐算法的用户探索和指标评测】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Case Study on Sampling Strategies for Evaluating Neural Sequential Item Recommendation Models. RecSys 2021 【Reproducibility paper，序列推荐模型评测策略的研究】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Quality Metrics in Recommender Systems: Do We Calculate Metrics Consistently?. RecSys 2021 【LBR，推荐系统评估指标的再思考】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don&amp;rsquo;t recommend the obvious: estimate probability ratios. RecSys 2022 【通过拟合逐点的互信息来改进序列推荐的流行度采样指标】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RADio – Rank-Aware Divergence Metrics to Measure Normative Diversity in News Recommendations. RecSys 2022【衡量新闻推荐规范化多样性的度量框架】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Systematic Review and Replicability Study of BERT4Rec for Sequential Recommendation. RecSys 2022【Reproducibility paper，BERT4Rec 结果的系统回顾与可复现性研究】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Revisiting the Performance of iALS on Item Recommendation Benchmarks. RecSys 2022【Reproducibility paper，隐式交替最小二乘法 iALS 基准表现的再思考】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Measuring Commonality in Recommendation of Cultural Content: Recommender Systems to Enhance Cultural Citizenship. RecSys 2022【LBR，通用性作为文化内容推荐的度量】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multiobjective Evaluation of Reinforcement Learning Based Recommender Systems. RecSys 2022【LBR，基于强化学习的推荐系统的多目标评价】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tenrec: A Large-scale Multipurpose Benchmark Dataset for Recommender Systems. NIPS 2022 【推荐系统的大规模多用途基准数据集】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On the Generalizability and Predictabilityof Recommender Systems. NIPS 2022 【提出一种元学习方法，针对一个全新的，未见过的数据集选择最优算法和参数】&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;other-topics&#34;&gt;Other Topics
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Multi-granularity Fatigue in Recommendation. CIKM 2022 【推荐中的多粒度疲劳】&lt;/li&gt;
&lt;li&gt;A Multi-Interest Evolution Story: Applying Psychology in Query-based Recommendation for Inferring Customer Intention. CIKM 2022 【在基于查询的推荐中应用心理学以推断客户意图】&lt;/li&gt;
&lt;li&gt;Improving Text-based Similar Product Recommendation for Dynamic Product Advertising at Yahoo. CIKM 2022 【改进雅虎动态产品广告的基于文本的相似产品推荐】&lt;/li&gt;
&lt;li&gt;E-Commerce Promotions Personalization via Online Multiple-Choice Knapsack with Uplift Modeling. CIKM 2022 【在线的电子商务促销个性化】&lt;/li&gt;
&lt;li&gt;Hierarchical Imitation Learning via Subgoal Representation Learning for Dynamic Treatment Recommendation. WSDM 2022【基于动态治疗推荐的子目标表示学习的分层模仿学习】&lt;/li&gt;
&lt;li&gt;PLdFe-RR:Personalized Long-distance Fuel-efficient Route Recommendation Based On Historical Trajectory. WSDM 2022【基于历史轨迹的个性化长途省油路线推荐】&lt;/li&gt;
&lt;li&gt;The Datasets Dilemma: How Much Do We Really Know About Recommendation Datasets?. WSDM 2022【数据集困境：我们对推荐数据集真正了解多少？】&lt;/li&gt;
&lt;li&gt;Obtaining Calibrated Probabilities with Personalized Ranking Models. AAAI 2022 【提出排序模型的两种校准方法】&lt;/li&gt;
&lt;li&gt;Addressing Unmeasured Confounder for Recommendation with Sensitivity Analysis. KDD 2022 【混淆因子的鲁棒性】&lt;/li&gt;
&lt;li&gt;Learning Elastic Embeddings for Customizing On-Device Recommenders. KDD 2021 【定制设备上的弹性 embedding】&lt;/li&gt;
&lt;li&gt;Learning to Embed Categorical Features without Embedding Tables for Recommendation. KDD 2021 【无 embedding 表的推荐系统特征建模】&lt;/li&gt;
&lt;li&gt;Preference Amplification in Recommender Systems. KDD 2021 【推荐系统中的偏好放大】&lt;/li&gt;
&lt;li&gt;Where are we in embedding spaces? A Comprehensive Analysis on Network Embedding Approaches for Recommender System. KDD 2021 【推荐系统中网络嵌入方法的综合分析】&lt;/li&gt;
&lt;li&gt;User-Aware Multi-Interest Learning for Candidate Matching in Recommenders. SIGIR 2022 【使用用户多兴趣学习进行候选匹配】&lt;/li&gt;
&lt;li&gt;User-controllable Recommendation Against Filter Bubbles. SIGIR 2022 【用户可控的推荐】&lt;/li&gt;
&lt;li&gt;Rethinking Correlation-based Item-Item Similarities for Recommender Systems. SIGIR 2022 【short paper，反思基于关系的商品相似度】&lt;/li&gt;
&lt;li&gt;ReLoop: A Self-Correction Learning Loop for Recommender Systems. SIGIR 2022 【short paper，推荐系统中的自修正循环学习】&lt;/li&gt;
&lt;li&gt;Towards Results-level Proportionality for Multi-objective Recommender Systems. SIGIR 2022 【short paper，动量对比方法实现结果均衡的多目标推荐系统】&lt;/li&gt;
&lt;li&gt;Recommender Systems and Algorithmic Hate. RecSys 2022 【LBR，对用户方案推荐系统算法的探究性工作】&lt;/li&gt;
&lt;li&gt;The Effect of Feedback Granularity on Recommender Systems Performance. RecSys 2022 【LBR，评分和反馈粒度对推荐性能的影响】&lt;/li&gt;
&lt;li&gt;The trade-offs of model size in large recommendation models : A 10000 ×× compressed criteo-tb DLRM model (100 GB parameters to mere 10MB). NIPS 2022 【推荐模型压缩】&lt;/li&gt;
&lt;li&gt;DreamShard: Generalizable Embedding Table Placement for Recommender Systems. NIPS 2022 【推荐系统的通用embedding表】&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;technique&#34;&gt;Technique
&lt;/h2&gt;&lt;h3 id=&#34;pre-training-in-recommender-system&#34;&gt;Pre-training in Recommender System
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;S$^3$-Rec: Self-Supervised Learning for Sequential Recommendation with Mutual Information Maximization. CIKM 2020 【基于互信息最大化的序列推荐自监督学习】&lt;/li&gt;
&lt;li&gt;Contrastive Pre-Training of GNNs on Heterogeneous Graphs. CIKM 2021【图神经网络的对比预训练】&lt;/li&gt;
&lt;li&gt;Self-supervised Learning for Large-scale Item Recommendations. arXiv 2020 【大规模物品推荐的自监督学习】&lt;/li&gt;
&lt;li&gt;U-BERT Pre-Training User Representations for Improved Recommendation. AAAI 2021 【预训练用户表示】&lt;/li&gt;
&lt;li&gt;Pre-Training Graph Neural Networks for Cold-Start Users and Items Representation. WSDM 2021 【冷启动用户和物品表示的预训练图神经网络】&lt;/li&gt;
&lt;li&gt;Augmenting Sequential Recommendation with Pseudo-Prior Items via Reversely Pre-training Transformer. SIGIR 2021 【反向预训练 Transformer 增强序列推荐】&lt;/li&gt;
&lt;li&gt;Self-supervised Graph Learning for Recommendation. SIGIR 2021 【推荐的自监督图学习】&lt;/li&gt;
&lt;li&gt;Pre-training Graph Transformer with Multimodal Side Information for Recommendation. ACM MM 2021 【多模态侧信息的预训练图 Transformer 用于推荐】&lt;/li&gt;
&lt;li&gt;SelfCF: A Simple Framework for Self-supervised Collaborative Filtering. arXiv 2021 【自监督协同过滤】&lt;/li&gt;
&lt;li&gt;UPRec: User-Aware Pre-training for Recommender Systems. arXiv 2021 【推荐系统用户感知的预训练】&lt;/li&gt;
&lt;li&gt;Curriculum Pre-Training Heterogeneous Subgraph Transformer for Top-N Recommendation. arXiv 2021 【用于 Top-N 推荐的课程预训练异构子图 Transformer】&lt;/li&gt;
&lt;li&gt;One4all User Representation for Recommender Systems in E-commerce. arXiv 2021 【电子商务中用户表示的预训练】&lt;/li&gt;
&lt;li&gt;Graph Neural Pre-training for Enhancing Recommendations using Side Information. arXiv 2021 【侧信息增强推荐的图神经预训练】&lt;/li&gt;
&lt;li&gt;GBERT: Pre-training User representations for Ephemeral Group Recommendation. CIKM 2022 【为临时组推荐预训练用户表示】&lt;/li&gt;
&lt;li&gt;Temporal Contrastive Pre-Training for Sequential Recommendation. CIKM 2022 【时序推荐的时间对比预训练】&lt;/li&gt;
&lt;li&gt;TwHIN: Embedding the Twitter Heterogeneous Information Network for Personalized Recommendation. KDD 2022 【推特知识图谱增强】&lt;/li&gt;
&lt;li&gt;Recommendation as Language Processing (RLP): A Unified Pretrain, Personalized Prompt &amp;amp; Predict Paradigm (P5). RecSys 2022 【通用的预训练、个性化提示和预测范式建模推荐任务】&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;reinforcement-learning-in-recommendation&#34;&gt;Reinforcement Learning in Recommendation
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;MaHRL: Multi-goals Abstraction based Deep Hierarchical Reinforcement Learning for Recommendations. SIGIR 2020 【基于多目标抽象的层次强化学习】&lt;/li&gt;
&lt;li&gt;Interactive Recommender System via Knowledge Graph-enhanced Reinforcement Learning. SIGIR 2020 【基于知识图增强强化学习的交互式推荐系统】&lt;/li&gt;
&lt;li&gt;Joint Policy-Value Learning for Recommendation. KDD 2020 【联合 policy-value 的强化学习推荐】&lt;/li&gt;
&lt;li&gt;BLOB: A Probabilistic Model for Recommendation that Combines Organic and Bandit Signals. KDD 2020 【有机和 bandit 信号的推荐概率模型】&lt;/li&gt;
&lt;li&gt;Learning to Collaborate in Multi-Module Recommendation via Multi-Agent Reinforcement Learning without Communication. RecSys 2020 【多代理强化学习进行多模块推荐】&lt;/li&gt;
&lt;li&gt;Exploring Clustering of Bandits for Online Recommendation System. RecSys 2020 【在线推荐系统中的 bandit 聚类研究】&lt;/li&gt;
&lt;li&gt;Contextual User Browsing Bandits for Large-Scale Online Mobile Recommendation. RecSys 2020 【大规模在线移动推荐的上下文用户浏览 bandit】&lt;/li&gt;
&lt;li&gt;Keeping Dataset Biases out of the Simulation : A Debiased Simulator for Reinforcement Learning based Recommender Systems. RecSys 2020 【基于强化学习的去偏模拟器】&lt;/li&gt;
&lt;li&gt;Leveraging Demonstrations for Reinforcement Recommendation Reasoning over Knowledge Graphs. SIGIR 2020 【利用演示增强知识图上的推荐推理】&lt;/li&gt;
&lt;li&gt;KERL: A Knowledge-Guided Reinforcement Learning Model for Sequential Recommendation. SIGIR 2020 【序列推荐中知识增强的强化学习模型】&lt;/li&gt;
&lt;li&gt;A Hybrid Bandit Framework for Diversified Recommendation. AAAI 2021 【多元化推荐的混合 Bandit 框架】&lt;/li&gt;
&lt;li&gt;RLNF: Reinforcement Learning based Noise Filtering for Click-Through Rate Prediction. SIGIR 2021 【基于强化学习的点击率预测噪声滤波】&lt;/li&gt;
&lt;li&gt;Unified Conversational Recommendation Policy Learning via Graph-based Reinforcement Learning. SIGIR 2021 【基于图强化学习的对话推荐】&lt;/li&gt;
&lt;li&gt;Diverse User Preference Elicitation with Multi-Armed Bandits. WSDM 2021 【多臂老虎机的多种用户偏好启发】&lt;/li&gt;
&lt;li&gt;Explore, Filter and Distill: Distilled Reinforcement Learning in Recommendation. CIKM 2021【applied paper，推荐中的蒸馏强化学习】&lt;/li&gt;
&lt;li&gt;Reinforcement Learning with a Disentangled Universal Value Function for Item Recommendation. AAAI 2021 【使用统一价值函数的强化学习】&lt;/li&gt;
&lt;li&gt;User Response Models to Improve a REINFORCE Recommender System. WSDM 2021 【用户响应模型以改进强化推荐系统】&lt;/li&gt;
&lt;li&gt;Cost-Effective and Interpretable Job Skill Recommendation with Deep Reinforcement Learning. WWW 2021 【结合强化学习的可解释工作技能推荐】&lt;/li&gt;
&lt;li&gt;A Multi-Agent Reinforcement Learning Framework for Intelligent Electric Vehicle Charging Recommendation. WWW 2021 【智能电动汽车充电推荐的多智能体强化学习框架】&lt;/li&gt;
&lt;li&gt;Reinforcement Recommendation with User Multi-aspect Preference. WWW 2021 【用户多方面偏好的强化推荐】&lt;/li&gt;
&lt;li&gt;A Peep into the Future: Adversarial Future Encoding in Recommendation. WSDM 2022【推荐中的对抗性未来编码】&lt;/li&gt;
&lt;li&gt;Toward Pareto Efficient Fairness-Utility Trade-off in Recommendation through Reinforcement Learning. WSDM 2022【通过强化学习在推荐中实现帕累托高效的公平-效用权衡】&lt;/li&gt;
&lt;li&gt;Supervised Advantage Actor-Critic for Recommender Systems. WSDM 2022【推荐系统的监督优势Actor-Critic】&lt;/li&gt;
&lt;li&gt;Surrogate for Long-Term User Experience in Recommender Systems. KDD 2022 【用户长期行为建模】&lt;/li&gt;
&lt;li&gt;AutoShard: Automated Embedding Table Sharding for Recommender Systems. KDD 2022 【Embedding划分代价预估】&lt;/li&gt;
&lt;li&gt;Multi-Task Fusion via Reinforcement Learning for Long-Term User Satisfaction in Recommender Systems. KDD 2022 【Batch RL建模MTF】&lt;/li&gt;
&lt;li&gt;Modeling Attrition in Recommender Systems with Departing Bandits. AAAI 2022 【新颖的多臂老虎机】&lt;/li&gt;
&lt;li&gt;Context Uncertainty in Contextual Bandits with Applications to Recommender Systems. AAAI 2022 【新型循环神经网络】&lt;/li&gt;
&lt;li&gt;Learning the Optimal Recommendation from Explorative Users. AAAI 2022 【更现实的用户行为模型】&lt;/li&gt;
&lt;li&gt;Offline Interactive Recommendation with Natural-Language Feedback. AAAI 2022 【对抗训练离线策略】&lt;/li&gt;
&lt;li&gt;Locality-Sensitive State-Guided Experience Replay Optimization for Sparse-Reward in Online Recommendation. SIGIR 2022 【在线推荐中的稀疏奖励问题】&lt;/li&gt;
&lt;li&gt;Multi-Agent RL-based Information Selection Model for Sequential Recommendation. SIGIR 2022 【多智能体信息选择】&lt;/li&gt;
&lt;li&gt;Rethinking Reinforcement Learning for Recommendation: A Prompt Perspective. SIGIR 2022 【从提示视角看用于推荐的强化学习】&lt;/li&gt;
&lt;li&gt;Doubly-Adaptive Reinforcement Learning for Cross-Domain Interactive Recommendation. SIGIR 2022 【双重适应的强化学习】&lt;/li&gt;
&lt;li&gt;MGPolicy: Meta Graph Enhanced Off-policy Learning for Recommendations. SIGIR 2022 【元图增强的离线策略学习】&lt;/li&gt;
&lt;li&gt;Value Penalized Q-Learning for Recommender Systems. SIGIR 2022 【short paper，值惩罚的Q-Learning】&lt;/li&gt;
&lt;li&gt;Revisiting Interactive Recommender System with Reinforcement Learning. SIGIR 2022 【short paper，回顾基于强化学习的交互推荐】&lt;/li&gt;
&lt;li&gt;Designing Online Advertisements via Bandit and Reinforcement Learning. RecSys 2021 【通过 bandit 和强化学习方法设计在线广告】&lt;/li&gt;
&lt;li&gt;Partially Observable Reinforcement Learning for Dialog-based Interactive Recommendation. RecSys 2021 【将强化学习用于基于对话框的交互式推荐任务】&lt;/li&gt;
&lt;li&gt;Values of Exploration in Recommender Systems. RecSys 2021 【基于强化学习推荐算法的用户探索和指标评测】&lt;/li&gt;
&lt;li&gt;Sequence Adaptation via Reinforcement Learning in Recommender Systems. RecSys 2021 【LBR，用强化学习方法进行序列推荐】&lt;/li&gt;
&lt;li&gt;Burst-induced Multi-Armed Bandit for Learning Recommendation. RecSys 2021 【触发式多臂老虎机问题】&lt;/li&gt;
&lt;li&gt;Pessimistic Reward Models for Off-Policy Learning in Recommendation. RecSys 2021 【改进离线推荐中 Bandit 方法奖励建模】&lt;/li&gt;
&lt;li&gt;Top-K Contextual Bandits with Equity of Exposure. RecSys 2021 【曝光感知的 Bandit 算法】&lt;/li&gt;
&lt;li&gt;Off-Policy Actor Critic for Recommender Systems. RecSys 2022 【离线演员-评论家强化学习算法缓解分布偏差问题】&lt;/li&gt;
&lt;li&gt;Multiobjective Evaluation of Reinforcement Learning Based Recommender Systems. RecSys 2022【LBR，基于强化学习的推荐系统的多目标评价】&lt;/li&gt;
&lt;li&gt;Dynamic Global Sensitivity for Differentially Private Contextual Bandits. RecSys 2022 【通过差分私有的上下文 Bandit 算法保护隐私】&lt;/li&gt;
&lt;li&gt;Identifying New Podcasts with High General Appeal Using a Pure Exploration Infinitely-Armed Bandit Strategy. RecSys 2022 【通过 Bandit 策略进行播客推荐】&lt;/li&gt;
&lt;li&gt;MINDSim: User Simulator for News Recommenders. WWW 2022 【用户模拟+新闻推荐】&lt;/li&gt;
&lt;li&gt;Multi-level Recommendation Reasoning over Knowledge Graphs with Reinforcement Learning. WWW 2022 【基于强化学习的知识图多级推荐推理】&lt;/li&gt;
&lt;li&gt;Multiple Choice Questions based Multi-Interest Policy Learning for Conversational Recommendation. WWW 2022 【基于多兴趣的对话推荐策略学习】&lt;/li&gt;
&lt;li&gt;Off-policy Learning over Heterogeneous Information for Recommendation. WWW 2022 【异构信息离线学习推荐】&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;knowledge-distillation-in-recommendation&#34;&gt;Knowledge Distillation in Recommendation
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Privileged Features Distillation at Taobao Recommendations. KDD 2020 【淘宝推荐的特征蒸馏】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DE-RRD: A Knowledge Distillation Framework for Recommender System. CIKM 2020 【推荐系统的知识蒸馏框架】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bidirectional Distillation for Top-K Recommender System. WWW 2021 【推荐系统的双向蒸馏】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A General Knowledge Distillation Framework for Counterfactual Recommendation via Uniform Data. SIGIR 2020 【反事实推荐的知识蒸馏框架】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Graph Structure Aware Contrastive Knowledge Distillation for Incremental Learning in Recommender Systems. CIKM 2021【short paper，推荐系统中用于增量学习的图结构感知的对比知识蒸馏】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Target Interest Distillation for Multi-Interest Recommendation. CIKM 2022 【多兴趣推荐的目标兴趣蒸馏】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cross-Task Knowledge Distillation in Multi-Task Recommendation. AAAI 2022 【跨任务知识蒸馏】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Topology Distillation for Recommender System. KDD 2021 【基于拓扑蒸馏的推荐系统】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On-Device Next-Item Recommendation with Self-Supervised Knowledge Distillation. SIGIR 2022 【自监督知识蒸馏】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Position Awareness Modeling with Knowledge Distillation for CTR Prediction. RecSys 2022 【LBR，位置感知的知识提取框架】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;UKD: Debiasing Conversion Rate Estimation via Uncertainty-regularized Knowledge Distillation. WWW 2022 【基于不确定性正则化和知识提取的转化率估计去偏】&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;federated-learning-in-recommendation&#34;&gt;Federated Learning in Recommendation
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;FedFast Going Beyond Average for Faster Training of Federated Recommender Systems. KDD 2020 【联邦推荐系统】&lt;/li&gt;
&lt;li&gt;Federated Collaborative Transfer for Cross-Domain Recommendation. SIGIR 2021 【跨域推荐的联邦协作转换】&lt;/li&gt;
&lt;li&gt;FedCDR: Federated Cross-Domain Recommendation for Privacy-Preserving Rating Prediction. CIKM 2022 【FedCDR：用于隐私保护评级预测的联合跨域推荐】&lt;/li&gt;
&lt;li&gt;PipAttack: Poisoning Federated Recommender Systems for Manipulating Item Promotion. WSDM 2022【用于操纵项目促销的中毒联合推荐系统】&lt;/li&gt;
&lt;li&gt;FedAttack: Effective and Covert Poisoning Attack on Federated Recommendation via Hard Sampling. KDD 2022 【联邦推荐的对抗攻击】&lt;/li&gt;
&lt;li&gt;A Payload Optimization Method for Federated Recommender Systems. RecSys 2021 【联邦推荐的有效负载优化方法】&lt;/li&gt;
&lt;li&gt;Stronger Privacy for Federated Collaborative Filtering With Implicit Feedback. RecSys 2021【隐式数据的联邦推荐系统】&lt;/li&gt;
&lt;li&gt;FR-FMSS: Federated Recommendation via Fake Marks and Secret Sharing. RecSys 2021【LBR，跨用户联邦推荐框架】&lt;/li&gt;
&lt;li&gt;Horizontal Cross-Silo Federated Recommender Systems. RecSys 2021【LBR，联邦推荐对多类利益相关者的影响研究】&lt;/li&gt;
&lt;li&gt;Fairness-aware Federated Matrix Factorization. RecSys 2022 【结合差异隐私技术的公平感知的联邦矩阵分解】&lt;/li&gt;
&lt;li&gt;Toward Fair Federated Recommendation Learning: Characterizing the Inter-Dependence of System and Data Heterogeneity. RecSys 2022 【推荐中公平的联邦学习】&lt;/li&gt;
&lt;li&gt;Poisoning Deep Learning based Recommender Model in Federated Learning Scenarios. IJCAI 2022 【设计针对基于深度学习的推荐模型的攻击】&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;gnn-in-recommendation&#34;&gt;GNN in Recommendation
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Neural Graph Collaborative Filtering. SIGIR 2019 【神经图协同过滤】&lt;/li&gt;
&lt;li&gt;A Neural Influence Diffusion Model for Social Recommendation. SIGIR 2019 【社交推荐的影响扩散模型】&lt;/li&gt;
&lt;li&gt;Graph Neural Networks for Social Recommendation. WWW 2019 【社交推荐的图神经网络】&lt;/li&gt;
&lt;li&gt;Knowledge Graph Convolutional Networks for Recommender Systems. WWW 2019 【推荐系统的知识图谱卷积网络】&lt;/li&gt;
&lt;li&gt;KGAT: Knowledge Graph Attention Network for Recommendation. KDD 2019 【推荐的知识图谱注意力机制网络】&lt;/li&gt;
&lt;li&gt;Session-based recommendation with graph neural networks. AAAI 2019 【基于图神经网络的会话推荐】&lt;/li&gt;
&lt;li&gt;Graph contextualized self-attention network for session-based recommendation. IJCAI 2019 【针对会话推荐的图上下文自注意力网络】&lt;/li&gt;
&lt;li&gt;Session-based social recommendation via dynamic graph attention networks. WSDM 2019 【通过动态图注意力网络进行会话的社交推荐】&lt;/li&gt;
&lt;li&gt;Bundle Recommendation with Graph Convolutional Networks. SIGIR 2020 【基于图卷积网络的捆绑推荐 】&lt;/li&gt;
&lt;li&gt;Fi-GNN: Modeling Feature Interactions via Graph Neural Networks for CTR Prediction. WWW 2019 【CTR 预测中基于图神经网络的特征交互建模】&lt;/li&gt;
&lt;li&gt;LightGCN: Simplifying and Powering Graph Convolution Network for Recommendation. SIGIR 2020 【推荐中的简化图神经网络】&lt;/li&gt;
&lt;li&gt;Neighbor Interaction Aware Graph Convolution Networks for Recommendation. SIGIR 2020 【邻域交互感知图卷积网络】&lt;/li&gt;
&lt;li&gt;GAG: Global Attributed Graph Neural Network for Streaming Session-based Recommendation. SIGIR 2020 【基于流会话推荐的全局属性图神经网络】&lt;/li&gt;
&lt;li&gt;Next-item Recommendation with Sequential Hypergraphs. SIGIR 2020 【序列推荐中的超图】&lt;/li&gt;
&lt;li&gt;Global Context Enhanced Graph Neural Networks for Session-based Recommendation. SIGIR 2020 【上下文增强的图神经网络】&lt;/li&gt;
&lt;li&gt;CKAN: Collaborative Knowledge-aware Attentive Network for Recommender Systems. SIGIR 2020 【推荐系统的协同知识感知注意力网络】&lt;/li&gt;
&lt;li&gt;Attentional Graph Convolutional Networks for Knowledge Concept Recommendation in MOOCs in a Heterogeneous View. SIGIR 2020 【MOOC 知识概念推荐的注意力图卷积网络】&lt;/li&gt;
&lt;li&gt;Joint Item Recommendation and Attribute Inference: An Adaptive Graph Convolutional Network Approach. SIGIR 2020 【结合物品推荐和属性推理的自适应图卷积网络】&lt;/li&gt;
&lt;li&gt;Multi-behavior Recommendation with Graph Convolution Networks. SIGIR 2020 【基于图卷积网络的多行为推荐】&lt;/li&gt;
&lt;li&gt;Hierarchical Fashion Graph Network for Personalized Outfit Recommendation. SIGIR 2020&lt;/li&gt;
&lt;li&gt;A Framework for Recommending Accurate and Diverse Items Using Bayesian Graph Convolutional Neural Networks. KDD 2020 【贝叶斯图卷积神经网络】&lt;/li&gt;
&lt;li&gt;Dual Channel Hypergraph Collaborative Filtering. KDD 2020 【双通道超图的协同过滤】&lt;/li&gt;
&lt;li&gt;Handling Information Loss of Graph Neural Networks for Session-based Recommendation. KDD 2020 【基于会话推荐的图神经网络信息丢失处理】&lt;/li&gt;
&lt;li&gt;Star Graph Neural Networks for Session-based Recommendation. CIKM 2020 【基于会话推荐的星形图神经网络】&lt;/li&gt;
&lt;li&gt;TGCN Tag Graph Convolutional Network for Tag-Aware Recommendation. CIKM 2020 【标签图卷积网络】&lt;/li&gt;
&lt;li&gt;DisenHAN Disentangled Heterogeneous Graph Attention Network for Recommendation. CIKM 2020 【异构图注意网络】&lt;/li&gt;
&lt;li&gt;STP-UDGAT Spatial-Temporal-Preference User Dimensional Graph Attention Network for Next POI Recommendation. CIKM 2020 【POI 推荐的时空偏好用户维图注意力网络】&lt;/li&gt;
&lt;li&gt;Self-Supervised Hypergraph Convolutional Networks for Session-based Recommendation. AAAI 2021 【自监督超图卷积网络】&lt;/li&gt;
&lt;li&gt;Sequential Recommendation with Graph Convolutional Networks. SIGIR 2021 【引入图卷积网络的序列推荐】&lt;/li&gt;
&lt;li&gt;Structured Graph Convolutional Networks with Stochastic Masks for Recommender Systems. SIGIR 2021 【推荐系统随机掩模的结构化图卷积网络】&lt;/li&gt;
&lt;li&gt;Adversarial-Enhanced Hybrid Graph Network for User Identity Linkage. SIGIR 2021 【用户身份链接的对抗性增强混合图网络】&lt;/li&gt;
&lt;li&gt;Should Graph Convolution Trust Neighbors? A Simple Causal Inference Method. SIGIR 2021 【因果推断方法分析图卷积网络】&lt;/li&gt;
&lt;li&gt;A Graph-Convolutional Ranking Approach to Leverage the Relational Aspects of User-Generated Content. SIGIR 2021 【图卷积排序方法】&lt;/li&gt;
&lt;li&gt;Neural Graph Matching based Collaborative Filtering. SIGIR 2021 【基于神经图匹配的协同过滤】&lt;/li&gt;
&lt;li&gt;Modeling Intent Graph for Search Result Diversification. SIGIR 2021 【建模意向网络用于搜索结果多样性】&lt;/li&gt;
&lt;li&gt;User-Centric Path Reasoning towards Explainable Recommendation. SIGIR 2021 【以用户为中心的路径推理进行可解释推荐】&lt;/li&gt;
&lt;li&gt;Joint Knowledge Pruning and Recurrent Graph Convolution for News Recommendation. SIGIR 2021 【新闻推荐中的联合知识剪枝和递归图卷积】&lt;/li&gt;
&lt;li&gt;Privileged Graph Distillation for Cold-start Recommendation. SIGIR 2021 【冷启动推荐的特权图蒸馏】&lt;/li&gt;
&lt;li&gt;Decoupling Representation Learning and Classification for GNN-based Anomaly Detection. SIGIR 2021 【基于 GNN 的异常检测】&lt;/li&gt;
&lt;li&gt;Meta-Inductive Node Classification across Graphs. SIGIR 2021 【跨图的元归纳节点分类】&lt;/li&gt;
&lt;li&gt;Graph Meta Network for Multi-Behavior Recommendation with Interaction Heterogeneity and Diversity. SIGIR 2021 【结合交互异质性和多样性的多行为推荐图元网络】&lt;/li&gt;
&lt;li&gt;AdsGNN: Behavior-Graph Augmented Relevance Modeling in Sponsored Search. SIGIR 2021 【赞助搜索中的行为图增强建模】&lt;/li&gt;
&lt;li&gt;Enhanced Graph Learning for Collaborative Filtering via Mutual Information Maximization. SIGIR 2021 【通过互信息最大化进行图协同过滤】&lt;/li&gt;
&lt;li&gt;WGCN: Graph Convolutional Networks with Weighted Structural Features. SIGIR 2021 【结合加权结构特征的图卷积网络】&lt;/li&gt;
&lt;li&gt;Learning Representations of Inactive Users: A Cross Domain Approach with Graph Neural Networks. CIKM 2021【short paper，跨领域方法结合图神经网络用于学习非活跃用户表示】&lt;/li&gt;
&lt;li&gt;Heterogeneous Graph Augmented Multi-Scenario Sharing Recommendation with Tree-Guided Expert Networks. WSDM 2021 【基于树引导专家网络的异构图增强多场景共享推荐】&lt;/li&gt;
&lt;li&gt;Pre-Training Graph Neural Networks for Cold-Start Users and Items Representation. WSDM 2021 【冷启动用户和物品表示的预训练图神经网络】&lt;/li&gt;
&lt;li&gt;Diversified Recommendation Through Similarity-Guided Graph Neural Networks. WWW 2021 【基于相似引导图神经网络的多样化推荐】&lt;/li&gt;
&lt;li&gt;DGCN: Diversified Recommendation with Graph Convolutional Networks.  WWW 2021. &lt;a class=&#34;link&#34; href=&#34;http://fi.ee.tsinghua.edu.cn/public/publications/b344fd48-92b0-11eb-96bc-0242ac120003.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PDF&lt;/a&gt; 【使用图卷积网络的多样化推荐】&lt;/li&gt;
&lt;li&gt;Interest-aware Message-Passing GCN for Recommendation. WWW 2021 【兴趣感知的图卷积网络】&lt;/li&gt;
&lt;li&gt;HGCF: Hyperbolic Graph Convolution Networks for Collaborative Filtering. WWW 2021 【双曲图卷积网络】&lt;/li&gt;
&lt;li&gt;Self-Supervised Multi-Channel Hypergraph Convolutional Network for Social Recommendation. WWW 2021 【用于社交推荐的自监督多通道超图卷积网络】&lt;/li&gt;
&lt;li&gt;RetaGNN: Relational Temporal Attentive Graph Neural Networks for Holistic Sequential Recommendation. WWW 2021 【关系时间注意的图神经网络】&lt;/li&gt;
&lt;li&gt;Learning Intents behind Interactions with Knowledge Graph for Recommendation. WWW 2021 【知识增强推荐的意图学习】&lt;/li&gt;
&lt;li&gt;A Knowledge-Aware Recommender with Attention-Enhanced Dynamic Convolutional Network. CIKM 2021【动态卷积用于知识感知的推荐】&lt;/li&gt;
&lt;li&gt;Double-Scale Self-Supervised Hypergraph Learning for Group Recommendation. CIKM 2021【用于群组推荐的自监督超图学习】&lt;/li&gt;
&lt;li&gt;Conditional Graph Attention Networks for Distilling and Refining Knowledge Graphs in Recommendation. CIKM 2021【GNN+KG+RS】&lt;/li&gt;
&lt;li&gt;Contrastive Pre-Training of GNNs on Heterogeneous Graphs. CIKM 2021【图神经网络的对比预训练】&lt;/li&gt;
&lt;li&gt;Entity-aware Collaborative Relation Network with Knowledge Graph for Recommendation. CIKM 2021【short paper，KG+RS】&lt;/li&gt;
&lt;li&gt;Incremental Graph Convolutional Network for Collaborative Filtering. CIKM 2021【增量图卷积神经网络用于协同过滤】&lt;/li&gt;
&lt;li&gt;Self-supervised Graph Learning for Recommendation. SIGIR 2021 【推荐的自监督图学习】&lt;/li&gt;
&lt;li&gt;Self-Augmented Recommendation with Hypergraph Contrastive Collaborative Filtering. SIGIR 2022 【超图上的对比学习】&lt;/li&gt;
&lt;li&gt;Investigating Accuracy-Novelty Performance for Graph-based Collaborative Filtering. SIGIR 2022 【图协同过滤在准确度和新颖度上的表现】&lt;/li&gt;
&lt;li&gt;A Review-aware Graph Contrastive Learning Framework for Recommendation. SIGIR 2022 【考虑评论的图对比学习】&lt;/li&gt;
&lt;li&gt;Are Graph Augmentations Necessary? Simple Graph Contrastive Learning for Recommendation. SIGIR 2022 【简单的图对比学习方法】&lt;/li&gt;
&lt;li&gt;Spatiotemporal-aware Session-based Recommendation with Graph Neural Networks. CIKM 2022 【使用图神经网络的时空感知基于会话的推荐】&lt;/li&gt;
&lt;li&gt;CORE: Simple and Effective Session-based Recommendation within Consistent Representation Space. SIGIR 2022 【short paper，在一致表示空间上的简单有效会话推荐】&lt;/li&gt;
&lt;li&gt;Enhancing Sequential Recommendation with Graph Contrastive Learning. IJCAI 2022 【用于序列推荐的图对比学习】&lt;/li&gt;
&lt;li&gt;GSL4Rec: Session-based Recommendations with Collective Graph Structure Learning and Next Interaction Prediction. WWW 2022 【图结构学习+推荐】&lt;/li&gt;
&lt;li&gt;DSKReG: Differentiable Sampling on Knowledge Graph for Recommendation with Relational GNN. CIKM 2021【short paper，用于推荐的知识图谱采样】&lt;/li&gt;
&lt;li&gt;UltraGCN: Ultra Simplification of Graph Convolutional Networks for Recommendation. CIKM 2021【GNN+RS】&lt;/li&gt;
&lt;li&gt;How Powerful is Graph Convolution for Recommendation? CIKM 2021【GNN+RS】&lt;/li&gt;
&lt;li&gt;Concept-Aware Denoising Graph Neural Network for Micro-Video Recommendation. CIKM 2021【用于微视频推荐的去噪GNN】&lt;/li&gt;
&lt;li&gt;Graph Logic Reasoning for Recommendation and Link Prediction. WSDM 2022【用于推荐和链接预测的图逻辑推理】&lt;/li&gt;
&lt;li&gt;Heterogeneous Global Graph Neural Networks for Personalized Session-based Recommendation. WSDM 2022【用于个性化基于会话的推荐的异构全局图神经网络】&lt;/li&gt;
&lt;li&gt;Profiling the Design Space for Graph Neural Networks based Collaborative Filtering. WSDM 2022【分析基于图神经网络的协同过滤的设计空间】&lt;/li&gt;
&lt;li&gt;Community Trend Prediction on Heterogeneous Graph in E-commerce. WSDM 2022【电子商务异构图的社区趋势预测】&lt;/li&gt;
&lt;li&gt;Joint Learning of E-commerce Search and Recommendation with A Unified Graph Neural Network. WSDM 2022【电子商务搜索和推荐与统一图神经网络的联合学习】&lt;/li&gt;
&lt;li&gt;Modeling Scale-free Graphs with Hyperbolic Geometry for Knowledge-aware Recommendation. WSDM 2022【使用双曲几何建模无标度图以进行知识感知推荐】&lt;/li&gt;
&lt;li&gt;Approximate Nearest Neighbor Search under Neural Similarity Metric for Large-Scale Recommendation. CIKM 2022 【大规模推荐的神经相似度度量下的近似最近邻搜索】&lt;/li&gt;
&lt;li&gt;Automatic Meta-Path Discovery for Effective Graph-Based Recommendation. CIKM 2022 【基于图的有效推荐的自动元路径发现】&lt;/li&gt;
&lt;li&gt;HySAGE: A Hybrid Static and Adaptive Graph Embedding Network for Context-Drifting Recommendations. CIKM 2022 【用于上下文漂移推荐的混合静态和自适应图嵌入网络】&lt;/li&gt;
&lt;li&gt;Multi-Aggregator Time-Warping Heterogeneous Graph Neural Network for Personalized Micro-video Recommendation. CIKM 2022 【用于个性化微视频推荐的多聚合器时间扭曲异构图神经网络】&lt;/li&gt;
&lt;li&gt;PlatoGL: Effective and Scalable Deep Graph Learning System for Graph-enhanced Real-Time Recommendation. CIKM 2022 【用于图增强实时推荐的有效且可扩展的深度图学习系统】&lt;/li&gt;
&lt;li&gt;SVD-GCN: A Simplified Graph Convolution Paradigm for Recommendation. CIKM 2022 【用于推荐的简化图卷积范式】&lt;/li&gt;
&lt;li&gt;The Interaction Graph Auto-encoder Network Based on Topology-aware for Transferable Recommendation. CIKM 2022 【基于拓扑感知的可迁移推荐交互图自动编码器网络】&lt;/li&gt;
&lt;li&gt;Tiger: Transferable Interest Graph Embedding for Domain-Level Zero-Shot Recommendation. CIKM 2022 【用于域级零样本推荐的可迁移兴趣图嵌入】&lt;/li&gt;
&lt;li&gt;Learning Binarized Graph Representations with Multi-faceted Quantization Reinforcement for Top-K Recommendation. KDD 2022 【多面量化增强】&lt;/li&gt;
&lt;li&gt;User-Event Graph Embedding Learning for Context-Aware Recommendation. KDD 2022 【CTR 任务引入用户-事件图进行表示学习】&lt;/li&gt;
&lt;li&gt;Self-Supervised Hypergraph Transformer for Recommender Systems. KDD 2022 【自监督超图增强用户表示】&lt;/li&gt;
&lt;li&gt;Friend Recommendations with Self-Rescaling Graph Neural Networks. KDD 2022 【自放缩解决尺度失真】&lt;/li&gt;
&lt;li&gt;Low-Pass Graph Convolutional Network for Recommendation. AAAI 2022 【提出了低通协同滤波器】&lt;/li&gt;
&lt;li&gt;Multi-View Intent Disentangle Graph Networks for Bundle Recommendation. AAAI 2022 【多意图捆绑推荐】&lt;/li&gt;
&lt;li&gt;MixGCF: An Improved Training Method for Graph Neural Network-based Recommender Systems. KDD 2021 【高效图神经网络训练】&lt;/li&gt;
&lt;li&gt;Multi-view Denoising Graph Auto-Encoders on Heterogeneous Information Networks for Cold-start Recommendation. KDD 2021 【面向冷启动推荐的异构信息网络多视图去噪图自动编码器】&lt;/li&gt;
&lt;li&gt;Reinforced Anchor Knowledge Graph Generation for News Recommendation Reasoning. KDD 2021 【新闻推荐推理的增强锚点知识图生成】&lt;/li&gt;
&lt;li&gt;Detecting Arbitrary Order Beneficial Feature Interactions for Recommender Systems. KDD 2022 【超图捕获任意阶交互】&lt;/li&gt;
&lt;li&gt;Learning to Denoise Unreliable Interactions for Graph Collaborative Filtering. SIGIR 2022 【数据去噪】&lt;/li&gt;
&lt;li&gt;Hierarchical Multi-Task Graph Recurrent Network for Next POI Recommendation. SIGIR 2022 【多任务图循环网络】&lt;/li&gt;
&lt;li&gt;An Attribute-Driven Mirroring Graph Network for Session-based Recommendation. SIGIR 2022 【特征驱动的反射图网络】&lt;/li&gt;
&lt;li&gt;Co-clustering Interactions via Attentive Hypergraph Neural Network. SIGIR 2022 【超图神经网络聚类交互】&lt;/li&gt;
&lt;li&gt;Multi-level Cross-view Contrastive Learning for Knowledge-aware Recommender System. SIGIR 2022 【多级交叉视图的对比学习】&lt;/li&gt;
&lt;li&gt;Graph Trend Filtering Networks for Recommendation. SIGIR 2022 【图趋势过滤网络】&lt;/li&gt;
&lt;li&gt;Knowledge Graph Contrastive Learning for Recommendation. SIGIR 2022 【知识图谱上的对比学习】&lt;/li&gt;
&lt;li&gt;EFLEC: Efficient Feature-LEakage Correction in GNN based Recommendation Systems. SIGIR 2022 【short paper，高效的特征泄露修正】&lt;/li&gt;
&lt;li&gt;DH-HGCN: Dual Homogeneity Hypergraph Convolutional Network for Multiple Social Recommendations. SIGIR 2022 【short paper，双同质超图卷积网络】&lt;/li&gt;
&lt;li&gt;Enhancing Hypergraph Neural Networks with Intent Disentanglement for Session-based RecommendationSIGIR 2022 【short paper，意图解耦增强超图神经网络】&lt;/li&gt;
&lt;li&gt;DAGNN: Demand-aware Graph Neural Networks for Session-based Recommendation. SIGIR 2022 【short paper， 需求感知的图神经网络】&lt;/li&gt;
&lt;li&gt;Global and Personalized Graphs for Heterogeneous Sequential Recommendation by Learning Behavior Transitions and User Intentions. RecSys 2022 【异构序列推荐中通过全局和个性化的图建模学习行为转换和用户意图】&lt;/li&gt;
&lt;li&gt;TinyKG: Memory-Efficient Training Framework for Knowledge Graph Neural Recommender Systems. RecSys 2022 【知识图神经推荐系统的内存高效训练框架】&lt;/li&gt;
&lt;li&gt;Streaming Session-Based Recommendation: When Graph Neural Networks meet the Neighborhood. RecSys 2022【Reproducibility paper，图神经网络解决流会话推荐问题】&lt;/li&gt;
&lt;li&gt;Heterogeneous Interactive Snapshot Network for Review-Enhanced Stock Profiling and Recommendation. IJCAI 2022 【评论增强的股票分析和推荐】&lt;/li&gt;
&lt;li&gt;Self-supervised Graph Neural Networks for Multi-behavior Recommendation. IJCAI 2022 【GNN + 多行为推荐】&lt;/li&gt;
&lt;li&gt;RecipeRec: A Heterogeneous Graph Learning Model for Recipe Recommendation. IJCAI 2022 【用于食谱推荐的新型异构图学习模型】&lt;/li&gt;
&lt;li&gt;Graph Convolution Network based Recommender Systems: Learning Guarantee and Item Mixture Powered Strategy. NIPS 2022 【基于图卷积网络的推荐系统：学习保证和商品混合驱动策略】&lt;/li&gt;
&lt;li&gt;Contrastive Graph Structure Learning via Information Bottleneck for Recommendation. NIPS 2022 【基于信息瓶颈的对比图结构学习】&lt;/li&gt;
&lt;li&gt;Improving Graph Collaborative Filtering with Neighborhood-enriched Contrastive Learning. WWW 2022 【通过邻居节点间的对比学习来改善图协同过滤】&lt;/li&gt;
&lt;li&gt;Revisiting Graph based Social Recommendation: A Distillation Enhanced Social Graph Network. WWW 2022 【使用知识蒸馏来融入user-item交互图和user-user社交图的信息】&lt;/li&gt;
&lt;li&gt;STAM: A Spatiotemporal Aggregation Method for Graph Neural Network-based Recommendation. WWW 2022 【同时聚合时空领域信息】&lt;/li&gt;
&lt;li&gt;Hypercomplex Graph Collaborative Filtering. WWW 2022 【超复图协同过滤】&lt;/li&gt;
&lt;li&gt;Graph Neural Transport Networks with Non-local Attentions for Recommender Systems. WWW 2022 【使用非局部注意力来实现不加深GNN的同时捕捉节点间的长距离依赖】&lt;/li&gt;
&lt;li&gt;FIRE: Fast Incremental Recommendation with Graph Signal Processing. WWW 2022 【通过图信号处理来实现快速增量推荐】&lt;/li&gt;
&lt;li&gt;Large-scale Personalized Video Game Recommendation via Social-aware Contextualized Graph Neural Network. WWW 202 【同时考虑个性化，游戏上下文，社交联系】&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;contrastive-learning-based&#34;&gt;Contrastive Learning based
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Self-supervised Graph Learning for Recommendation. SIGIR 2021 【推荐的自监督图学习】&lt;/li&gt;
&lt;li&gt;The World is Binary: Contrastive Learning for Denoising Next Basket Recommendation. SIGIR 2021 【通过对比学习对下一篮推荐问题去噪】&lt;/li&gt;
&lt;li&gt;Contrastive Pre-Training of GNNs on Heterogeneous Graphs. CIKM 2021【图神经网络的对比预训练】&lt;/li&gt;
&lt;li&gt;Hyperbolic Hypergraphs for Sequential Recommendation. CIKM 2021【使用双曲超图进行序列推荐】&lt;/li&gt;
&lt;li&gt;Contrastive Curriculum Learning for Sequential User Behavior Modeling via Data Augmentation. CIKM 2021【applied paper，通过数据增强进行序列用户行为建模的对比课程学习】&lt;/li&gt;
&lt;li&gt;Semi-deterministic and Contrastive Variational Graph Autoencoder for Recommendation. CIKM 2021【用于推荐的半确定性和对比变分图自动编码器】&lt;/li&gt;
&lt;li&gt;Double-Scale Self-Supervised Hypergraph Learning for Group Recommendation. CIKM 2021【用于群组推荐的自监督超图学习】&lt;/li&gt;
&lt;li&gt;Contrastive Meta Learning with Behavior Multiplicity for Recommendation. WSDM 2022【具有行为多样性的对比元学习推荐】&lt;/li&gt;
&lt;li&gt;Contrastive Learning for Representation Degeneration Problem in Sequential Recommendation. WSDM 2022【序列推荐中表征退化问题的对比学习】&lt;/li&gt;
&lt;li&gt;C2-CRS: Coarse-to-Fine Contrastive Learning for Conversational Recommender System. WSDM 2022【对话式推荐系统的粗到细对比学习】&lt;/li&gt;
&lt;li&gt;Prototypical Contrastive Learning And Adaptive Interest Selection for Candidate Generation in Recommendations. CIKM 2022 【候选生成的原型对比学习和自适应兴趣选择】&lt;/li&gt;
&lt;li&gt;Multi-level Contrastive Learning Framework for Sequential Recommendation. CIKM 2022 【序列推荐多层次对比学习框架】&lt;/li&gt;
&lt;li&gt;Contrastive Learning with Bidirectional Transformers for Sequential Recommendation. CIKM 2022 【用于序列推荐的双向 Transformer 对比学习】&lt;/li&gt;
&lt;li&gt;Improving Knowledge-aware Recommendation with Multi-level Interactive Contrastive Learning. CIKM 2022 【通过多层次交互式对比学习改进知识感知推荐】&lt;/li&gt;
&lt;li&gt;Contrastive Cross-Domain Sequential Recommendation. CIKM 2022 【对比跨域序列推荐】&lt;/li&gt;
&lt;li&gt;MIC:Model-agnostic Integrated Cross-channel Recommender. CIKM 2022 【与模型无关的集成跨渠道推荐器】&lt;/li&gt;
&lt;li&gt;Temporal Contrastive Pre-Training for Sequential Recommendation. CIKM 2022 【时序推荐的时间对比预训练】&lt;/li&gt;
&lt;li&gt;Explanation Guided Contrastive Learning for Sequential Recommendation. CIKM 2022 【序列推荐的解释引导对比学习】&lt;/li&gt;
&lt;li&gt;Contrastive Cross-domain Recommendation in Matching. KDD 2022 【对比学习捕获用户兴趣】&lt;/li&gt;
&lt;li&gt;A Review-aware Graph Contrastive Learning Framework for Recommendation. SIGIR 2022 【考虑评论的图对比学习】&lt;/li&gt;
&lt;li&gt;Are Graph Augmentations Necessary? Simple Graph Contrastive Learning for Recommendation. SIGIR 2022 【简单的图对比学习方法】&lt;/li&gt;
&lt;li&gt;Knowledge Graph Contrastive Learning for Recommendation. SIGIR 2022 【知识图谱上的对比学习】&lt;/li&gt;
&lt;li&gt;Self-Augmented Recommendation with Hypergraph Contrastive Collaborative Filtering. SIGIR 2022 【超图上的对比学习】&lt;/li&gt;
&lt;li&gt;Multi-level Cross-view Contrastive Learning for Knowledge-aware Recommender System. SIGIR 2022 【多级交叉视图的对比学习】&lt;/li&gt;
&lt;li&gt;Dual Contrastive Network for Sequential Recommendation. SIGIR 2022 【short paper，双对比网络】&lt;/li&gt;
&lt;li&gt;Improving Micro-video Recommendation via Contrastive Multiple Interests. SIGIR 2022 【short paper，对比多兴趣提升短视频推荐】&lt;/li&gt;
&lt;li&gt;An MLP-based Algorithm for Efficient Contrastive Graph Recommendations. SIGIR 2022 【short paper，基于MLP的算法实现高效图对比】&lt;/li&gt;
&lt;li&gt;Multi-modal Graph Contrastive Learning for Micro-video Recommendation. SIGIR 2022 【short paper，多模态图对比学习】&lt;/li&gt;
&lt;li&gt;Towards Results-level Proportionality for Multi-objective Recommender Systems. SIGIR 2022 【short paper，动量对比方法实现结果均衡的多目标推荐系统】&lt;/li&gt;
&lt;li&gt;Socially-aware Dual Contrastive Learning for Cold-Start Recommendation. SIGIR 2022 【short paper，社交感知的双重对比学习】&lt;/li&gt;
&lt;li&gt;Exploiting Negative Preference in Content-based Music Recommendation with Contrastive Learning. RecSys 2022 【利用对比学习挖掘基于内容的音乐推荐中的负面偏好】&lt;/li&gt;
&lt;li&gt;Enhancing Sequential Recommendation with Graph Contrastive Learning. IJCAI 2022 【用于序列推荐的图对比学习】&lt;/li&gt;
&lt;li&gt;Intent Contrastive Learning for Sequential Recommendation. WWW 2022 【利用用户意图来增强序列推荐】&lt;/li&gt;
&lt;li&gt;A Contrastive Sharing Model for Multi-Task Recommendation. WWW 2022 【使用对比掩码来解决多任务中的参数冲突问题】&lt;/li&gt;
&lt;li&gt;Trading Hard Negatives and True Negatives: A Debiased Contrastive Collaborative Filtering Approach. IJCAI 2022 【探索正确的负样本】&lt;/li&gt;
&lt;li&gt;Contrastive Graph Structure Learning via Information Bottleneck for Recommendation. NIPS 2022 【基于信息瓶颈的对比图结构学习】&lt;/li&gt;
&lt;li&gt;Improving Graph Collaborative Filtering with Neighborhood-enriched Contrastive Learning. WWW 2022 【通过邻居节点间的对比学习来改善图协同过滤】&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;adversarial-learning-based&#34;&gt;Adversarial Learning based
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;PD-GAN: Adversarial Learning for Personalized Diversity-Promoting Recommendation. IJCAI 2019. &lt;a class=&#34;link&#34; href=&#34;https://www.ijcai.org/proceedings/2019/0537.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PDF&lt;/a&gt; 【考虑推荐多样性的对抗性学习】&lt;/li&gt;
&lt;li&gt;Sequential Recommendation with Self-attentive Multi-adversarial Network. SIGIR 2020 【自注意力机制的多对抗网络】&lt;/li&gt;
&lt;li&gt;Revisiting Adversarially Learned Injection Attacks Against Recommender Systems. RecSys 2020 【推荐系统对抗学习的注入攻击】&lt;/li&gt;
&lt;li&gt;Fairness-Aware News Recommendation with Decomposed Adversarial Learning. AAAI 2021 【基于分解对抗学习的公平新闻推荐】&lt;/li&gt;
&lt;li&gt;User Simulation via Supervised Generative Adversarial Network. WWW 2021 【通过监督生成对抗网络进行用户仿真模拟】&lt;/li&gt;
&lt;li&gt;A Study of Defensive Methods to Protect Visual Recommendation Against Adversarial Manipulation of Images. SIGIR 2021 【保护视觉推荐免受图像对抗性操纵的防御方法研究】&lt;/li&gt;
&lt;li&gt;Adversarial Feature Translation for Multi-domain Recommendation. KDD 2021 【对抗特征迁移多任务学习】&lt;/li&gt;
&lt;li&gt;Adversarial Gradient Driven Exploration for Deep Click-Through Rate Prediction. KDD 2022 【CTR EE 探索】&lt;/li&gt;
&lt;li&gt;Triple Adversarial Learning for Influence based Poisoning Attack in Recommender Systems. KDD 2021 【三元对抗学习在推荐系统中毒攻击】&lt;/li&gt;
&lt;li&gt;Adversarial Filtering Modeling on Long-term User Behavior Sequences for Click-Through Rate Prediction. SIGIR 2022 【short paper，对抗过滤建模用户长期行为序列】&lt;/li&gt;
&lt;li&gt;Mitigating Consumer Biases in Recommendations with Adversarial Training. SIGIR 2022 【short paper，对抗训练去偏】&lt;/li&gt;
&lt;li&gt;Generative Adversarial Framework for Cold-Start Item Recommendation. SIGIR 2022 【short paper，针对冷启动商品的生成对抗框架】&lt;/li&gt;
&lt;li&gt;Adversarial Graph Perturbations for Recommendations at Scale. SIGIR 2022 【short paper，大规模推荐中的对抗图扰动】&lt;/li&gt;
&lt;li&gt;The Idiosyncratic Effects of Adversarial Training on Bias in Personalized Recommendation Learning. RecSys 2021 【LBR，对抗训练对流行度偏差的影响研究】&lt;/li&gt;
&lt;li&gt;Adversary or Friend? An Adversarial Approach to Improving Recommender Systems. RecSys 2022 【对抗式方法促进推荐系统公平性】&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;autoencoder-based&#34;&gt;Autoencoder based
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Deep Critiquing for VAE-based Recommender Systems. SIGIR 2020 【基于 VAE 推荐系统的深度评判】&lt;/li&gt;
&lt;li&gt;TAFA: Two-headed Attention Fused Autoencoder for Context-Aware Recommendations. RecSys 2020 【用于上下文感知推荐的双头注意力融合自编码器】&lt;/li&gt;
&lt;li&gt;Adversarial and Contrastive Variational Autoencoder for Sequential Recommendation. WWW 2021 【对抗和对比式变分自动编码器】&lt;/li&gt;
&lt;li&gt;Bilateral Variational Autoencoder for Collaborative Filtering. WSDM 2021 【用于协同过滤的双向变分自动编码器】&lt;/li&gt;
&lt;li&gt;Local Collaborative Autoencoders. WSDM 2021 【局部的协同自编码器】&lt;/li&gt;
&lt;li&gt;Vector-Quantized Autoencoder With Copula for Collaborative Filtering. CIKM 2021【short paper，用于协同过滤的矢量量化自动编码器】&lt;/li&gt;
&lt;li&gt;Semi-deterministic and Contrastive Variational Graph Autoencoder for Recommendation. CIKM 2021【用于推荐的半确定性和对比变分图自动编码器】&lt;/li&gt;
&lt;li&gt;Disentangling Preference Representations for Recommendation Critiquing with $\beta$-VAE. CIKM 2021【用于推荐的 VAE 偏好表示】&lt;/li&gt;
&lt;li&gt;The Interaction Graph Auto-encoder Network Based on Topology-aware for Transferable Recommendation. CIKM 2022 【基于拓扑感知的可迁移推荐交互图自动编码器网络】&lt;/li&gt;
&lt;li&gt;ContrastVAE: Contrastive Variational AutoEncoder for Sequential Recommendation. CIKM 2022 【用于序列推荐的对比变分自动编码器】&lt;/li&gt;
&lt;li&gt;Vector-Quantized Autoencoder With Copula for Collaborative Filtering. CIKM 2021【short paper，用于协同过滤的矢量量化自动编码器】&lt;/li&gt;
&lt;li&gt;VAE++: Variational AutoEncoder for Heterogeneous One-Class Collaborative Filtering. WSDM 2022【异构单类协同过滤的变分自动编码器】&lt;/li&gt;
&lt;li&gt;Debiasing Learning for Membership Inference Attacks Against Recommender Systems. KDD 2022 【VAE 去偏】&lt;/li&gt;
&lt;li&gt;Multi-view Denoising Graph Auto-Encoders on Heterogeneous Information Networks for Cold-start Recommendation. KDD 2021 【异构信息网络多视图去噪图自动编码器实现冷启动】&lt;/li&gt;
&lt;li&gt;PEVAE: A hierarchical VAE for personalized explainable recommendation. SIGIR 2022 【利用层次化VAE进行个性化可解释推荐】&lt;/li&gt;
&lt;li&gt;Improving Item Cold-start Recommendation via Model-agnostic Conditional Variational Autoencoder. SIGIR 2022 【short paper，模型无关的自编码器提升商品冷启动推荐】&lt;/li&gt;
&lt;li&gt;Mitigating the Filter Bubble while Maintaining Relevance: Targeted Diversification with VAE-based Recommender Systems. SIGIR 2022 【short paper，定向多样化】&lt;/li&gt;
&lt;li&gt;Cold Start Similar Artists Ranking with Gravity-Inspired Graph Autoencoders. RecSys 2021 【图自动编码器冷启动相似艺术家排序问题】&lt;/li&gt;
&lt;li&gt;Fast Multi-Step Critiquing for VAE-based Recommender Systems. RecSys 2021 【基于多模态建模假设的变分自动编码器】&lt;/li&gt;
&lt;li&gt;Towards Source-Aligned Variational Models for Cross-Domain Recommendation. RecSys 2021 【变分自动编码器用于跨域推荐】&lt;/li&gt;
&lt;li&gt;Scalable Linear Shallow Autoencoder for Collaborative Filtering. RecSys 2022 【LBR，用于协同过滤的可扩展线性浅层自动编码器】&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;meta-learning-based&#34;&gt;Meta Learning-based
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Meta-learning on Heterogeneous Information Networks for Cold-start Recommendation. KDD 2020 【异构信息网络的元学习用于冷启动推荐】&lt;/li&gt;
&lt;li&gt;MAMO: Memory-Augmented Meta-Optimization for Cold-start Recommendation. KDD 2020 【冷启动推荐的内存增强元优化】&lt;/li&gt;
&lt;li&gt;Curriculum Meta-Learning for Next POI Recommendation. KDD 2021 【基于元学习的下一代兴趣点推荐系统】&lt;/li&gt;
&lt;li&gt;Cold-Start Sequential Recommendation via Meta Learner. AAAI 2021 【通过元学习冷启动序列推荐】&lt;/li&gt;
&lt;li&gt;Personalized Adaptive Meta Learning for Cold-start User Preference Prediction. AAAI 2021 【用于冷启动用户偏好预测的个性化自适应元学习】&lt;/li&gt;
&lt;li&gt;FORM: Follow the Online Regularized Meta-Leader for Cold-Start Recommendation. SIGIR 2021 【遵循在线规范化的元领导者进行冷启动推荐】&lt;/li&gt;
&lt;li&gt;Learning to Warm Up Cold Item Embeddings for Cold-start Recommendation with Meta Scaling and Shifting Networks. SIGIR 2021 【元缩放和偏移网络进行冷启动推荐】&lt;/li&gt;
&lt;li&gt;Learning Graph Meta Embeddings for Cold-Start Ads in Click-Through Rate Prediction. SIGIR 2021 【点击率预测中冷启动广告】&lt;/li&gt;
&lt;li&gt;CBML: A Cluster-based Meta-learning Model for Session-based Recommendation. CIKM 2021【用于会话推荐的基于聚类的元学习】&lt;/li&gt;
&lt;li&gt;CMML: Contextual Modulation Meta Learning for Cold-Start Recommendation. CIKM 2021【元学习+冷启动】&lt;/li&gt;
&lt;li&gt;Multimodal Graph Meta Contrastive Learning. CIKM 2021【short paper，多模态元图对比学习】&lt;/li&gt;
&lt;li&gt;Multimodal Meta-Learning for Cold-Start Sequential Recommendation. CIKM 2022 【冷启动序列推荐的多模态元学习】&lt;/li&gt;
&lt;li&gt;Curriculum Meta-Learning for Next POI Recommendation. KDD 2021 【基于元学习的下一代兴趣点推荐系统】&lt;/li&gt;
&lt;li&gt;Contrastive Meta Learning with Behavior Multiplicity for Recommendation. WSDM 2022【具有行为多样性的对比元学习推荐】&lt;/li&gt;
&lt;li&gt;Long Short-Term Temporal Meta-learning in Online Recommendation. WSDM 2022【在线推荐中的长短期时间元学习】&lt;/li&gt;
&lt;li&gt;Leaving No One Behind: A Multi-Scenario Multi-Task Meta Learning Approach for Advertiser Modeling. WSDM 2022【一种用于广告商建模的多场景多任务元学习方法】&lt;/li&gt;
&lt;li&gt;Contrastive Meta Learning with Behavior Multiplicity for Recommendation. WSDM 2022【具有行为多样性的对比元学习推荐】&lt;/li&gt;
&lt;li&gt;Meta-Learning for Online Update of Recommender Systems AAAI2022 【自适应最优学习率】&lt;/li&gt;
&lt;li&gt;A Dynamic Meta-Learning Model for Time-Sensitive Cold-Start Recommendations. AAAI 2022 【元学习动态推荐框架】&lt;/li&gt;
&lt;li&gt;Deployable and Continuable Meta-Learning-Based Recommender System with Fast User-Incremental Updates. SIGIR 2022 【基于元学习的可部署可拓展推荐系统】&lt;/li&gt;
&lt;li&gt;MetaCVR: Conversion Rate Prediction via Meta Learning in Small-Scale Recommendation Scenarios. SIGIR 2022 【short paper，小规模推荐场景下的元学习】&lt;/li&gt;
&lt;li&gt;Comprehensive Fair Meta-learned Recommender System. KDD 2022 【元学习公平性框架】&lt;/li&gt;
&lt;li&gt;Learning An Adaptive Meta Model-Generator for Incrementally Updating Recommender Systems. RecSys 2021 【自适应元模型生成器】&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;automl-based&#34;&gt;AutoML-based
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;AutoFAS: Automatic Feature and Architecture Selection for Pre-Ranking System. KDD 2022 【粗排 NAS 搜索】&lt;/li&gt;
&lt;li&gt;Single-shot Embedding Dimension Search in Recommender System. SIGIR 2022 【嵌入维度搜索】&lt;/li&gt;
&lt;li&gt;AutoLossGen: Automatic Loss Function Generation for Recommender Systems. SIGIR 2022 【自动损失函数生成】&lt;/li&gt;
&lt;li&gt;NAS-CTR: Efficient Neural Architecture Search for Click-Through Rate Prediction. SIGIR 2022 【高效的网络结构搜索】&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;causal-inferencecounterfactual&#34;&gt;Causal Inference/Counterfactual
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Counterfactual Evaluation of Slate Recommendations with Sequential Reward Interactions. KDD 2020 【结合序列奖励交互的反事实评估】&lt;/li&gt;
&lt;li&gt;A General Knowledge Distillation Framework for Counterfactual Recommendation via Uniform Data. SIGIR 2020 【反事实推荐的知识蒸馏框架】&lt;/li&gt;
&lt;li&gt;Unbiased Learning for the Causal Effect of Recommendation. RecSys 2020 【推荐因果效应的无偏学习】&lt;/li&gt;
&lt;li&gt;Clicks can be Cheating: Counterfactual Recommendation for Mitigating Clickbait Issue. SIGIR 2021 【缓解虚假点击问题的反事实建议】&lt;/li&gt;
&lt;li&gt;Personalized Counterfactual Fairness in Recommendation. SIGIR 2021 【推荐中个性化的反事实公平性】&lt;/li&gt;
&lt;li&gt;Should Graph Convolution Trust Neighbors? A Simple Causal Inference Method. SIGIR 2021 【因果推断方法分析图卷积网络】&lt;/li&gt;
&lt;li&gt;Counterfactual Data-Augmented Sequential Recommendation. SIGIR 2021 【反事实数据增强】&lt;/li&gt;
&lt;li&gt;CauseRec: Counterfactual User Sequence Synthesis for Sequential Recommendation. SIGIR 2021 【反事实用户序列合成】&lt;/li&gt;
&lt;li&gt;Causal Intervention for Leveraging Popularity Bias in Recommendation. SIGIR 2021 【在推荐中利用流行偏见的因果干预】&lt;/li&gt;
&lt;li&gt;Disentangling User Interest and Conformity for Recommendation with Causal Embedding. WWW 2021 【利用因果解耦用户兴趣和推荐一致性】&lt;/li&gt;
&lt;li&gt;Counterfactual Explainable Recommendation. CIKM 2021【反事实可解释推荐】&lt;/li&gt;
&lt;li&gt;Counterfactual Review-based Recommendation. CIKM 2021【基于评论的反事实推荐】&lt;/li&gt;
&lt;li&gt;Top-N Recommendation with Counterfactual User Preference Simulation. CIKM 2021【反事实用户偏好模拟的 Top-N 推荐】&lt;/li&gt;
&lt;li&gt;CausCF: Causal Collaborative Filtering for Recommendation Effect Estimation. CIKM 2021【applied paper，因果关系协同过滤用于推荐效果评估】&lt;/li&gt;
&lt;li&gt;CauSeR: Causal Session-based Recommendations for Handling Popularity Bias. CIKM 2021【short paper，用于流行度去偏的因果关系序列推荐】&lt;/li&gt;
&lt;li&gt;Dynamic Causal Collaborative Filtering. CIKM 2022 【动态因果协同过滤】&lt;/li&gt;
&lt;li&gt;Towards Unbiased and Robust Causal Ranking for Recommender Systems. WSDM 2022【推荐系统的无偏和稳健因果排名】&lt;/li&gt;
&lt;li&gt;A Counterfactual Modeling Framework for Churn Prediction. WSDM 2022 【客户流失预测的反事实建模框架】&lt;/li&gt;
&lt;li&gt;Model-Agnostic Counterfactual Reasoning for Eliminating Popularity Bias in Recommender System. KDD 2021 【不可知反事实推理模型消除推荐系统的流行偏差】&lt;/li&gt;
&lt;li&gt;Practical Counterfactual Policy Learning for Top-K Recommendations. KDD 2022 【反事实框架】&lt;/li&gt;
&lt;li&gt;Alleviating Spurious Correlations in Knowledge-aware Recommendations through Counterfactual Generator. SIGIR 2022 【利用反事实生成器缓解假知识】&lt;/li&gt;
&lt;li&gt;Online Evaluation Methods for the Causal Effect of Recommendations. RecSys 2021 【推荐中因果效应的在线评估方法】&lt;/li&gt;
&lt;li&gt;Causal Representation Learning for Out-of-Distribution Recommendation. WWW 2022 【利用因果模型解决用户特征变化问题】&lt;/li&gt;
&lt;li&gt;A Model-Agnostic Causal Learning Framework for Recommendation using Search Data. WWW 2022 【将搜索数据作为工具变量，解耦推荐中的因果部分和非因果部分】&lt;/li&gt;
&lt;li&gt;Causal Preference Learning for Out-of-Distribution Recommendation. WWW 2022 【从观察数据可用的正反馈中联合学习具有因果结构的不变性偏好，再用发现的不变性偏好继续做预测】&lt;/li&gt;
&lt;li&gt;Learning to Augment for Casual User Recommendation. WWW 2022 【通过数据增强来增强对随机用户的推荐性能】&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;other-techniques&#34;&gt;Other Techniques
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Neural Input Search for Large Scale Recommendation Models. KDD 2020 【大规模推荐模型的神经输入搜索】&lt;/li&gt;
&lt;li&gt;Compositional Embeddings Using Complementary Partitions for Memory-Efficient Recommendation Systems. KDD 2020 【使用互补分区的组合嵌入用于内存高效的推荐系统】&lt;/li&gt;
&lt;li&gt;Field-aware Embedding Space Searching in Recommender Systems. WWW 2021 【推荐系统中的域感知向量空间搜索】&lt;/li&gt;
&lt;li&gt;PROPN: Personalized Probabilistic Strategic Parameter Optimization in Recommendations. CIKM 2022 【推荐中的个性化概率策略参数优化】&lt;/li&gt;
&lt;li&gt;Generalized Deep Mixed Models. KDD 2022 【集成 DNN 和 LR 增强】&lt;/li&gt;
&lt;li&gt;Leaping through Time with Gradient-Based Adaptation for Recommendation. AAAI 2022 【基于轨迹的元学习】&lt;/li&gt;
&lt;li&gt;Forest-based Deep Recommender. SIGIR 2022 【深度森林】&lt;/li&gt;
&lt;li&gt;cDLRM: Look Ahead Caching for Scalable Training of Recommendation Models. RecSys 2021 【用于推荐模型可扩展训练的高速缓存】&lt;/li&gt;
&lt;li&gt;Hierarchical Latent Relation Modeling for Collaborative Metric Learning. RecSys 2021 【协作度量学习的层次潜在关系建模】&lt;/li&gt;
&lt;li&gt;Learning to Represent Human Motives for Goal-directed Web Browsing. RecSys 2021 【引入人类动机的心理学构建浏览框架】&lt;/li&gt;
&lt;li&gt;Together is Better: Hybrid Recommendations Combining Graph Embeddings and Contextualized Word Representations. RecSys 2021 【结合图表示和上下文单词表示的混合推荐】&lt;/li&gt;
&lt;li&gt;A Constrained Optimization Approach for Calibrated Recommendations. RecSys 2021 【LBR，结合精度和校准的约束优化方法】&lt;/li&gt;
&lt;li&gt;Eigenvalue Perturbation for Item-based Recommender Systems. RecSys 2021 【LBR，物品推荐中特征值扰动的分析】&lt;/li&gt;
&lt;li&gt;Optimizing the Selection of Recommendation Carousels with Quantum Computing. RecSys 2021【LBR，用量子计算优化音乐歌单推荐】&lt;/li&gt;
&lt;li&gt;Towards Recommender Systems with Community Detection and Quantum Computing. RecSys 2022【LBR，利用量子计算进行社区检测】&lt;/li&gt;
&lt;li&gt;Dual Attentional Higher Order Factorization Machines. RecSys 2022 【双注意高阶因式分解机】&lt;/li&gt;
&lt;li&gt;You Say Factorization Machine, I Say Neural Network – It’s All in the Activation. RecSys 2022 【通过激活函数建立因子分解机和神经网络的联系】&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>留一法和留出法</title>
        <link>http://localhost:1313/p/%E7%95%99%E4%B8%80%E6%B3%95%E5%92%8C%E7%95%99%E5%87%BA%E6%B3%95/</link>
        <pubDate>Thu, 27 Feb 2025 00:48:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E7%95%99%E4%B8%80%E6%B3%95%E5%92%8C%E7%95%99%E5%87%BA%E6%B3%95/</guid>
        <description>&lt;p&gt;留一法（Leave-One-Out）和留出法（Holdout）是常用的数据集划分方法，它们在训练集和验证集的构建方式上有所不同：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;留一法 (Leave-One-Out)&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;留一法是一种极端的交叉验证方法，对于每一个样本，将其作为验证集，其余样本作为训练集。&lt;/li&gt;
&lt;li&gt;对于有n个样本的数据集，留一法会进行n次训练和验证，每次训练集包含n-1个样本，验证集包含1个样本。&lt;/li&gt;
&lt;li&gt;这种方法对于数据集较小的情况下比较适用，但是计算开销较大，尤其是在数据集较大时。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;留出法 (Holdout)&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;留出法是将数据集分成两部分：训练集和测试集，其中训练集用于模型的训练，测试集用于模型的评估。&lt;/li&gt;
&lt;li&gt;通常情况下，留出法会将数据集划分为训练集和测试集，例如常见的划分比例是70%的数据作为训练集，30%的数据作为测试集。&lt;/li&gt;
&lt;li&gt;留出法的优点是简单直观，计算开销小。但是如果数据量较少，可能会导致模型评估结果不够准确，因为有限的数据可能无法全面反映模型的泛化能力。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;总的来说，留一法是一种更严格的交叉验证方法，但计算开销较大；留出法则是一种简单直观的划分方法，适用于数据量较大的情况下。选择哪种方法取决于具体的应用场景、数据量和计算资源等因素&lt;/p&gt;
&lt;p&gt;对于序列推荐任务，通常情况下留一法（Leave-One-Out）比留出法（Holdout）更合适，这是因为序列推荐任务中的数据存在时间序列关系，留一法更能够有效地评估模型在序列数据上的泛化能力。&lt;/p&gt;
&lt;p&gt;具体来说，序列推荐任务中，每个用户的行为序列是按照时间顺序排列的，模型需要根据用户过去的行为来预测下一个行为。在这种情况下，留一法可以更好地模拟真实的应用场景：模型需要根据用户之前的行为来进行预测，并且预测的结果需要在当前时间点之后的行为进行验证。&lt;/p&gt;
&lt;p&gt;留一法的优势在于：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;考虑了序列数据中的时间顺序关系，更符合实际应用场景。&lt;/li&gt;
&lt;li&gt;对于每个用户的行为序列，可以使用最后一个行为作为验证集，其余行为作为训练集，更能够反映模型在序列数据上的泛化能力。&lt;/li&gt;
&lt;li&gt;与留出法相比，留一法更适合于序列推荐任务，可以提供更准确的模型评估结果。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因此，对于序列推荐任务，推荐使用留一法作为数据集划分的方式。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>2024会议论文总结</title>
        <link>http://localhost:1313/p/2024%E4%BC%9A%E8%AE%AE%E8%AE%BA%E6%96%87%E6%80%BB%E7%BB%93/</link>
        <pubDate>Sat, 08 Feb 2025 00:48:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/2024%E4%BC%9A%E8%AE%AE%E8%AE%BA%E6%96%87%E6%80%BB%E7%BB%93/</guid>
        <description>&lt;h2 id=&#34;sigir-2024&#34;&gt;SIGIR 2024
&lt;/h2&gt;&lt;p&gt;13/107&lt;/p&gt;
&lt;p&gt;Self-Augmented Graph Neural Networks for Sequential Recommendation
IISAN: Efficiently Adapting Multimodal Representation for Sequential Recommendation with Decoupled PEFT
Disentangled Contrastive Hypergraph Learning for Next POI Recommendation
A Generic Behavior-Aware Data Augmentation Framework for Sequential Recommendation
Exploring Fine-grained Sequential Recommendation 探索细粒度的顺序推荐
Sequential Recommendation with Latent Relations based on Large Language Model
Sequential Recommendation with Collaborative Explanation via Mutual Information Maximization
Enhancing Sequential Recommenders with Augmented Knowledge from Aligned Large Language Models
Modeling User Fatigue for Sequential Recommendation
Scaling Sequential Recommendation Models with Transformers
Sequential Recommendation for Optimizing Both Immediate Feedback and Long-term Retention
Explainable Uncertainty Attribution for Sequential Recommendation
Multi-intent-aware Session-based Recommendation
13/107&lt;/p&gt;
&lt;h2 id=&#34;www-2024&#34;&gt;WWW 2024
&lt;/h2&gt;&lt;p&gt;8/65
Intelligent Model Update Strategy for Sequential Recommendation
Rethinking Cross-Domain Sequential Recommendation under Open-World Assumptions
Harnessing Large Language Models for Text-Rich Sequential Recommendation
Efficient Noise-Decoupling for Multi-Behavior Sequential Recommendation
UnifiedSSR: A Unified Framework of Sequential Search and Recommendation
ReLLa: Retrieval-enhanced Large Language Models for Lifelong Sequential Behavior Comprehension in Recommendation
（Modeling Balanced Explicit and¬†Implicit Relations with Contrastive Learning for Knowledge Concept Recommendation in MOOCs）&lt;/p&gt;
&lt;p&gt;Is Contrastive Learning Necessary? A Study of Data Augmentation vs Contrastive Learning in Sequential Recommendation&lt;/p&gt;
&lt;h2 id=&#34;aaai-2024&#34;&gt;AAAI 2024
&lt;/h2&gt;&lt;p&gt;5/37
Sparse Enhanced Network: An Adversarial Generation Method for Robust Augmentation in Sequential Recommendation
Temporal Graph Contrastive Learning for Sequential Recommendation
Dual-view Whitening on Pre-trained Text Embeddings for Sequential Recommendation
Ada-Retrieval: An Adaptive Multi-Round Retrieval Paradigm for Sequential Recommendations
An Attentive Inductive Bias for Sequential Recommendation beyond the Self-Attention&lt;/p&gt;
&lt;h2 id=&#34;kdd&#34;&gt;KDD
&lt;/h2&gt;&lt;h2 id=&#34;recsys-2024&#34;&gt;RecSys 2024
&lt;/h2&gt;&lt;p&gt;序列推荐[3,18,42,45,46,48]
对比学习[6,11,12,27,33]
Adaptive Fusion of Multi-View for Graph Contrastive Recommendation
CALRec: Contrastive Alignment of Generative LLMs For Sequential Recommendation&lt;/p&gt;
&lt;p&gt;Information-Controllable Graph Contrastive Learning for Recommendation
MMGCL: Meta Knowledge-Enhanced Multi-view Graph Contrastive Learning for Recommendations&lt;/p&gt;
&lt;p&gt;（ ConFit: Improving Resume-Job Matching using Data Augmentation and Contrastive Learning）&lt;/p&gt;
&lt;h3 id=&#34;wsdm-2024&#34;&gt;WSDM 2024
&lt;/h3&gt;&lt;p&gt;13/112
Debiasing Sequential Recommenders through Distributionally Robust Optimization over System Exposure
Global Heterogeneous Graph and Target Interest Denoising for Multi-behavior Sequential Recommendation
To Copy, or not to Copy; That is a Critical Issue of the Output Softmax Layer in Neural Sequential Recommenders
Linear Recurrent Units for Sequential Recommendation
User Behavior Enriched Temporal Knowledge Graph for Sequential Recommendation
Intent Contrastive Learning with Cross Subsequences for Sequential Recommendation
Collaboration and Transition: Distilling Item Transitions into Multi-Query Self-Attention for Sequential Recommendation
Contextual MAB Oriented Embedding Denoising for Sequential Recommendation
Mixed Attention Network for Cross-domain Sequential Recommendation
Multi-Sequence Attentive User Representation Learning for Side-information Integrated Sequential Recommendation
RecJPQ: Training Large-Catalogue Sequential Recommenders
Attribute Simulation for Item Embedding Enhancement in Multi-interest Recommendation
Global Heterogeneous Graph and Target Interest Denoising for Multi-behavior Sequential Recommendation&lt;/p&gt;
&lt;h2 id=&#34;icde-2024&#34;&gt;ICDE 2024
&lt;/h2&gt;&lt;p&gt;Sequential Recommendation with User Causal Behavior Discovery
Incremental Learning for Multi-Interest Sequential Recommendation
Contrastive Enhanced Slide Filter Mixer for Sequential Recommendation&lt;/p&gt;
&lt;p&gt;Large Language Models for Intent-Driven Session Recommendations
&lt;a class=&#34;link&#34; href=&#34;https://arxiv.org/pdf/2312.07552&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://arxiv.org/pdf/2312.07552&lt;/a&gt;
LLaRA: Large Language-Recommendation Assistant
&lt;a class=&#34;link&#34; href=&#34;https://arxiv.org/pdf/2312.02445&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://arxiv.org/pdf/2312.02445&lt;/a&gt;
Sequential Recommendation with Latent Relations based on Large Language Model
&lt;a class=&#34;link&#34; href=&#34;https://arxiv.org/pdf/2403.18348&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://arxiv.org/pdf/2403.18348&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MA-GCL: Model Augmentation Tricks for Graph Contrastive Learning （AAAI’23）
Disentangled Contrastive Collaborative Filtering (SIGIR’23)解耦对比协同过滤「简述：」作者认为现有的图对比学习算法忽略了用户-物品交互行为通常由多样的潜在意图因素驱动的事实，并且它们引入的非自适应增强技术容易受到噪声信息的影响。为了解决这些问题，作者提出了一个解耦对比协同过滤框架，通过学习具有全局上下文的解耦表示来实现意图解耦，并利用参数化交互掩码生成器引入跨视图对比学习任务以实现自适应增强&lt;/p&gt;
&lt;p&gt;Meta-optimized Contrastive Learning for Sequential Recommendation (SIGIR’23)序列推荐中的元优化对比学习「简述：」论文提出了一种元优化对比学习框架MCLRec，用于序列推荐。该模型通过应用数据增强和可学习的模型增强操作来创新标准的CL框架，以自适应地捕捉隐藏在随机数据增强中的有信息的特征。此外，MCLRec利用元学习方式指导模型增强器的更新，以提高对比对的质量，而无需增加输入数据的数量。最后，作者引入了一个对比正则化项，以鼓励增强模型生成更具信息量的增强视图，并避免在元更新中出现过于相似的对比对。在常用的数据集上的实验结果表明，MCLRec是有效的。&lt;/p&gt;
&lt;p&gt;Dual Contrastive Transformer for Hierarchical Preference Modeling in Sequential Recommendation (SIGIR’23)用于序列推荐中层次化偏好建模的双对比Transformer「简述：」本文提出了一种新的层次化偏好建模框架，用于准确地进行序列推荐。该框架设计了一个新颖的双重转换器模块和双重对比学习方案，以区分性地学习用户的低层次和高层次偏好，并有效地增强低层次和高层次偏好的学习。此外，还设计了一种新的语义增强上下文嵌入模块，以生成更丰富的上下文嵌入，进一步提高推荐性能。在六个真实数据集上的大量实验表明，该方法优于现有方法，并且设计合理。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>wandb使用</title>
        <link>http://localhost:1313/p/wandb%E4%BD%BF%E7%94%A8/</link>
        <pubDate>Sat, 08 Feb 2025 00:48:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/wandb%E4%BD%BF%E7%94%A8/</guid>
        <description>&lt;h2 id=&#34;wandbinit&#34;&gt;wandb.init
&lt;/h2&gt;&lt;p&gt;初始化一个新的wandb实验，并开始记录实验的信息和结果
函数功能：用于初始化一个新的 wandb 实验，并开始记录实验的信息和结果。
函数说明：wandb.init(project=None, entity=None, group=None, job_type=None, config=None,
tags=None, resume=False, dir=None, name=None, notes=None, id=None,
magic=None, anonymous=None, allow_val_change=False, reinit=False, settings=None,)
参数说明：
project：实验所属的项目名称。
entity：实验所属的实体（例如，团队或用户）。
group：实验的分组名称。
job_type：实验的类型（例如，训练、评估等）。
config：实验的配置参数，可以是一个字典或 Namespace 对象。
tags：实验的标签，可以是一个字符串列表。
resume：如果为 True，则尝试恢复先前的实验。默认为 False。
dir：存储实验数据和日志的目录路径。
name：实验的名称。
notes：实验的说明或注释。
id：实验的唯一标识符。
magic：用于指定特殊功能的魔法命令。
anonymous：如果为 True，则匿名上传实验结果。默认为 False。
allow_val_change：如果为 True，则允许修改已存在的配置参数。默认为 False。
reinit：如果为 True，则重新初始化实验，忽略先前的配置。默认为 False。
settings：一个字典，用于设置实验的其他参数。
返回参数：
一个 wandb.Run 对象，代表当前的实验运行。&lt;/p&gt;
&lt;h2 id=&#34;wandbconfigupdate-更新实验的配置参数&#34;&gt;wandb.config.update() ：更新实验的配置参数
&lt;/h2&gt;&lt;p&gt;函数功能：用于更新当前实验的配置参数。 ———— 配置参数是在 wandb.init() 函数中指定的，并且可以在实验的整个运行过程中进行更新。
函数说明：wandb.config.update(new_config=None, allow_val_change=None, **kwargs)
参数说明：
new_config：一个字典或 Namespace 对象，包含要更新的配置参数。
allow_val_change：如果为 True，则允许修改已存在的配置参数。默认为 False。
**kwargs：关键字参数，用于更新配置参数。&lt;/p&gt;
&lt;h2 id=&#34;wandblog-记录实验指标和日志信息&#34;&gt;wandb.log ：记录实验指标和日志信息
&lt;/h2&gt;&lt;p&gt;函数功能：用于记录实验中的指标、损失、评估结果、日志信息等，并将它们保存到 Weights &amp;amp; Biases（wandb）平台上，以便后续分析和可视化。
函数说明：wandb.log(data, step=None, commit=True, sync=True)
参数说明：
data：要记录的数据，可以是一个字典、列表、数字、字符串等。通常用于记录指标、损失等信息。
step：可选参数，表示记录的步骤或轮数。如果不提供，则默认为当前步骤或轮数。
commit：可选参数，表示是否立即提交记录。默认为 True，表示立即提交。
sync：可选参数，表示是否同步记录到云端。默认为 True，表示同步记录。&lt;/p&gt;
&lt;h2 id=&#34;wandbfinish结束实验记录&#34;&gt;wandb.finish()：结束实验记录
&lt;/h2&gt;&lt;p&gt;函数功能：用于结束当前的实验记录，并将记录的数据保存到 wandb平台上。
函数说明：wandb.finish(exit_code: Optional[int] = None, quiet: Optional[bool] = None)
参数说明：
exit_code	设置为 0 以外的值将运行标记为失败
quiet	    设置为 true 以最小化日志输出&lt;/p&gt;
&lt;h2 id=&#34;使用超参调优&#34;&gt;使用超参调优
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;配置 sweep_config&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;选择一个调优算法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;(1)网格搜索： grid. 遍历所有可能得&lt;a class=&#34;link&#34; href=&#34;https://www.zhihu.com/search?q=%e8%b6%85%e5%8f%82%e7%bb%84%e5%90%88&amp;amp;search_source=Entity&amp;amp;hybrid_search_source=Entity&amp;amp;hybrid_search_extra=%7b%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2888653364%7d&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;超参组合&lt;/a&gt;，只在超参空间不大的时候使用，否则会非常慢。(2)随机搜索：random. 每个超参数都选择一个随机值，非常有效，&lt;strong&gt;一般情况下建议使用&lt;/strong&gt;。(3)贝叶斯搜索： bayes. 创建一个概率模型估计不同超参数组合的效果，采样有更高概率提升优化目标的超参数组合。对&lt;strong&gt;连续型的超参数特别有效&lt;/strong&gt;，但扩展到非常高维度的超参数时效果不好。&lt;/p&gt;
&lt;p&gt;sweep_config = {’method‘：’random‘}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;定义优化目标&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;sweep agents 通过 wandb.log 的形式向 sweep controller 传递优化目标的值。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;metric&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;val_acc&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;goal&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;maximize&amp;#39;&lt;/span&gt;       &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sweep_config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;metric&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;metric&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;定义超参空间&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;超参空间可以分成 固定型，离散型和连续型。&lt;/p&gt;
&lt;p&gt;固定型：指定 value&lt;/p&gt;
&lt;p&gt;离散型：指定 values，列出全部候选取值。&lt;/p&gt;
&lt;p&gt;连续性：需要指定 分布类型 distribution, 和范围 min, max。用于 random 或者 bayes采样。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sweep_config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;parameters&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 固定不变的超参&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sweep_config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;parameters&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;update&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;project_name&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;wandb_demo&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;epochs&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;ckpt_path&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;checkpoint.pt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 离散型分布超参&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sweep_config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;parameters&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;update&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;optim_type&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s1&#34;&gt;&amp;#39;values&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Adam&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;SGD&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;AdamW&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;hidden_layer_width&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s1&#34;&gt;&amp;#39;values&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;48&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;96&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;112&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 连续型分布超参&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sweep_config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;parameters&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;update&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;lr&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s1&#34;&gt;&amp;#39;distribution&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;log_uniform_values&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s1&#34;&gt;&amp;#39;min&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1e-6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s1&#34;&gt;&amp;#39;max&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;batch_size&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s1&#34;&gt;&amp;#39;distribution&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;q_uniform&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s1&#34;&gt;&amp;#39;q&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s1&#34;&gt;&amp;#39;min&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s1&#34;&gt;&amp;#39;max&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;dropout_p&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s1&#34;&gt;&amp;#39;distribution&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;uniform&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s1&#34;&gt;&amp;#39;min&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s1&#34;&gt;&amp;#39;max&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;assets/image-20240708204835865.png&#34; alt=&#34;image-20240708204835865&#34; style=&#34;zoom: 67%;&#34; /&gt;
&lt;img src=&#34;assets/image-20240708204913858.png&#34; alt=&#34;image-20240708204913858&#34; style=&#34;zoom:67%;&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;初始化sweep controller&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sweep_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wandb&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sweep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sweep_config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;project&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;projext就是当前项目的名字&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;启动 sweep agents:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;wandb&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;agent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sweep_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;train&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        
    </channel>
</rss>
